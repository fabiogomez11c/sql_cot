question,answer,context,result,is_correct,model_name,correct,prediction,error,temperature
How many heads of the departments are older than 56 ?,SELECT COUNT(*) FROM head WHERE age > 56,CREATE TABLE head (age INTEGER),SELECT COUNT(*) FROM head WHERE age > 56,True,gpt-3.5-turbo-0125,"_col_0
     3","_col_0
     3",,0.0
"List the name, born state and age of the heads of departments ordered by age.","SELECT name, born_state, age FROM head ORDER BY age","CREATE TABLE head (name VARCHAR, born_state VARCHAR, age VARCHAR)","SELECT name, born_state, age FROM head ORDER BY age",True,gpt-3.5-turbo-0125,"name born_state age
Emil    Florida  35
Jane   New York  40
Davi   Illinois  42
John California  45
Mich      Texas  50","name born_state age
Emil    Florida  35
Jane   New York  40
Davi   Illinois  42
John California  45
Mich      Texas  50",,0.0
"List the creation year, name and budget of each department.","SELECT creation, name, budget_in_billions FROM department","CREATE TABLE department (creation VARCHAR, name VARCHAR, budget_in_billions VARCHAR)","SELECT creation, name, budget_in_billions FROM department",True,gpt-3.5-turbo-0125,"creation name budget_in_billions
    2005 Fina                2.5
    2010 Huma                1.8
    2015 Mark                3.2
    2000   IT                4.6
    2018 Rese                5.3","creation name budget_in_billions
    2005 Fina                2.5
    2010 Huma                1.8
    2015 Mark                3.2
    2000   IT                4.6
    2018 Rese                5.3",,0.0
What are the maximum and minimum budget of the departments?,"SELECT MAX(budget_in_billions), MIN(budget_in_billions) FROM department",CREATE TABLE department (budget_in_billions INTEGER),"SELECT MAX(budget_in_billions) AS maximum_budget, MIN(budget_in_billions) AS minimum_budget FROM department",False,gpt-3.5-turbo-0125,"_col_0 _col_1
     5      1","maximum_budget minimum_budget
             5              1",,0.0
What is the average number of employees of the departments whose rank is between 10 and 15?,SELECT AVG(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15,"CREATE TABLE department (num_employees INTEGER, ranking INTEGER)",SELECT AVG(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15,True,gpt-3.5-turbo-0125,"_col_0
63.333","_col_0
63.333",,0.0
What are the names of the heads who are born outside the California state?,SELECT name FROM head WHERE born_state <> 'California',"CREATE TABLE head (name VARCHAR, born_state VARCHAR)",SELECT name FROM head WHERE born_state <> 'California',True,gpt-3.5-turbo-0125,"name
John
Jane
Mich
Emil
Davi","name
John
Jane
Mich
Emil
Davi",,0.0
What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?,SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama',"CREATE TABLE department (creation VARCHAR, department_id VARCHAR); CREATE TABLE management (department_id VARCHAR, head_id VARCHAR); CREATE TABLE head (head_id VARCHAR, born_state VARCHAR)",SELECT DISTINCT d.creation FROM department d JOIN management m ON d.department_id = m.department_id JOIN head h ON m.head_id = h.head_id WHERE h.born_state = 'Alabama',True,gpt-3.5-turbo-0125,"creation
    2015
    2018
    2019","creation
    2015
    2018
    2019",,0.0
What are the names of the states where at least 3 heads were born?,SELECT born_state FROM head GROUP BY born_state HAVING COUNT(*) >= 3,CREATE TABLE head (born_state VARCHAR),SELECT born_state FROM head GROUP BY born_state HAVING COUNT(*) >= 3,True,gpt-3.5-turbo-0125,"born_state
California","born_state
California",,0.0
In which year were most departments established?,SELECT creation FROM department GROUP BY creation ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE department (creation VARCHAR),"SELECT SUBSTRING(creation, 7) AS year, COUNT(*) AS num_departments FROM department GROUP BY year ORDER BY num_departments DESC LIMIT 1",False,gpt-3.5-turbo-0125,"creation
    2015","year num_departments
                   5",,0.0
Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?,"SELECT T1.name, T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'","CREATE TABLE management (department_id VARCHAR, temporary_acting VARCHAR); CREATE TABLE department (name VARCHAR, num_employees VARCHAR, department_id VARCHAR)","SELECT department.name, department.num_employees FROM department JOIN management ON department.department_id = management.department_id WHERE management.temporary_acting = 'Yes'",True,gpt-3.5-turbo-0125,"name num_employees
  HR            50
Mark            40
  IT            60","name num_employees
  HR            50
Mark            40
  IT            60",,0.0
How many acting statuses are there?,SELECT COUNT(DISTINCT temporary_acting) FROM management,CREATE TABLE management (temporary_acting VARCHAR),SELECT COUNT(DISTINCT temporary_acting) AS acting_statuses FROM management,False,gpt-3.5-turbo-0125,"_col_0
     5","acting_statuses
              5",,0.0
How many departments are led by heads who are not mentioned?,SELECT COUNT(*) FROM department WHERE NOT department_id IN (SELECT department_id FROM management),CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR),SELECT COUNT(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management),True,gpt-3.5-turbo-0125,"_col_0
     0","_col_0
     0",,0.0
What are the distinct ages of the heads who are acting?,SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes',"CREATE TABLE head (age VARCHAR, head_id VARCHAR); CREATE TABLE management (head_id VARCHAR, temporary_acting VARCHAR)",SELECT DISTINCT age FROM head WHERE head_id IN (SELECT head_id FROM management WHERE temporary_acting = 'acting'),False,gpt-3.5-turbo-0125,"age
 30
 40
 50",age,,0.0
"Which department has more than 1 head at a time? List the id, name and the number of heads.","SELECT T1.department_id, T1.name, COUNT(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING COUNT(*) > 1","CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR, name VARCHAR)","SELECT department.department_id, department.name, COUNT(*) AS num_heads FROM department JOIN management ON department.department_id = management.department_id GROUP BY department.department_id, department.name HAVING COUNT(*) > 1;",False,gpt-3.5-turbo-0125,department_id name _col_2,department_id name num_heads,,0.0
Which head's name has the substring 'Ha'? List the id and name.,"SELECT head_id, name FROM head WHERE name LIKE '%Ha%'","CREATE TABLE head (head_id VARCHAR, name VARCHAR)","SELECT head_id, name FROM head WHERE name LIKE '%Ha%'",True,gpt-3.5-turbo-0125,"head_id name
      1 Hann
      2 Harp","head_id name
      1 Hann
      2 Harp",,0.0
How many farms are there?,SELECT COUNT(*) FROM farm,CREATE TABLE farm (Id VARCHAR),SELECT COUNT(*) FROM farm,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
List the total number of horses on farms in ascending order.,SELECT Total_Horses FROM farm ORDER BY Total_Horses,CREATE TABLE farm (Total_Horses VARCHAR),SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC,True,gpt-3.5-turbo-0125,"total_horses
          10
          15
          20
          25
          30","total_horses
          10
          15
          20
          25
          30",,0.0
"What are the hosts of competitions whose theme is not ""Aliens""?",SELECT Hosts FROM farm_competition WHERE Theme <> 'Aliens',"CREATE TABLE farm_competition (Hosts VARCHAR, Theme VARCHAR)",SELECT Hosts FROM farm_competition WHERE Theme <> 'Aliens',True,gpt-3.5-turbo-0125,"hosts
 John
Sarah
Micha
Emily
David","hosts
 John
Sarah
Micha
Emily
David",,0.0
What are the themes of farm competitions sorted by year in ascending order?,SELECT Theme FROM farm_competition ORDER BY YEAR,"CREATE TABLE farm_competition (Theme VARCHAR, YEAR VARCHAR)",SELECT Theme FROM farm_competition ORDER BY YEAR ASC,True,gpt-3.5-turbo-0125,"theme
Lives
Crop 
Farm 
Best 
Organ","theme
Lives
Crop 
Farm 
Best 
Organ",,0.0
What is the average number of working horses of farms with more than 5000 total number of horses?,SELECT AVG(Working_Horses) FROM farm WHERE Total_Horses > 5000,"CREATE TABLE farm (Working_Horses INTEGER, Total_Horses INTEGER)",SELECT AVG(Working_Horses) FROM farm WHERE Total_Horses > 5000,True,gpt-3.5-turbo-0125,"_col_0
  13.0","_col_0
  13.0",,0.0
What are the maximum and minimum number of cows across all farms.,"SELECT MAX(Cows), MIN(Cows) FROM farm",CREATE TABLE farm (Cows INTEGER),"SELECT MAX(Cows) AS max_cows, MIN(Cows) AS min_cows FROM farm",False,gpt-3.5-turbo-0125,"_col_0 _col_1
    20      5","max_cows min_cows
      20        5",,0.0
How many different statuses do cities have?,SELECT COUNT(DISTINCT Status) FROM city,CREATE TABLE city (Status VARCHAR),SELECT COUNT(DISTINCT Status) AS num_statuses FROM city,False,gpt-3.5-turbo-0125,"_col_0
     5","num_statuses
           5",,0.0
List official names of cities in descending order of population.,SELECT Official_Name FROM city ORDER BY Population DESC,"CREATE TABLE city (Official_Name VARCHAR, Population VARCHAR)",SELECT Official_Name FROM city ORDER BY Population DESC,True,gpt-3.5-turbo-0125,"official_name
     New York
  Los Angeles
      Chicago
      Houston
      Phoenix","official_name
     New York
  Los Angeles
      Chicago
      Houston
      Phoenix",,0.0
List the official name and status of the city with the largest population.,"SELECT Official_Name, Status FROM city ORDER BY Population DESC LIMIT 1","CREATE TABLE city (Official_Name VARCHAR, Status VARCHAR, Population VARCHAR)","SELECT Official_Name, Status FROM city ORDER BY Population DESC LIMIT 1",True,gpt-3.5-turbo-0125,"official_name status
New York City Metrop","official_name status
New York City Metrop",,0.0
Show the years and the official names of the host cities of competitions.,"SELECT T2.Year, T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID","CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR); CREATE TABLE farm_competition (Year VARCHAR, Host_city_ID VARCHAR)","SELECT farm_competition.Year, city.Official_Name FROM farm_competition JOIN city ON farm_competition.Host_city_ID = city.City_ID;",True,gpt-3.5-turbo-0125,"year official_name
2020      New York
2021   Los Angeles
2022       Chicago
2023       Houston
2024         Miami","year official_name
2020      New York
2021   Los Angeles
2022       Chicago
2023       Houston
2024         Miami",,0.0
Show the official names of the cities that have hosted more than one competition.,SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) > 1,"CREATE TABLE farm_competition (Host_city_ID VARCHAR); CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR)",SELECT c.Official_Name FROM city c JOIN (SELECT Host_city_ID FROM farm_competition GROUP BY Host_city_ID HAVING COUNT(*) > 1) fc ON c.City_ID = fc.Host_city_ID,True,gpt-3.5-turbo-0125,official_name,official_name,,0.0
Please show the themes of competitions with host cities having populations larger than 1000.,SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000,"CREATE TABLE city (City_ID VARCHAR, Population INTEGER); CREATE TABLE farm_competition (Theme VARCHAR, Host_city_ID VARCHAR)",SELECT fc.Theme FROM farm_competition fc JOIN city c ON fc.Host_city_ID = c.City_ID WHERE c.Population > 1000;,True,gpt-3.5-turbo-0125,"theme
Best 
Farm 
Lives
Agric
Crop ","theme
Best 
Farm 
Lives
Agric
Crop ",,0.0
Please show the different statuses of cities and the average population of cities with each status.,"SELECT Status, AVG(Population) FROM city GROUP BY Status","CREATE TABLE city (Status VARCHAR, Population INTEGER)","SELECT Status, AVG(Population) AS Average_Population FROM city GROUP BY Status",False,gpt-3.5-turbo-0125,"status _col_1
Active 12333.
Inacti 6500.0","status average_population
Active 12333.333333333334
Inacti             6500.0",,0.0
"Please show the different statuses, ordered by the number of cities that have each.",SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*),CREATE TABLE city (Status VARCHAR),"SELECT Status, COUNT(*) AS num_cities FROM city GROUP BY Status ORDER BY num_cities DESC",False,gpt-3.5-turbo-0125,"status
Inacti
Pendin
Active","status num_cities
Active          3
Inacti          1
Pendin          1",,0.0
List the most common type of Status across cities.,SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE city (Status VARCHAR),"SELECT Status, COUNT(Status) AS count FROM city GROUP BY Status ORDER BY count DESC LIMIT 1",False,gpt-3.5-turbo-0125,"status
Active","status count
Active     3",,0.0
List the official names of cities that have not held any competition.,SELECT Official_Name FROM city WHERE NOT City_ID IN (SELECT Host_city_ID FROM farm_competition),"CREATE TABLE farm_competition (Official_Name VARCHAR, City_ID VARCHAR, Host_city_ID VARCHAR); CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR, Host_city_ID VARCHAR)",SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT City_ID FROM farm_competition),True,gpt-3.5-turbo-0125,"official_name
       City F
       City G
       City H
       City I
       City J","official_name
       City F
       City G
       City H
       City I
       City J",,0.0
Show the status shared by cities with population bigger than 1500 and smaller than 500.,SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500,"CREATE TABLE city (Status VARCHAR, Population INTEGER)",SELECT Status FROM city WHERE Population > 1500 AND Population < 500,False,gpt-3.5-turbo-0125,"status
   Big",status,,0.0
what is id of students who registered some courses but the least number of courses in these students?,SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY COUNT(*) LIMIT 1,CREATE TABLE student_course_registrations (student_id VARCHAR),SELECT student_id FROM student_course_registrations GROUP BY student_id HAVING COUNT(*) = (SELECT MIN(course_count) FROM (SELECT COUNT(*) as course_count FROM student_course_registrations GROUP BY student_id) as counts),False,gpt-3.5-turbo-0125,"student_id
       101","student_id
       101
       123
       202
       456
       789",,0.0
what are the first name and last name of all candidates?,"SELECT T2.first_name, T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id","CREATE TABLE candidates (candidate_id VARCHAR); CREATE TABLE people (first_name VARCHAR, last_name VARCHAR, person_id VARCHAR)","SELECT p.first_name, p.last_name FROM people p JOIN candidates c ON p.person_id = c.candidate_id",True,gpt-3.5-turbo-0125,"first_name last_name
      John       Doe
      Jane     Smith
   Michael   Johnson
     Sarah  Williams
     David     Brown","first_name last_name
      John       Doe
      Jane     Smith
   Michael   Johnson
     Sarah  Williams
     David     Brown",,0.0
List the id of students who never attends courses?,SELECT student_id FROM students WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance),CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE students (student_id VARCHAR),SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance),True,gpt-3.5-turbo-0125,student_id,student_id,,0.0
List the id of students who attended some courses?,SELECT student_id FROM student_course_attendance,CREATE TABLE student_course_attendance (student_id VARCHAR),SELECT student_id FROM student_course_attendance,True,gpt-3.5-turbo-0125,"student_id
      S001
      S002
      S003
      S004
      S005","student_id
      S001
      S002
      S003
      S004
      S005",,0.0
What are the ids of all students for courses and what are the names of those courses?,"SELECT T1.student_id, T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id","CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR, course_id VARCHAR)","SELECT student_course_registrations.student_id, courses.course_name FROM student_course_registrations JOIN courses ON student_course_registrations.course_id = courses.course_id;",True,gpt-3.5-turbo-0125,"student_id course_name
      S001 Mathematics
      S002     Physics
      S003     Biology
      S004     History
      S005 Computer Sc","student_id course_name
      S001 Mathematics
      S002     Physics
      S003     Biology
      S004     History
      S005 Computer Sc",,0.0
What is detail of the student who most recently registered course?,SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1,"CREATE TABLE student_course_registrations (student_id VARCHAR, registration_date VARCHAR); CREATE TABLE students (student_details VARCHAR, student_id VARCHAR)",SELECT s.student_details FROM students s JOIN student_course_registrations scr ON s.student_id = scr.student_id ORDER BY scr.registration_date DESC LIMIT 1;,True,gpt-3.5-turbo-0125,"student_details
   David Wilson","student_details
   David Wilson",,0.0
How many courses do the student whose id is 171 attend?,SELECT COUNT(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171,"CREATE TABLE courses (course_id VARCHAR); CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)",SELECT COUNT(*) FROM student_course_attendance WHERE student_id = '171',False,gpt-3.5-turbo-0125,"_col_0
     0","_col_0
     5",,0.0
Find id of the candidate who most recently accessed the course?,SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1,"CREATE TABLE candidate_assessments (candidate_id VARCHAR, assessment_date VARCHAR)",SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1,True,gpt-3.5-turbo-0125,"candidate_id
         005","candidate_id
         005",,0.0
List the id of students who registered some courses and the number of their registered courses?,"SELECT T1.student_id, COUNT(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",CREATE TABLE students (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR),"SELECT student_id, COUNT(*) AS num_registered_courses FROM student_course_registrations GROUP BY student_id",False,gpt-3.5-turbo-0125,"student_id _col_1
      S001      1
      S002      1
      S003      1
      S004      1
      S005      1","student_id num_registered_courses
      S001                      1
      S002                      1
      S003                      1
      S004                      1
      S005                      1",,0.0
What are the id of students who registered course 301?,SELECT student_id FROM student_course_attendance WHERE course_id = 301,"CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR)",SELECT student_id FROM student_course_attendance WHERE course_id = '301',False,gpt-3.5-turbo-0125,student_id,"student_id
       001
       002
       003
       004
       005",,0.0
What is the id of the student who most recently registered course 301?,SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1,"CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR, date_of_attendance VARCHAR)",SELECT student_id FROM student_course_attendance WHERE course_id = '301' ORDER BY date_of_attendance DESC LIMIT 1,False,gpt-3.5-turbo-0125,student_id,"student_id
      S001",,0.0
Find distinct cities of addresses of people?,SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id,"CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR)",SELECT DISTINCT city FROM addresses JOIN people_addresses ON addresses.address_id = people_addresses.address_id;,True,gpt-3.5-turbo-0125,city,city,,0.0
Find distinct cities of address of students?,SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id,"CREATE TABLE students (student_id VARCHAR); CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR, person_id VARCHAR)",SELECT DISTINCT city FROM addresses JOIN people_addresses ON addresses.address_id = people_addresses.address_id JOIN students ON people_addresses.person_id = students.student_id,True,gpt-3.5-turbo-0125,city,city,,0.0
List the names of courses in alphabetical order?,SELECT course_name FROM courses ORDER BY course_name,CREATE TABLE courses (course_name VARCHAR),SELECT course_name FROM courses ORDER BY course_name ASC,True,gpt-3.5-turbo-0125,"course_name
    Biology
  Chemistry
    History
Mathematics
    Physics","course_name
    Biology
  Chemistry
    History
Mathematics
    Physics",,0.0
List the first names of people in alphabetical order?,SELECT first_name FROM people ORDER BY first_name,CREATE TABLE people (first_name VARCHAR),SELECT first_name FROM people ORDER BY first_name ASC,True,gpt-3.5-turbo-0125,"first_name
     Alice
       Bob
   Charlie
     David
       Eve","first_name
     Alice
       Bob
   Charlie
     David
       Eve",,0.0
What are the id of students who registered courses or attended courses?,SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance,CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR),SELECT student_id FROM student_course_attendance UNION SELECT student_id FROM student_course_registrations;,True,gpt-3.5-turbo-0125,"student_id
      S005
      S002
      S001
      S003
      S004","student_id
      S005
      S002
      S001
      S003
      S004",,0.0
Find the id of courses which are registered or attended by student whose id is 121?,SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121,"CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR); CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR)",SELECT course_id FROM student_course_attendance WHERE student_id = '121' UNION SELECT course_id FROM student_course_registrations WHERE student_id = '121';,False,gpt-3.5-turbo-0125,course_id,"course_id
     C004
     C002
     C005
     C003
     C001",,0.0
What are all info of students who registered courses but not attended courses?,SELECT * FROM student_course_registrations WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance),CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR),SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance),True,gpt-3.5-turbo-0125,"student_id
       101","student_id
       101",,0.0
Give me the dates when the max temperature was higher than 85.,SELECT date FROM weather WHERE max_temperature_f > 85,"CREATE TABLE weather (date VARCHAR, max_temperature_f INTEGER)",SELECT date FROM weather WHERE max_temperature_f > 85,True,gpt-3.5-turbo-0125,"date
2022
2022
2022
2022","date
2022
2022
2022
2022",,0.0
What are the names of stations that have latitude lower than 37.5?,SELECT name FROM station WHERE lat < 37.5,"CREATE TABLE station (name VARCHAR, lat INTEGER)",SELECT name FROM station WHERE lat < 37.5,True,gpt-3.5-turbo-0125,"name
Stat
Stat
Stat
Stat","name
Stat
Stat
Stat
Stat",,0.0
"For each city, return the highest latitude among its stations.","SELECT city, MAX(lat) FROM station GROUP BY city","CREATE TABLE station (city VARCHAR, lat INTEGER)","SELECT city, MAX(lat) AS highest_latitude FROM station GROUP BY city",False,gpt-3.5-turbo-0125,"city _col_1
Chic     41
Hous     29
Los      34
Miam     25
New      40","city highest_latitude
Chic               41
Hous               29
Los                34
Miam               25
New                40",,0.0
Give me the start station and end station for the trips with the three oldest id.,"SELECT start_station_name, end_station_name FROM trip ORDER BY id LIMIT 3","CREATE TABLE trip (start_station_name VARCHAR, end_station_name VARCHAR, id VARCHAR)","SELECT start_station_name, end_station_name FROM trip ORDER BY id DESC LIMIT 3",False,gpt-3.5-turbo-0125,"start_station_name end_station_name
         Station A        Station B
         Station C        Station D
         Station E        Station F","start_station_name end_station_name
         Station I        Station J
         Station G        Station H
         Station E        Station F",,0.0
What is the id of the trip that has the shortest duration?,SELECT id FROM trip ORDER BY duration LIMIT 1,"CREATE TABLE trip (id VARCHAR, duration VARCHAR)",SELECT id FROM trip ORDER BY duration LIMIT 1,True,gpt-3.5-turbo-0125,"id
 5","id
 5",,0.0
What is the total and maximum duration of trips with bike id 636?,"SELECT SUM(duration), MAX(duration) FROM trip WHERE bike_id = 636","CREATE TABLE trip (duration INTEGER, bike_id VARCHAR)","SELECT SUM(duration) AS total_duration, MAX(duration) AS max_duration FROM trip WHERE bike_id = '636'",False,gpt-3.5-turbo-0125,"_col_0 _col_1
  None   None","total_duration max_duration
           195           60",,0.0
"From the trip record, find the number of unique bikes.",SELECT COUNT(DISTINCT bike_id) FROM trip,CREATE TABLE trip (bike_id VARCHAR),SELECT COUNT(DISTINCT bike_id) AS unique_bikes FROM trip,False,gpt-3.5-turbo-0125,"_col_0
     5","unique_bikes
           5",,0.0
What is the number of distinct cities the stations are located at?,SELECT COUNT(DISTINCT city) FROM station,CREATE TABLE station (city VARCHAR),SELECT COUNT(DISTINCT city) AS distinct_cities FROM station,False,gpt-3.5-turbo-0125,"_col_0
     5","distinct_cities
              5",,0.0
Return the unique name for stations that have ever had 7 bikes available.,SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 7,"CREATE TABLE station (name VARCHAR, id VARCHAR); CREATE TABLE status (station_id VARCHAR, bikes_available VARCHAR)",SELECT DISTINCT s.name FROM station s JOIN status st ON s.id = st.station_id WHERE st.bikes_available = 7;,True,gpt-3.5-turbo-0125,name,name,,0.0
Which bike traveled the most often in zip code 94002?,SELECT bike_id FROM trip WHERE zip_code = 94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1,"CREATE TABLE trip (bike_id VARCHAR, zip_code VARCHAR)","SELECT bike_id, COUNT(bike_id) AS total_trips FROM trip WHERE zip_code = '94002' GROUP BY bike_id ORDER BY total_trips DESC LIMIT 1",False,gpt-3.5-turbo-0125,bike_id,"bike_id total_trips
   B001           3",,0.0
"What is the latitude, longitude, city of the station from which the shortest trip started?","SELECT T1.lat, T1.long, T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id ORDER BY T2.duration LIMIT 1","CREATE TABLE trip (start_station_id VARCHAR, duration VARCHAR); CREATE TABLE station (lat VARCHAR, long VARCHAR, city VARCHAR, id VARCHAR)","SELECT s.lat, s.long, s.city FROM trip t JOIN station s ON t.start_station_id = s.id ORDER BY t.duration ASC LIMIT 1;",True,gpt-3.5-turbo-0125,"lat long city
29. 95.3 Hous","lat long city
29. 95.3 Hous",,0.0
What is the 3 most common cloud cover rates in the region of zip code 94107?,SELECT cloud_cover FROM weather WHERE zip_code = 94107 GROUP BY cloud_cover ORDER BY COUNT(*) DESC LIMIT 3,"CREATE TABLE weather (cloud_cover VARCHAR, zip_code VARCHAR)","SELECT cloud_cover, COUNT(*) AS count FROM weather WHERE zip_code = '94107' GROUP BY cloud_cover ORDER BY count DESC LIMIT 3",False,gpt-3.5-turbo-0125,cloud_cover,"cloud_cover count
Partly Clou     3
Mostly Clou     1
      Sunny     1",,0.0
What is the zip code in which the average mean sea level pressure is the lowest?,SELECT zip_code FROM weather GROUP BY zip_code ORDER BY AVG(mean_sea_level_pressure_inches) LIMIT 1,"CREATE TABLE weather (zip_code VARCHAR, mean_sea_level_pressure_inches INTEGER)",SELECT zip_code FROM weather GROUP BY zip_code ORDER BY AVG(mean_sea_level_pressure_inches) LIMIT 1,True,gpt-3.5-turbo-0125,"zip_code
   56789","zip_code
   56789",,0.0
What is the average longitude of stations that never had bike availability more than 10?,SELECT AVG(long) FROM station WHERE NOT id IN (SELECT station_id FROM status GROUP BY station_id HAVING MAX(bikes_available) > 10),"CREATE TABLE station (long INTEGER, id VARCHAR, station_id VARCHAR, bikes_available INTEGER); CREATE TABLE status (long INTEGER, id VARCHAR, station_id VARCHAR, bikes_available INTEGER)",SELECT AVG(long) AS average_longitude FROM station WHERE station_id NOT IN (SELECT station_id FROM status WHERE bikes_available > 10),False,gpt-3.5-turbo-0125,"_col_0
  36.0","average_longitude
            35.75",,0.0
On which day and in which zip code was the min dew point lower than any day in zip code 94107?,"SELECT date, zip_code FROM weather WHERE min_dew_point_f < (SELECT MIN(min_dew_point_f) FROM weather WHERE zip_code = 94107)","CREATE TABLE weather (date VARCHAR, zip_code VARCHAR, min_dew_point_f INTEGER)","SELECT date, zip_code FROM weather WHERE min_dew_point_f < (SELECT MIN(min_dew_point_f) FROM weather WHERE zip_code = '94107')",True,gpt-3.5-turbo-0125,date zip_code,date zip_code,,0.0
"For each trip, return its ending station's installation date.","SELECT T1.id, T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id","CREATE TABLE station (installation_date VARCHAR, id VARCHAR); CREATE TABLE trip (id VARCHAR, end_station_id VARCHAR)","SELECT t.id AS trip_id, s.installation_date AS ending_station_installation_date FROM trip t JOIN station s ON t.end_station_id = s.id;",False,gpt-3.5-turbo-0125,"id installation_date
10        2021-03-05
10        2021-01-15
10        2021-06-10
10        2020-11-30
10        2020-09-20","trip_id ending_station_installation_date
    101                       2021-03-05
    102                       2021-01-15
    103                       2021-06-10
    104                       2020-11-30
    105                       2020-09-20",,0.0
Which trip started from the station with the largest dock count? Give me the trip id.,SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id = T2.id ORDER BY T2.dock_count DESC LIMIT 1,"CREATE TABLE trip (id VARCHAR, start_station_id VARCHAR); CREATE TABLE station (id VARCHAR, dock_count VARCHAR)",SELECT t.id AS trip_id FROM trip t JOIN station s ON t.start_station_id = s.id ORDER BY s.dock_count DESC LIMIT 1;,False,gpt-3.5-turbo-0125,"id
 5","trip_id
      5",,0.0
What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?,SELECT id FROM station WHERE lat > 37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING MIN(bikes_available) < 7,"CREATE TABLE status (id VARCHAR, station_id VARCHAR, lat INTEGER, bikes_available INTEGER); CREATE TABLE station (id VARCHAR, station_id VARCHAR, lat INTEGER, bikes_available INTEGER)",SELECT station_id FROM station WHERE lat > 37.4 AND station_id NOT IN (SELECT station_id FROM status WHERE bikes_available < 7),False,gpt-3.5-turbo-0125,"id
 5
 3
 1","station_id
         A
         C
         E",,0.0
"What are the name, latitude, and city of the station with the lowest latitude?","SELECT name, lat, city FROM station ORDER BY lat LIMIT 1","CREATE TABLE station (name VARCHAR, lat VARCHAR, city VARCHAR)","SELECT name, lat, city FROM station ORDER BY lat ASC LIMIT 1;",True,gpt-3.5-turbo-0125,"name lat city
Stat 29. Hous","name lat city
Stat 29. Hous",,0.0
"What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?","SELECT date, mean_temperature_f, mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3","CREATE TABLE weather (date VARCHAR, mean_temperature_f VARCHAR, mean_humidity VARCHAR, max_gust_speed_mph VARCHAR)","SELECT date, mean_temperature_f, mean_humidity FROM weather ORDER BY CAST(max_gust_speed_mph AS INTEGER) DESC LIMIT 3",True,gpt-3.5-turbo-0125,"date mean_temperature_f mean_humidity
2022                 70           80%
2022                 65           75%
2022                 60           70%","date mean_temperature_f mean_humidity
2022                 70           80%
2022                 65           75%
2022                 60           70%",,0.0
List the name and the number of stations for all the cities that have at least 15 stations.,"SELECT city, COUNT(*) FROM station GROUP BY city HAVING COUNT(*) >= 15",CREATE TABLE station (city VARCHAR),"SELECT city, COUNT(*) AS num_stations FROM station GROUP BY city HAVING COUNT(*) >= 15;",False,gpt-3.5-turbo-0125,city _col_1,city num_stations,,0.0
Find the ids and names of stations from which at least 200 trips started.,"SELECT start_station_id, start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*) >= 200","CREATE TABLE trip (start_station_id VARCHAR, start_station_name VARCHAR)","SELECT start_station_id, start_station_name FROM trip GROUP BY start_station_id, start_station_name HAVING COUNT(*) >= 200",True,gpt-3.5-turbo-0125,start_station_id start_station_name,start_station_id start_station_name,,0.0
Find the zip code in which the average mean visibility is lower than 10.,SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_visibility_miles) < 10,"CREATE TABLE weather (zip_code VARCHAR, mean_visibility_miles INTEGER)",SELECT zip_code FROM weather WHERE mean_visibility_miles < 10,True,gpt-3.5-turbo-0125,"zip_code
   12345
   34567
   56789","zip_code
   12345
   34567
   56789",,0.0
List all the cities in a decreasing order of each city's stations' highest latitude.,SELECT city FROM station GROUP BY city ORDER BY MAX(lat) DESC,"CREATE TABLE station (city VARCHAR, lat INTEGER)",SELECT city FROM station ORDER BY MAX(lat) DESC,False,gpt-3.5-turbo-0125,"city
Chic
New 
Los 
Phoe
Hous",,Step 'Sort: station (6049593472)' failed: 'int' object is not iterable,0.0
What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.,"SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5","CREATE TABLE weather (date VARCHAR, cloud_cover VARCHAR)","SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5",True,gpt-3.5-turbo-0125,"date cloud_cover
2022         90%
2022         85%
2022         80%
2022         75%
2022         70%","date cloud_cover
2022         90%
2022         85%
2022         80%
2022         75%
2022         70%",,0.0
What are the ids and durations of the trips with the top 3 durations?,"SELECT id, duration FROM trip ORDER BY duration DESC LIMIT 3","CREATE TABLE trip (id VARCHAR, duration VARCHAR)","SELECT id, duration FROM trip ORDER BY CAST(duration AS INTEGER) DESC LIMIT 3",False,gpt-3.5-turbo-0125,"id duration
 2       90
 5       75
 1       60","id duration
 3      120
 2       90
 5       75",,0.0
List all the distinct stations from which a trip of duration below 100 started.,SELECT DISTINCT start_station_name FROM trip WHERE duration < 100,"CREATE TABLE trip (start_station_name VARCHAR, duration INTEGER)",SELECT DISTINCT start_station_name FROM trip WHERE duration < 100;,True,gpt-3.5-turbo-0125,"start_station_name
         Station A
         Station B
         Station C
         Station D","start_station_name
         Station A
         Station B
         Station C
         Station D",,0.0
Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.,SELECT id FROM trip WHERE duration >= (SELECT AVG(duration) FROM trip WHERE zip_code = 94103),"CREATE TABLE trip (id VARCHAR, duration INTEGER, zip_code VARCHAR)",SELECT id FROM trip WHERE duration >= (SELECT AVG(duration) FROM trip WHERE zip_code = '94103'),False,gpt-3.5-turbo-0125,id,"id
 2
 4
 5",,0.0
What are the dates in which the mean sea level pressure was between 30.3 and 31?,SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31,"CREATE TABLE weather (date VARCHAR, mean_sea_level_pressure_inches INTEGER)",SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31,True,gpt-3.5-turbo-0125,"date
2022
2022
2022","date
2022
2022
2022",,0.0
What are the id and name of the stations that have ever had more than 12 bikes available?,"SELECT DISTINCT T1.id, T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12","CREATE TABLE station (id VARCHAR, name VARCHAR); CREATE TABLE status (station_id VARCHAR, bikes_available INTEGER)","SELECT station.id, station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available > 12",True,gpt-3.5-turbo-0125,"id name
 1 Stat
 3 Stat
 5 Stat","id name
 1 Stat
 3 Stat
 5 Stat",,0.0
Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place.,SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_humidity) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING COUNT(*) >= 100,"CREATE TABLE weather (zip_code VARCHAR, mean_humidity INTEGER); CREATE TABLE trip (zip_code VARCHAR, mean_humidity INTEGER)",SELECT zip_code FROM weather JOIN trip ON weather.zip_code = trip.zip_code GROUP BY weather.zip_code HAVING AVG(mean_humidity) < 70 AND COUNT(*) >= 100;,False,gpt-3.5-turbo-0125,zip_code,,Column 'zip_code' could not be resolved,0.0
What is the average latitude and longitude of the starting points of all trips?,"SELECT AVG(T1.lat), AVG(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id","CREATE TABLE trip (start_station_id VARCHAR); CREATE TABLE station (lat INTEGER, long INTEGER, id VARCHAR)","SELECT AVG(s.lat) AS avg_latitude, AVG(s.long) AS avg_longitude FROM trip t JOIN station s ON t.start_station_id = s.id",False,gpt-3.5-turbo-0125,"_col_0 _col_1
  42.0  -72.0","avg_latitude avg_longitude
        42.0         -72.0",,0.0
How many books are there?,SELECT COUNT(*) FROM book,CREATE TABLE book (Id VARCHAR),SELECT COUNT(*) FROM book,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
List the writers of the books in ascending alphabetical order.,SELECT Writer FROM book ORDER BY Writer,CREATE TABLE book (Writer VARCHAR),SELECT DISTINCT Writer FROM book ORDER BY Writer ASC,True,gpt-3.5-turbo-0125,"writer
Author
Author
Author
Author
Author","writer
Author
Author
Author
Author
Author",,0.0
List the titles of the books in ascending order of issues.,SELECT Title FROM book ORDER BY Issues,"CREATE TABLE book (Title VARCHAR, Issues VARCHAR)",SELECT Title FROM book ORDER BY Issues ASC,True,gpt-3.5-turbo-0125,"title
Book 
Book 
Book 
Book 
Book ","title
Book 
Book 
Book 
Book 
Book ",,0.0
What are the title and issues of the books?,"SELECT Title, Issues FROM book","CREATE TABLE book (Title VARCHAR, Issues VARCHAR)","SELECT Title, Issues FROM book",True,gpt-3.5-turbo-0125,"title issues
The G     10
To Ki      5
 1984      8
Pride      3
The C      6","title issues
The G     10
To Ki      5
 1984      8
Pride      3
The C      6",,0.0
What are the dates of publications in descending order of price?,SELECT Publication_Date FROM publication ORDER BY Price DESC,"CREATE TABLE publication (Publication_Date VARCHAR, Price VARCHAR)",SELECT Publication_Date FROM publication ORDER BY Price DESC,True,gpt-3.5-turbo-0125,"publication_date
      2022-05-20
      2022-04-05
      2022-03-10
      2022-02-15
      2022-01-01","publication_date
      2022-05-20
      2022-04-05
      2022-03-10
      2022-02-15
      2022-01-01",,0.0
What are the distinct publishers of publications with price higher than 5000000?,SELECT DISTINCT Publisher FROM publication WHERE Price > 5000000,"CREATE TABLE publication (Publisher VARCHAR, Price INTEGER)",SELECT DISTINCT Publisher FROM publication WHERE Price > 5000000,True,gpt-3.5-turbo-0125,"publisher
Publisher
Publisher
Publisher
Publisher
Publisher","publisher
Publisher
Publisher
Publisher
Publisher
Publisher",,0.0
List the publisher of the publication with the highest price.,SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1,"CREATE TABLE publication (Publisher VARCHAR, Price VARCHAR)",SELECT Publisher FROM publication WHERE Price = (SELECT MAX(Price) FROM publication),True,gpt-3.5-turbo-0125,"publisher
Publisher","publisher
Publisher",,0.0
List the publication dates of publications with 3 lowest prices.,SELECT Publication_Date FROM publication ORDER BY Price LIMIT 3,"CREATE TABLE publication (Publication_Date VARCHAR, Price VARCHAR)",SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3,True,gpt-3.5-turbo-0125,"publication_date
      2022-01-01
      2022-02-01
      2022-05-01","publication_date
      2022-01-01
      2022-02-01
      2022-05-01",,0.0
Show the title and publication dates of books.,"SELECT T1.Title, T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID","CREATE TABLE book (Title VARCHAR, Book_ID VARCHAR); CREATE TABLE publication (Publication_Date VARCHAR, Book_ID VARCHAR)","SELECT b.Title, p.Publication_Date FROM book b JOIN publication p ON b.Book_ID = p.Book_ID;",True,gpt-3.5-turbo-0125,"title publication_date
The G       2021-05-15
To Ki       2020-11-30
 1984       2019-08-20
Pride       2018-03-10
The C       2017-09-25","title publication_date
The G       2021-05-15
To Ki       2020-11-30
 1984       2019-08-20
Pride       2018-03-10
The C       2017-09-25",,0.0
Show writers who have published a book with price more than 4000000.,SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 4000000,"CREATE TABLE publication (Book_ID VARCHAR, Price INTEGER); CREATE TABLE book (Writer VARCHAR, Book_ID VARCHAR)",SELECT DISTINCT Writer FROM book WHERE Book_ID IN (SELECT Book_ID FROM publication WHERE Price > 4000000),False,gpt-3.5-turbo-0125,"writer
John D
Jane S
Alice 
Eve Wh","writer
Alice 
Eve Wh
Jane S
John D",,0.0
Show the titles of books in descending order of publication price.,SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T2.Price DESC,"CREATE TABLE publication (Book_ID VARCHAR, Price VARCHAR); CREATE TABLE book (Title VARCHAR, Book_ID VARCHAR)",SELECT b.Title FROM book b JOIN publication p ON b.Book_ID = p.Book_ID ORDER BY p.Price DESC,True,gpt-3.5-turbo-0125,"title
Book 
Book 
Book 
Book 
Book ","title
Book 
Book 
Book 
Book 
Book ",,0.0
Show publishers that have more than one publication.,SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*) > 1,CREATE TABLE publication (Publisher VARCHAR),SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*) > 1,True,gpt-3.5-turbo-0125,"publisher
Publisher
Publisher","publisher
Publisher
Publisher",,0.0
Show different publishers together with the number of publications they have.,"SELECT Publisher, COUNT(*) FROM publication GROUP BY Publisher",CREATE TABLE publication (Publisher VARCHAR),"SELECT Publisher, COUNT(*) AS Number_of_Publications FROM publication GROUP BY Publisher",False,gpt-3.5-turbo-0125,"publisher _col_1
Publisher      1
Publisher      1
Publisher      1
Publisher      1
Publisher      1","publisher number_of_publications
Publisher                      1
Publisher                      1
Publisher                      1
Publisher                      1
Publisher                      1",,0.0
Please show the most common publication date.,SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE publication (Publication_Date VARCHAR),"SELECT Publication_Date, COUNT(*) AS count FROM publication GROUP BY Publication_Date ORDER BY count DESC LIMIT 1",False,gpt-3.5-turbo-0125,"publication_date
      2022-01-01","publication_date count
      2022-01-01     1",,0.0
List the writers who have written more than one book.,SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*) > 1,CREATE TABLE book (Writer VARCHAR),SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*) > 1,True,gpt-3.5-turbo-0125,"writer
John D","writer
John D",,0.0
List the titles of books that are not published.,SELECT Title FROM book WHERE NOT Book_ID IN (SELECT Book_ID FROM publication),"CREATE TABLE book (Title VARCHAR, Book_ID VARCHAR); CREATE TABLE publication (Title VARCHAR, Book_ID VARCHAR)",SELECT b.Title FROM book b LEFT JOIN publication p ON b.Book_ID = p.Book_ID WHERE p.Book_ID IS NULL;,False,gpt-3.5-turbo-0125,"title
The G
To Ki
 1984
Pride
The C",title,,0.0
Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.,SELECT Publisher FROM publication WHERE Price > 10000000 INTERSECT SELECT Publisher FROM publication WHERE Price < 5000000,"CREATE TABLE publication (Publisher VARCHAR, Price INTEGER)",SELECT Publisher FROM publication WHERE Price > 10000000 OR Price < 5000000,False,gpt-3.5-turbo-0125,"publisher
Publisher","publisher
Publisher
Publisher
Publisher",,0.0
How many actors are there?,SELECT COUNT(*) FROM actor,CREATE TABLE actor (Id VARCHAR),SELECT COUNT(*) FROM actor,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
List the name of actors in ascending alphabetical order.,SELECT Name FROM actor ORDER BY Name,CREATE TABLE actor (Name VARCHAR),SELECT Name FROM actor ORDER BY Name ASC,True,gpt-3.5-turbo-0125,"name
Alic
 Bob
Char
Davi
 Eve","name
Alic
 Bob
Char
Davi
 Eve",,0.0
What are the characters and duration of actors?,"SELECT Character, Duration FROM actor","CREATE TABLE actor (Character VARCHAR, Duration VARCHAR)","SELECT Character, Duration FROM actor",True,gpt-3.5-turbo-0125,"character duration
 John Doe  2 hours
Jane Smit 1.5 hour
Alice Joh  3 hours
Bob Brown 2.5 hour
Emily Dav  2 hours","character duration
 John Doe  2 hours
Jane Smit 1.5 hour
Alice Joh  3 hours
Bob Brown 2.5 hour
Emily Dav  2 hours",,0.0
List the name of actors whose age is not 20.,SELECT Name FROM actor WHERE Age <> 20,"CREATE TABLE actor (Name VARCHAR, Age VARCHAR)",SELECT Name FROM actor WHERE Age <> '20',True,gpt-3.5-turbo-0125,"name
John
Emil
Mich
Sara
Davi","name
John
Emil
Mich
Sara
Davi",,0.0
What are the characters of actors in descending order of age?,SELECT Character FROM actor ORDER BY age DESC,"CREATE TABLE actor (Character VARCHAR, age VARCHAR)",SELECT Character FROM actor ORDER BY age DESC,True,gpt-3.5-turbo-0125,"character
     John
    Alice
      Bob
    Sarah
     Mike","character
     John
    Alice
      Bob
    Sarah
     Mike",,0.0
What is the duration of the oldest actor?,SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1,"CREATE TABLE actor (Duration VARCHAR, Age VARCHAR)",SELECT MAX(Duration) FROM actor,False,gpt-3.5-turbo-0125,"duration
 5 years","_col_0
5 year",,0.0
Show names of actors and names of musicals they are in.,"SELECT T1.Name, T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID","CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR); CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)","SELECT actor.Name, musical.Name FROM actor JOIN musical ON actor.Musical_ID = musical.Musical_ID;",True,gpt-3.5-turbo-0125,"name name
Les  Les 
Les  Les 
The  The 
Hami Hami
Cats Cats","name name
Les  Les 
Les  Les 
The  The 
Hami Hami
Cats Cats",,0.0
Show names of actors in descending order of the year their musical is awarded.,SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC,"CREATE TABLE musical (Musical_ID VARCHAR, Year VARCHAR); CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR)",SELECT actor.Name FROM actor JOIN musical ON actor.Musical_ID = musical.Musical_ID ORDER BY musical.Year DESC,True,gpt-3.5-turbo-0125,"name
Robe
Jane
Mich
Sara
John","name
Robe
Jane
Mich
Sara
John",,0.0
Show names of musicals which have at least three actors.,SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*) >= 3,"CREATE TABLE actor (Musical_ID VARCHAR); CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)","SELECT m.Name FROM musical m JOIN (SELECT Musical_ID, COUNT(*) AS num_actors FROM actor GROUP BY Musical_ID HAVING num_actors >= 3) a ON m.Musical_ID = a.Musical_ID",True,gpt-3.5-turbo-0125,name,name,,0.0
Show different nominees and the number of musicals they have been nominated.,"SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee",CREATE TABLE musical (Nominee VARCHAR),"SELECT Nominee, COUNT(*) AS NumMusicals FROM musical GROUP BY Nominee",False,gpt-3.5-turbo-0125,"nominee _col_1
Alice J      1
Bob Bro      1
Jane Sm      1
John Do      1
Sarah L      1","nominee nummusicals
Alice J           1
Bob Bro           1
Jane Sm           1
John Do           1
Sarah L           1",,0.0
Please show the nominee who has been nominated the greatest number of times.,SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE musical (Nominee VARCHAR),"SELECT Nominee, COUNT(Nominee) AS TotalNominations FROM musical GROUP BY Nominee ORDER BY TotalNominations DESC LIMIT 1",False,gpt-3.5-turbo-0125,"nominee
Alice J","nominee totalnominations
Alice J                1",,0.0
List the most common result of the musicals.,SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE musical (RESULT VARCHAR),"SELECT RESULT, COUNT(*) AS frequency FROM musical GROUP BY RESULT ORDER BY frequency DESC LIMIT 1",False,gpt-3.5-turbo-0125,"result
Succes","result frequency
Succes         3",,0.0
List the name of musicals that do not have actors.,SELECT Name FROM musical WHERE NOT Musical_ID IN (SELECT Musical_ID FROM actor),"CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR); CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)",SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor),True,gpt-3.5-turbo-0125,"name
Hami
Les 
Phan
Wick
Rent","name
Hami
Les 
Phan
Wick
Rent",,0.0
"Find the emails of the user named ""Mary"".",SELECT email FROM user_profiles WHERE name = 'Mary',"CREATE TABLE user_profiles (email VARCHAR, name VARCHAR)",SELECT email FROM user_profiles WHERE name = 'Mary';,True,gpt-3.5-turbo-0125,"email
mary@","email
mary@",,0.0
"What is the partition id of the user named ""Iron Man"".",SELECT partitionid FROM user_profiles WHERE name = 'Iron Man',"CREATE TABLE user_profiles (partitionid VARCHAR, name VARCHAR)",SELECT partitionid FROM user_profiles WHERE name = 'Iron Man';,True,gpt-3.5-turbo-0125,"partitionid
        001","partitionid
        001",,0.0
How many users are there?,SELECT COUNT(*) FROM user_profiles,CREATE TABLE user_profiles (Id VARCHAR),SELECT COUNT(*) AS total_users FROM user_profiles,False,gpt-3.5-turbo-0125,"_col_0
     5","total_users
          5",,0.0
How many followers does each user have?,SELECT COUNT(*) FROM follows,CREATE TABLE follows (Id VARCHAR),"SELECT Id, COUNT(*) AS followers_count FROM follows GROUP BY Id",False,gpt-3.5-turbo-0125,"_col_0
     5","id followers_count
us               1
us               1
us               1
us               1
us               1",,0.0
Find the number of followers for each user.,SELECT COUNT(*) FROM follows GROUP BY f1,CREATE TABLE follows (f1 VARCHAR),"SELECT f1 AS user, COUNT(*) AS followers FROM follows GROUP BY f1",False,gpt-3.5-turbo-0125,"_col_0
     1
     1
     1
     1
     1","user followers
user         1
user         1
user         1
user         1
user         1",,0.0
Find the number of tweets in record.,SELECT COUNT(*) FROM tweets,CREATE TABLE tweets (Id VARCHAR),SELECT COUNT(*) AS number_of_tweets FROM tweets,False,gpt-3.5-turbo-0125,"_col_0
     5","number_of_tweets
               5",,0.0
Find the number of users who posted some tweets.,SELECT COUNT(DISTINCT UID) FROM tweets,CREATE TABLE tweets (UID VARCHAR),SELECT COUNT(DISTINCT UID) AS num_users FROM tweets,False,gpt-3.5-turbo-0125,"_col_0
     5","num_users
        5",,0.0
Find the name and email of the user whose name contains the word ‘Swift’.,"SELECT name, email FROM user_profiles WHERE name LIKE '%Swift%'","CREATE TABLE user_profiles (name VARCHAR, email VARCHAR)","SELECT name, email FROM user_profiles WHERE name LIKE '%Swift%'",True,gpt-3.5-turbo-0125,"name email
Tayl taylo
Jane jane.
Mich micha","name email
Tayl taylo
Jane jane.
Mich micha",,0.0
Find the names of users whose emails contain ‘superstar’ or ‘edu’.,SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%',"CREATE TABLE user_profiles (name VARCHAR, email VARCHAR)",SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%',True,gpt-3.5-turbo-0125,"name
Jane
Alic
Sara","name
Jane
Alic
Sara",,0.0
Return the text of tweets about the topic 'intern'.,SELECT text FROM tweets WHERE text LIKE '%intern%',CREATE TABLE tweets (text VARCHAR),SELECT text FROM tweets WHERE text LIKE '%intern%',True,gpt-3.5-turbo-0125,"text
Just
Look
Exci","text
Just
Look
Exci",,0.0
Find the name and email of the users who have more than 1000 followers.,"SELECT name, email FROM user_profiles WHERE followers > 1000","CREATE TABLE user_profiles (name VARCHAR, email VARCHAR, followers INTEGER)","SELECT name, email FROM user_profiles WHERE followers > 1000;",True,gpt-3.5-turbo-0125,"name email
John johnd
Jane janes
Bob  bobbr","name email
John johnd
Jane janes
Bob  bobbr",,0.0
Find the name and email for the users who have more than one follower.,"SELECT T1.name, T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING COUNT(*) > 1","CREATE TABLE follows (f1 VARCHAR); CREATE TABLE user_profiles (name VARCHAR, email VARCHAR, uid VARCHAR)","SELECT name, email FROM user_profiles WHERE uid IN (SELECT uid FROM follows GROUP BY uid HAVING COUNT(*) > 1)",True,gpt-3.5-turbo-0125,name email,name email,,0.0
Find the names of users who have more than one tweet.,SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING COUNT(*) > 1,"CREATE TABLE tweets (uid VARCHAR); CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR)",SELECT name FROM user_profiles WHERE uid IN (SELECT uid FROM tweets GROUP BY uid HAVING COUNT(*) > 1),True,gpt-3.5-turbo-0125,name,name,,0.0
Find the name of the user who has the largest number of followers.,SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1,"CREATE TABLE user_profiles (name VARCHAR, followers VARCHAR)",SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1,True,gpt-3.5-turbo-0125,"name
Davi","name
Davi",,0.0
Find the name and email of the user followed by the least number of people.,"SELECT name, email FROM user_profiles ORDER BY followers LIMIT 1","CREATE TABLE user_profiles (name VARCHAR, email VARCHAR, followers VARCHAR)","SELECT name, email FROM user_profiles ORDER BY followers LIMIT 1",True,gpt-3.5-turbo-0125,"name email
Alic alice","name email
Alic alice",,0.0
"List the name and number of followers for each user, and sort the results by the number of followers in descending order.","SELECT name, followers FROM user_profiles ORDER BY followers DESC","CREATE TABLE user_profiles (name VARCHAR, followers VARCHAR)","SELECT name, followers FROM user_profiles ORDER BY followers DESC",True,gpt-3.5-turbo-0125,"name followers
 Bob       800
Davi       600
 Eve      1500
Char      1200
Alic      1000","name followers
 Bob       800
Davi       600
 Eve      1500
Char      1200
Alic      1000",,0.0
List the names of 5 users followed by the largest number of other users.,SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5,"CREATE TABLE user_profiles (name VARCHAR, followers VARCHAR)",SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5,True,gpt-3.5-turbo-0125,"name
 Eve
Davi
Char
 Bob
Alic","name
 Eve
Davi
Char
 Bob
Alic",,0.0
List the text of all tweets in the order of date.,SELECT text FROM tweets ORDER BY createdate,"CREATE TABLE tweets (text VARCHAR, createdate VARCHAR)",SELECT text FROM tweets ORDER BY createdate,True,gpt-3.5-turbo-0125,"text
Hell
Good
Happ
Week
Codi","text
Hell
Good
Happ
Week
Codi",,0.0
Find the average number of followers for the users who do not have any tweet.,SELECT AVG(followers) FROM user_profiles WHERE NOT UID IN (SELECT UID FROM tweets),"CREATE TABLE user_profiles (followers INTEGER, UID VARCHAR); CREATE TABLE tweets (followers INTEGER, UID VARCHAR)",SELECT AVG(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets),True,gpt-3.5-turbo-0125,"_col_0
 150.0","_col_0
 150.0",,0.0
Find the average number of followers for the users who had some tweets.,SELECT AVG(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets),"CREATE TABLE user_profiles (followers INTEGER, UID VARCHAR); CREATE TABLE tweets (followers INTEGER, UID VARCHAR)",SELECT AVG(followers) FROM user_profiles WHERE UID IN (SELECT DISTINCT UID FROM tweets),True,gpt-3.5-turbo-0125,"_col_0
123.33","_col_0
123.33",,0.0
Find the maximum and total number of followers of all users.,"SELECT MAX(followers), SUM(followers) FROM user_profiles",CREATE TABLE user_profiles (followers INTEGER),"SELECT MAX(followers) AS max_followers, SUM(followers) AS total_followers FROM user_profiles",False,gpt-3.5-turbo-0125,"_col_0 _col_1
   300   1000","max_followers total_followers
          300            1000",,0.0
Find the names of all the catalog entries.,SELECT DISTINCT (catalog_entry_name) FROM catalog_contents,CREATE TABLE catalog_contents (catalog_entry_name VARCHAR),SELECT catalog_entry_name FROM catalog_contents,True,gpt-3.5-turbo-0125,"catalog_entry_name
           Entry 1
           Entry 2
           Entry 3
           Entry 4
           Entry 5","catalog_entry_name
           Entry 1
           Entry 2
           Entry 3
           Entry 4
           Entry 5",,0.0
Find the list of attribute data types possessed by more than 3 attribute definitions.,SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING COUNT(*) > 3,CREATE TABLE Attribute_Definitions (attribute_data_type VARCHAR),"SELECT attribute_data_type, COUNT(*) AS count FROM Attribute_Definitions GROUP BY attribute_data_type HAVING COUNT(*) > 3",False,gpt-3.5-turbo-0125,attribute_data_type,attribute_data_type count,,0.0
Find the name and level of catalog structure with level between 5 and 10.,"SELECT catalog_level_name, catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10","CREATE TABLE Catalog_Structure (catalog_level_name VARCHAR, catalog_level_number INTEGER)","SELECT catalog_level_name, catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",True,gpt-3.5-turbo-0125,"catalog_level_name catalog_level_number
           Level 5                    5","catalog_level_name catalog_level_number
           Level 5                    5",,0.0
Which catalog publisher has published the most catalogs?,SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE catalogs (catalog_publisher VARCHAR),"SELECT catalog_publisher, COUNT(*) AS num_catalogs FROM catalogs GROUP BY catalog_publisher ORDER BY num_catalogs DESC LIMIT 1",False,gpt-3.5-turbo-0125,"catalog_publisher
      Publisher A","catalog_publisher num_catalogs
      Publisher A            2",,0.0
What are the entry names of catalog with the attribute possessed by most entries.,SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value = (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY COUNT(*) DESC LIMIT 1),"CREATE TABLE Catalog_Contents_Additional_Attributes (catalog_entry_id VARCHAR, attribute_value VARCHAR); CREATE TABLE Catalog_Contents (catalog_entry_name VARCHAR, catalog_entry_id VARCHAR); CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_value VARCHAR)",SELECT catalog_entry_name FROM Catalog_Contents WHERE catalog_entry_id IN (SELECT catalog_entry_id FROM Catalog_Contents_Additional_Attributes GROUP BY catalog_entry_id ORDER BY COUNT(*) DESC LIMIT 1),False,gpt-3.5-turbo-0125,"catalog_entry_name
            Entry1",catalog_entry_name,,0.0
What is the entry name of the most expensive catalog (in USD)?,SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1,"CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, price_in_dollars VARCHAR)",SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1,True,gpt-3.5-turbo-0125,"catalog_entry_name
         Product D","catalog_entry_name
         Product D",,0.0
What is the level name of the cheapest catalog (in USD)?,SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1,"CREATE TABLE catalog_structure (catalog_level_name VARCHAR, catalog_level_number VARCHAR); CREATE TABLE catalog_contents (catalog_level_number VARCHAR, price_in_dollars VARCHAR)",SELECT catalog_structure.catalog_level_name FROM catalog_structure JOIN catalog_contents ON catalog_structure.catalog_level_number = catalog_contents.catalog_level_number ORDER BY CAST(catalog_contents.price_in_dollars AS DECIMAL) ASC LIMIT 1;,False,gpt-3.5-turbo-0125,"catalog_level_name
           Level 1","catalog_level_name
           Level 5",,0.0
What are the average and minimum price (in Euro) of all products?,"SELECT AVG(price_in_euros), MIN(price_in_euros) FROM catalog_contents",CREATE TABLE catalog_contents (price_in_euros INTEGER),"SELECT AVG(price_in_euros) AS average_price, MIN(price_in_euros) AS minimum_price FROM catalog_contents",False,gpt-3.5-turbo-0125,"_col_0 _col_1
  20.0     10","average_price minimum_price
         20.0            10",,0.0
What is the product with the highest height? Give me the catalog entry name.,SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1,"CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, height VARCHAR)",SELECT catalog_entry_name FROM catalog_contents WHERE height = (SELECT MAX(height) FROM catalog_contents),True,gpt-3.5-turbo-0125,"catalog_entry_name
         Product E","catalog_entry_name
         Product E",,0.0
Find the name of the product that has the smallest capacity.,SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity LIMIT 1,"CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, capacity VARCHAR)",SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1,True,gpt-3.5-turbo-0125,"catalog_entry_name
         Product A","catalog_entry_name
         Product A",,0.0
Find the name and attribute ID of the attribute definitions with attribute value 0.,"SELECT t1.attribute_name, t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0","CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_id VARCHAR, attribute_value VARCHAR); CREATE TABLE Attribute_Definitions (attribute_name VARCHAR, attribute_id VARCHAR)","SELECT ad.attribute_name, ad.attribute_id FROM Attribute_Definitions ad JOIN Catalog_Contents_Additional_Attributes caa ON ad.attribute_id = caa.attribute_id WHERE caa.attribute_value = '0';",False,gpt-3.5-turbo-0125,attribute_name attribute_id,"attribute_name attribute_id
    Attribute1            1
    Attribute2            2
    Attribute3            3
    Attribute4            4
    Attribute5            5",,0.0
Find the name and capacity of products with price greater than 700 (in USD).,"SELECT catalog_entry_name, capacity FROM Catalog_Contents WHERE price_in_dollars > 700","CREATE TABLE Catalog_Contents (catalog_entry_name VARCHAR, capacity VARCHAR, price_in_dollars INTEGER)","SELECT catalog_entry_name, capacity FROM Catalog_Contents WHERE price_in_dollars > 700",True,gpt-3.5-turbo-0125,"catalog_entry_name capacity
         Product A     10GB
         Product B     20GB
         Product C     15GB
         Product D     25GB
         Product E     30GB","catalog_entry_name capacity
         Product A     10GB
         Product B     20GB
         Product C     15GB
         Product D     25GB
         Product E     30GB",,0.0
Find the dates on which more than one revisions were made.,SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING COUNT(*) > 1,CREATE TABLE Catalogs (date_of_latest_revision VARCHAR),SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING COUNT(*) > 1,True,gpt-3.5-turbo-0125,"date_of_latest_revision
             2022-03-25","date_of_latest_revision
             2022-03-25",,0.0
How many products are there in the records?,SELECT COUNT(*) FROM catalog_contents,CREATE TABLE catalog_contents (Id VARCHAR),SELECT COUNT(*) AS total_products FROM catalog_contents,False,gpt-3.5-turbo-0125,"_col_0
     5","total_products
             5",,0.0
Name all the products with next entry ID greater than 8.,SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8,"CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, next_entry_id INTEGER)",SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8,True,gpt-3.5-turbo-0125,"catalog_entry_name
         Product A
         Product C
         Product E","catalog_entry_name
         Product A
         Product C
         Product E",,0.0
How many aircrafts do we have?,SELECT COUNT(*) FROM Aircraft,CREATE TABLE Aircraft (Id VARCHAR),SELECT COUNT(*) AS total_aircrafts FROM Aircraft,False,gpt-3.5-turbo-0125,"_col_0
     5","total_aircrafts
              5",,0.0
Show name and distance for all aircrafts.,"SELECT name, distance FROM Aircraft","CREATE TABLE Aircraft (name VARCHAR, distance VARCHAR)","SELECT name, distance FROM Aircraft",True,gpt-3.5-turbo-0125,"name distance
Boei 10000 km
Airb 12000 km
Cess   800 km
Embr  3000 km
Bomb 14000 km","name distance
Boei 10000 km
Airb 12000 km
Cess   800 km
Embr  3000 km
Bomb 14000 km",,0.0
Show ids for all aircrafts with more than 1000 distance.,SELECT aid FROM Aircraft WHERE distance > 1000,"CREATE TABLE Aircraft (aid VARCHAR, distance INTEGER)",SELECT aid FROM Aircraft WHERE distance > 1000,True,gpt-3.5-turbo-0125,"aid
A00
A00
A00","aid
A00
A00
A00",,0.0
How many aircrafts have distance between 1000 and 5000?,SELECT COUNT(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000,CREATE TABLE Aircraft (distance INTEGER),SELECT COUNT(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
What is the name and distance for aircraft with id 12?,"SELECT name, distance FROM Aircraft WHERE aid = 12","CREATE TABLE Aircraft (name VARCHAR, distance VARCHAR, aid VARCHAR)","SELECT name, distance FROM Aircraft WHERE aid = '12'",False,gpt-3.5-turbo-0125,name distance,"name distance
Airb  1000 km",,0.0
"What is the minimum, average, and maximum distance of all aircrafts.","SELECT MIN(distance), AVG(distance), MAX(distance) FROM Aircraft",CREATE TABLE Aircraft (distance INTEGER),"SELECT MIN(distance) AS minimum_distance, AVG(distance) AS average_distance, MAX(distance) AS maximum_distance FROM Aircraft",False,gpt-3.5-turbo-0125,"_col_0 _col_1 _col_2
   100  200.0    300","minimum_distance average_distance maximum_distance
             100            200.0              300",,0.0
Show the id and name of the aircraft with the maximum distance.,"SELECT aid, name FROM Aircraft ORDER BY distance DESC LIMIT 1","CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR, distance VARCHAR)","SELECT aid, name FROM Aircraft WHERE distance = (SELECT MAX(distance) FROM Aircraft)",True,gpt-3.5-turbo-0125,"aid name
  4 Embr","aid name
  4 Embr",,0.0
Show the name of aircrafts with top three lowest distances.,SELECT name FROM Aircraft ORDER BY distance LIMIT 3,"CREATE TABLE Aircraft (name VARCHAR, distance VARCHAR)",SELECT name FROM Aircraft ORDER BY distance ASC LIMIT 3,True,gpt-3.5-turbo-0125,"name
Boei
Cess
Embr","name
Boei
Cess
Embr",,0.0
Show names for all aircrafts with distances more than the average.,SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft),"CREATE TABLE Aircraft (name VARCHAR, distance INTEGER)",SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft),True,gpt-3.5-turbo-0125,"name
Boei
Bomb","name
Boei
Bomb",,0.0
How many employees do we have?,SELECT COUNT(*) FROM Employee,CREATE TABLE Employee (Id VARCHAR),SELECT COUNT(*) FROM Employee,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
Show name and salary for all employees sorted by salary.,"SELECT name, salary FROM Employee ORDER BY salary","CREATE TABLE Employee (name VARCHAR, salary VARCHAR)","SELECT name, salary FROM Employee ORDER BY salary",True,gpt-3.5-turbo-0125,"name salary
Alic  50000
Davi  52000
Char  55000
 Eve  58000
 Bob  60000","name salary
Alic  50000
Davi  52000
Char  55000
 Eve  58000
 Bob  60000",,0.0
Show ids for all employees with at least 100000 salary.,SELECT eid FROM Employee WHERE salary > 100000,"CREATE TABLE Employee (eid VARCHAR, salary INTEGER)",SELECT eid FROM Employee WHERE salary >= 100000,True,gpt-3.5-turbo-0125,"eid
001
003
004","eid
001
003
004",,0.0
How many employees have salary between 100000 and 200000?,SELECT COUNT(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000,CREATE TABLE Employee (salary INTEGER),SELECT COUNT(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
What is the name and salary for employee with id 242518965?,"SELECT name, salary FROM Employee WHERE eid = 242518965","CREATE TABLE Employee (name VARCHAR, salary VARCHAR, eid VARCHAR)","SELECT name, salary FROM Employee WHERE eid = '242518965';",False,gpt-3.5-turbo-0125,name salary,"name salary
John $50,00",,0.0
What is average and maximum salary of all employees.,"SELECT AVG(salary), MAX(salary) FROM Employee",CREATE TABLE Employee (salary INTEGER),"SELECT AVG(salary) AS average_salary, MAX(salary) AS maximum_salary FROM Employee",False,gpt-3.5-turbo-0125,"_col_0 _col_1
70000.  90000","average_salary maximum_salary
       70000.0          90000",,0.0
Show the id and name of the employee with maximum salary.,"SELECT eid, name FROM Employee ORDER BY salary DESC LIMIT 1","CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)","SELECT eid, name FROM Employee WHERE salary = (SELECT MAX(salary) FROM Employee)",True,gpt-3.5-turbo-0125,"eid name
005  Eve","eid name
005  Eve",,0.0
Show the name of employees with three lowest salaries.,SELECT name FROM Employee ORDER BY salary LIMIT 3,"CREATE TABLE Employee (name VARCHAR, salary VARCHAR)",SELECT name FROM Employee ORDER BY salary ASC LIMIT 3,True,gpt-3.5-turbo-0125,"name
 Eve
Char
Alic","name
 Eve
Char
Alic",,0.0
Show names for all employees with salary more than the average.,SELECT name FROM Employee WHERE salary > (SELECT AVG(salary) FROM Employee),"CREATE TABLE Employee (name VARCHAR, salary INTEGER)",SELECT name FROM Employee WHERE salary > (SELECT AVG(salary) FROM Employee),True,gpt-3.5-turbo-0125,"name
Davi
 Eve","name
Davi
 Eve",,0.0
Show the id and salary of Mark Young.,"SELECT eid, salary FROM Employee WHERE name = 'Mark Young'","CREATE TABLE Employee (eid VARCHAR, salary VARCHAR, name VARCHAR)","SELECT eid, salary FROM Employee WHERE name = 'Mark Young';",True,gpt-3.5-turbo-0125,"eid salary
003  70000","eid salary
003  70000",,0.0
How many flights do we have?,SELECT COUNT(*) FROM Flight,CREATE TABLE Flight (Id VARCHAR),SELECT COUNT(*) FROM Flight,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
"Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.","SELECT flno, origin, destination FROM Flight ORDER BY origin","CREATE TABLE Flight (flno VARCHAR, origin VARCHAR, destination VARCHAR)","SELECT flno, origin, destination FROM Flight ORDER BY origin ASC",True,gpt-3.5-turbo-0125,"flno origin destination
DD40 Boston Washington 
AA10 Chicag    New York
EE50 Dallas     Houston
BB20 Los An       Miami
CC30 San Fr     Seattle","flno origin destination
DD40 Boston Washington 
AA10 Chicag    New York
EE50 Dallas     Houston
BB20 Los An       Miami
CC30 San Fr     Seattle",,0.0
Show flight number for all flights with more than 2000 distance.,SELECT flno FROM Flight WHERE distance > 2000,"CREATE TABLE Flight (flno VARCHAR, distance INTEGER)",SELECT flno FROM Flight WHERE distance > 2000,True,gpt-3.5-turbo-0125,"flno
AA12
BB45
CC78
DD01
EE34","flno
AA12
BB45
CC78
DD01
EE34",,0.0
Show origin and destination for flights with price higher than 300.,"SELECT origin, destination FROM Flight WHERE price > 300","CREATE TABLE Flight (origin VARCHAR, destination VARCHAR, price INTEGER)","SELECT origin, destination FROM Flight WHERE price > 300;",True,gpt-3.5-turbo-0125,"origin destination
New Yo Los Angeles
Chicag       Miami
Dallas San Francis
Seattl      Boston
Atlant   Las Vegas","origin destination
New Yo Los Angeles
Chicag       Miami
Dallas San Francis
Seattl      Boston
Atlant   Las Vegas",,0.0
Show the flight number and distance of the flight with maximum price.,"SELECT flno, distance FROM Flight ORDER BY price DESC LIMIT 1","CREATE TABLE Flight (flno VARCHAR, distance VARCHAR, price VARCHAR)","SELECT flno, distance FROM Flight WHERE price = (SELECT MAX(price) FROM Flight)",True,gpt-3.5-turbo-0125,"flno distance
F500     2000","flno distance
F500     2000",,0.0
Show the flight number of flights with three lowest distances.,SELECT flno FROM Flight ORDER BY distance LIMIT 3,"CREATE TABLE Flight (flno VARCHAR, distance VARCHAR)",SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3,True,gpt-3.5-turbo-0125,"flno
FL00
FL00
FL00","flno
FL00
FL00
FL00",,0.0
Show all origins and the number of flights from each origin.,"SELECT origin, COUNT(*) FROM Flight GROUP BY origin",CREATE TABLE Flight (origin VARCHAR),"SELECT origin, COUNT(*) AS num_flights FROM Flight GROUP BY origin;",False,gpt-3.5-turbo-0125,"origin _col_1
Chicag      1
Dallas      1
Los An      1
 Miami      1
New Yo      1","origin num_flights
Chicag           1
Dallas           1
Los An           1
 Miami           1
New Yo           1",,0.0
Show all destinations and the number of flights to each destination.,"SELECT destination, COUNT(*) FROM Flight GROUP BY destination",CREATE TABLE Flight (destination VARCHAR),"SELECT destination, COUNT(*) AS num_flights FROM Flight GROUP BY destination;",False,gpt-3.5-turbo-0125,"destination _col_1
    Chicago      1
     Dallas      1
Los Angeles      1
      Miami      1
   New York      1","destination num_flights
    Chicago           1
     Dallas           1
Los Angeles           1
      Miami           1
   New York           1",,0.0
Which origin has most number of flights?,SELECT origin FROM Flight GROUP BY origin ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE Flight (origin VARCHAR),"SELECT origin, COUNT(*) AS num_flights FROM Flight GROUP BY origin ORDER BY num_flights DESC LIMIT 1",False,gpt-3.5-turbo-0125,"origin
Chicag","origin num_flights
Chicag           1",,0.0
Which destination has least number of flights?,SELECT destination FROM Flight GROUP BY destination ORDER BY COUNT(*) LIMIT 1,CREATE TABLE Flight (destination VARCHAR),"SELECT destination, COUNT(*) AS num_flights FROM Flight GROUP BY destination ORDER BY num_flights ASC LIMIT 1;",False,gpt-3.5-turbo-0125,"destination
    Chicago","destination num_flights
    Chicago           1",,0.0
What is the aircraft name for the flight with number 99,SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99,"CREATE TABLE Flight (aid VARCHAR, flno VARCHAR); CREATE TABLE Aircraft (name VARCHAR, aid VARCHAR)",SELECT Aircraft.name FROM Flight JOIN Aircraft ON Flight.aid = Aircraft.aid WHERE Flight.flno = '99';,False,gpt-3.5-turbo-0125,name,"name
Boei",,0.0
Show names for all aircraft with at least two flights.,SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING COUNT(*) >= 2,"CREATE TABLE Aircraft (name VARCHAR, aid VARCHAR); CREATE TABLE Flight (aid VARCHAR)",SELECT DISTINCT a.name FROM Aircraft a JOIN Flight f ON a.aid = f.aid GROUP BY a.name HAVING COUNT(f.aid) >= 2;,True,gpt-3.5-turbo-0125,name,name,,0.0
How many employees have certificate.,SELECT COUNT(DISTINCT eid) FROM Certificate,CREATE TABLE Certificate (eid VARCHAR),SELECT COUNT(*) FROM Certificate,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
How many allergies are there?,SELECT COUNT(DISTINCT allergy) FROM Allergy_type,CREATE TABLE Allergy_type (allergy VARCHAR),SELECT COUNT(allergy) AS total_allergies FROM Allergy_type,False,gpt-3.5-turbo-0125,"_col_0
     5","total_allergies
              5",,0.0
How many different allergy types exist?,SELECT COUNT(DISTINCT allergytype) FROM Allergy_type,CREATE TABLE Allergy_type (allergytype VARCHAR),SELECT COUNT(DISTINCT allergytype) AS num_allergy_types FROM Allergy_type,False,gpt-3.5-turbo-0125,"_col_0
     5","num_allergy_types
                5",,0.0
Show all allergy types.,SELECT DISTINCT allergytype FROM Allergy_type,CREATE TABLE Allergy_type (allergytype VARCHAR),SELECT allergytype FROM Allergy_type,False,gpt-3.5-turbo-0125,"allergytype
Dairy aller
Gluten alle
Peanut alle
Shellfish a
Soy allergy","allergytype
Peanut alle
Shellfish a
Dairy aller
Gluten alle
Soy allergy",,0.0
Show all allergies and their types.,"SELECT allergy, allergytype FROM Allergy_type","CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)","SELECT allergy, allergytype FROM Allergy_type",True,gpt-3.5-turbo-0125,"allergy allergytype
 Peanut        Food
 Pollen Environment
Penicil  Medication
    Cat      Animal
   Dust Environment","allergy allergytype
 Peanut        Food
 Pollen Environment
Penicil  Medication
    Cat      Animal
   Dust Environment",,0.0
Show all allergy types and the number of allergies in each type.,"SELECT allergytype, COUNT(*) FROM Allergy_type GROUP BY allergytype",CREATE TABLE Allergy_type (allergytype VARCHAR),"SELECT allergytype, COUNT(*) AS num_allergies FROM Allergy_type GROUP BY allergytype;",False,gpt-3.5-turbo-0125,"allergytype _col_1
Gluten alle      1
Lactose int      1
Peanut alle      1
Pollen alle      1
Shellfish a      1","allergytype num_allergies
Gluten alle             1
Lactose int             1
Peanut alle             1
Pollen alle             1
Shellfish a             1",,0.0
Which allergy type has most number of allergies?,SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE Allergy_type (allergytype VARCHAR),"SELECT allergytype, COUNT(*) AS num_allergies FROM Allergy_type GROUP BY allergytype ORDER BY num_allergies DESC LIMIT 1;",False,gpt-3.5-turbo-0125,"allergytype
Dairy aller","allergytype num_allergies
Dairy aller             1",,0.0
Which allergy type has least number of allergies?,SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY COUNT(*) LIMIT 1,CREATE TABLE Allergy_type (allergytype VARCHAR),"SELECT allergytype, COUNT(*) AS num_allergies FROM Allergy_type GROUP BY allergytype ORDER BY num_allergies ASC LIMIT 1;",False,gpt-3.5-turbo-0125,"allergytype
      Dairy","allergytype num_allergies
      Dairy             1",,0.0
How many students are there?,SELECT COUNT(*) FROM Student,CREATE TABLE Student (Id VARCHAR),SELECT COUNT(*) FROM Student,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
Show first name and last name for all students.,"SELECT Fname, Lname FROM Student","CREATE TABLE Student (Fname VARCHAR, Lname VARCHAR)","SELECT Fname, Lname FROM Student",True,gpt-3.5-turbo-0125,"fname lname
 John   Doe
 Jane Smith
Micha Johns
Sarah Willi
David Brown","fname lname
 John   Doe
 Jane Smith
Micha Johns
Sarah Willi
David Brown",,0.0
How many different advisors are listed?,SELECT COUNT(DISTINCT advisor) FROM Student,CREATE TABLE Student (advisor VARCHAR),SELECT COUNT(DISTINCT advisor) AS num_advisors FROM Student,False,gpt-3.5-turbo-0125,"_col_0
     5","num_advisors
           5",,0.0
Show all majors.,SELECT DISTINCT Major FROM Student,CREATE TABLE Student (Major VARCHAR),SELECT Major FROM Student,False,gpt-3.5-turbo-0125,"major
Biolo
Compu
Engli
Histo
Mathe","major
Compu
Biolo
Histo
Mathe
Engli",,0.0
Show all cities where students live.,SELECT DISTINCT city_code FROM Student,CREATE TABLE Student (city_code VARCHAR),SELECT city_code FROM Student,False,gpt-3.5-turbo-0125,"city_code
      CHI
      DAL
       LA
      MIA
      NYC","city_code
      NYC
       LA
      CHI
      MIA
      DAL",,0.0
"Show first name, last name, age for all female students. Their sex is F.","SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'","CREATE TABLE Student (Fname VARCHAR, Lname VARCHAR, Age VARCHAR, Sex VARCHAR)","SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'",True,gpt-3.5-turbo-0125,"fname lname age
Alice Smith  20
 Emma Johns  22
Olivi Willi  21
Sophi Brown  23
  Ava Jones  24","fname lname age
Alice Smith  20
 Emma Johns  22
Olivi Willi  21
Sophi Brown  23
  Ava Jones  24",,0.0
Show student ids for all male students.,SELECT StuID FROM Student WHERE Sex = 'M',"CREATE TABLE Student (StuID VARCHAR, Sex VARCHAR)",SELECT StuID FROM Student WHERE Sex = 'Male',False,gpt-3.5-turbo-0125,stuid,"stuid
  001
  003
  005",,0.0
How many students are age 18?,SELECT COUNT(*) FROM Student WHERE age = 18,CREATE TABLE Student (age VARCHAR),SELECT COUNT(*) FROM Student WHERE age = '18',False,gpt-3.5-turbo-0125,"_col_0
     0","_col_0
     3",,0.0
Show all student ids who are older than 20.,SELECT StuID FROM Student WHERE age > 20,"CREATE TABLE Student (StuID VARCHAR, age INTEGER)",SELECT StuID FROM Student WHERE age > 20,True,gpt-3.5-turbo-0125,"stuid
  001
  003
  005","stuid
  001
  003
  005",,0.0
Who is the advisor of student with ID 1004?,SELECT Advisor FROM Student WHERE StuID = 1004,"CREATE TABLE Student (Advisor VARCHAR, StuID VARCHAR)",SELECT Advisor FROM Student WHERE StuID = '1004',False,gpt-3.5-turbo-0125,advisor,"advisor
  Sarah",,0.0
"Show the minimum, average, and maximum age of all students.","SELECT MIN(age), AVG(age), MAX(age) FROM Student",CREATE TABLE Student (age INTEGER),"SELECT MIN(age) AS minimum_age, AVG(age) AS average_age, MAX(age) AS maximum_age FROM Student",False,gpt-3.5-turbo-0125,"_col_0 _col_1 _col_2
    18   21.2     25","minimum_age average_age maximum_age
         18        21.2          25",,0.0
What is the last name of the youngest student?,SELECT LName FROM Student WHERE age = (SELECT MIN(age) FROM Student),"CREATE TABLE Student (LName VARCHAR, age INTEGER)",SELECT LName FROM Student WHERE age = (SELECT MIN(age) FROM Student),True,gpt-3.5-turbo-0125,"lname
Willi","lname
Willi",,0.0
Show the student id of the oldest student.,SELECT StuID FROM Student WHERE age = (SELECT MAX(age) FROM Student),"CREATE TABLE Student (StuID VARCHAR, age INTEGER)",SELECT StuID FROM Student WHERE age = (SELECT MAX(age) FROM Student),True,gpt-3.5-turbo-0125,"stuid
  005","stuid
  005",,0.0
Show all majors and corresponding number of students.,"SELECT major, COUNT(*) FROM Student GROUP BY major",CREATE TABLE Student (major VARCHAR),"SELECT major, COUNT(*) AS num_students FROM Student GROUP BY major;",False,gpt-3.5-turbo-0125,"major _col_1
Biolo      1
Compu      1
Engli      1
Histo      1
Mathe      1","major num_students
Biolo            1
Compu            1
Engli            1
Histo            1
Mathe            1",,0.0
Which major has most number of students?,SELECT major FROM Student GROUP BY major ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE Student (major VARCHAR),"SELECT major, COUNT(*) AS num_students FROM Student GROUP BY major ORDER BY num_students DESC LIMIT 1",False,gpt-3.5-turbo-0125,"major
Biolo","major num_students
Biolo            1",,0.0
Show all ages and corresponding number of students.,"SELECT age, COUNT(*) FROM Student GROUP BY age",CREATE TABLE Student (age VARCHAR),"SELECT age, COUNT(*) as num_students FROM Student GROUP BY age",False,gpt-3.5-turbo-0125,"age _col_1
 19      1
 20      1
 21      1
 22      1
 23      1","age num_students
 19            1
 20            1
 21            1
 22            1
 23            1",,0.0
Show the average age for male and female students.,"SELECT AVG(age), sex FROM Student GROUP BY sex","CREATE TABLE Student (sex VARCHAR, age INTEGER)","SELECT sex, AVG(age) AS average_age FROM Student GROUP BY sex",False,gpt-3.5-turbo-0125,"_col_0 sex
  21.5 Fem
  19.0 Mal","sex average_age
Fem        21.5
Mal        19.0",,0.0
Show all cities and corresponding number of students.,"SELECT city_code, COUNT(*) FROM Student GROUP BY city_code",CREATE TABLE Student (city_code VARCHAR),"SELECT city_code, COUNT(*) AS num_students FROM Student GROUP BY city_code;",False,gpt-3.5-turbo-0125,"city_code _col_1
      CHI      1
       LA      1
      MIA      1
      NYC      1
       SF      1","city_code num_students
      CHI            1
       LA            1
      MIA            1
      NYC            1
       SF            1",,0.0
Show all advisors and corresponding number of students.,"SELECT advisor, COUNT(*) FROM Student GROUP BY advisor",CREATE TABLE Student (advisor VARCHAR),"SELECT advisor, COUNT(*) AS num_students FROM Student GROUP BY advisor",False,gpt-3.5-turbo-0125,"advisor _col_1
David W      1
Emily B      1
Jane Sm      1
John Do      1
Michael      1","advisor num_students
David W            1
Emily B            1
Jane Sm            1
John Do            1
Michael            1",,0.0
Which advisor has most number of students?,SELECT advisor FROM Student GROUP BY advisor ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE Student (advisor VARCHAR),"SELECT advisor, COUNT(*) AS num_students FROM Student GROUP BY advisor ORDER BY num_students DESC LIMIT 1",False,gpt-3.5-turbo-0125,"advisor
   John","advisor num_students
   John            3",,0.0
Show all student IDs who have at least two allergies.,SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2,CREATE TABLE Has_allergy (StuID VARCHAR),SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2,True,gpt-3.5-turbo-0125,stuid,stuid,,0.0
Which allergy has most number of students affected?,SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE Has_allergy (Allergy VARCHAR),"SELECT Allergy, COUNT(*) AS Number_of_Students FROM Has_allergy GROUP BY Allergy ORDER BY Number_of_Students DESC LIMIT 1",False,gpt-3.5-turbo-0125,"allergy
  Dairy","allergy number_of_students
  Dairy                  1",,0.0
Show all allergies with number of students affected.,"SELECT Allergy, COUNT(*) FROM Has_allergy GROUP BY Allergy",CREATE TABLE Has_allergy (Allergy VARCHAR),"SELECT Allergy, COUNT(*) AS Number_of_Students_Affected FROM Has_allergy GROUP BY Allergy;",False,gpt-3.5-turbo-0125,"allergy _col_1
  Dairy      1
 Gluten      1
Peanuts      1
Shellfi      1
    Soy      1","allergy number_of_students_affected
  Dairy                           1
 Gluten                           1
Peanuts                           1
Shellfi                           1
    Soy                           1",,0.0
Show all allergy type with number of students affected.,"SELECT T2.allergytype, COUNT(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype","CREATE TABLE Has_allergy (allergy VARCHAR); CREATE TABLE Allergy_type (allergytype VARCHAR, allergy VARCHAR)","SELECT allergytype, COUNT(*) AS num_students_affected FROM Allergy_type GROUP BY allergytype",False,gpt-3.5-turbo-0125,"allergytype _col_1
Food Allerg      5","allergytype num_students_affected
Food Allerg                     5",,0.0
A list of the top 5 countries by number of invoices. List country name and number of invoices.,"SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",CREATE TABLE invoices (billing_country VARCHAR),"SELECT billing_country, COUNT(*) AS num_invoices FROM invoices GROUP BY billing_country ORDER BY num_invoices DESC LIMIT 5",False,gpt-3.5-turbo-0125,"billing_country _col_1
      Australia      1
         Canada      1
         France      1
        Germany      1
            USA      1","billing_country num_invoices
      Australia            1
         Canada            1
         France            1
        Germany            1
            USA            1",,0.0
A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.,"SELECT billing_country, SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8","CREATE TABLE invoices (billing_country VARCHAR, total INTEGER)","SELECT billing_country, SUM(total) AS gross_invoice_size FROM invoices GROUP BY billing_country ORDER BY gross_invoice_size DESC LIMIT 8",False,gpt-3.5-turbo-0125,"billing_country _col_1
        Germany   1500
             UK   1200
            USA   1000
         France    900
         Canada    800","billing_country gross_invoice_size
        Germany               1500
             UK               1200
            USA               1000
         France                900
         Canada                800",,0.0
A list of the top 10 countries by average invoice size. List country name and average invoice size.,"SELECT billing_country, AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10","CREATE TABLE invoices (billing_country VARCHAR, total INTEGER)","SELECT billing_country AS country, AVG(total) AS average_invoice_size FROM invoices GROUP BY billing_country ORDER BY average_invoice_size DESC LIMIT 10",False,gpt-3.5-turbo-0125,"billing_country _col_1
        Germany  200.0
         France  180.0
         Canada  150.0
             UK  120.0
            USA  100.0","country average_invoice_size
Germany                200.0
 France                180.0
 Canada                150.0
     UK                120.0
    USA                100.0",,0.0
Find out 5 customers who most recently purchased something. List customers' first and last name.,"SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5","CREATE TABLE customers (first_name VARCHAR, last_name VARCHAR, id VARCHAR); CREATE TABLE invoices (customer_id VARCHAR, invoice_date VARCHAR)","SELECT c.first_name, c.last_name FROM customers c JOIN invoices i ON c.id = i.customer_id ORDER BY i.invoice_date DESC LIMIT 5;",True,gpt-3.5-turbo-0125,"first_name last_name
      John       Doe
      Jane     Smith
   Michael   Johnson
     Emily     Brown
     David  Williams","first_name last_name
      John       Doe
      Jane     Smith
   Michael   Johnson
     Emily     Brown
     David  Williams",,0.0
List every album's title.,SELECT title FROM albums,CREATE TABLE albums (title VARCHAR),SELECT title FROM albums,True,gpt-3.5-turbo-0125,"title
Album
Album
Album
Album
Album","title
Album
Album
Album
Album
Album",,0.0
List every album ordered by album title in ascending order.,SELECT title FROM albums ORDER BY title,CREATE TABLE albums (title VARCHAR),SELECT * FROM albums ORDER BY title ASC,True,gpt-3.5-turbo-0125,"title
Album
Album
Album
Album
Album","title
Album
Album
Album
Album
Album",,0.0
List every album whose title starts with A in alphabetical order.,SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title,CREATE TABLE albums (title VARCHAR),SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title ASC,True,gpt-3.5-turbo-0125,"title
A Hea
A Nig
Abbey
Achtu
Ameri","title
A Hea
A Nig
Abbey
Achtu
Ameri",,0.0
List the name of albums that are released by aritist whose name has 'Led',SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%',"CREATE TABLE artists (id VARCHAR, name VARCHAR); CREATE TABLE albums (title VARCHAR, artist_id VARCHAR)",SELECT DISTINCT a.title FROM albums a JOIN artists ar ON a.artist_id = ar.id WHERE ar.name LIKE '%Led%',False,gpt-3.5-turbo-0125,"title
Led Z
Led Z
House","title
House
Led Z
Led Z",,0.0
Who is the youngest employee in the company? List employee's first and last name.,"SELECT first_name, last_name FROM employees ORDER BY birth_date DESC LIMIT 1","CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, birth_date VARCHAR)","SELECT first_name, last_name FROM employees ORDER BY birth_date ASC LIMIT 1",False,gpt-3.5-turbo-0125,"first_name last_name
     David  Williams","first_name last_name
      John       Doe",,0.0
List top 10 employee work longest in the company. List employee's first and last name.,"SELECT first_name, last_name FROM employees ORDER BY hire_date LIMIT 10","CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, hire_date VARCHAR)","SELECT first_name, last_name FROM employees ORDER BY hire_date DESC LIMIT 10",False,gpt-3.5-turbo-0125,"first_name last_name
     Emily     Brown
      Jane     Smith
      John       Doe
     David  Williams
   Michael   Johnson","first_name last_name
   Michael   Johnson
     David  Williams
      John       Doe
      Jane     Smith
     Emily     Brown",,0.0
Find the number of employees whose title is IT Staff from each city?,"SELECT COUNT(*), city FROM employees WHERE title = 'IT Staff' GROUP BY city","CREATE TABLE employees (city VARCHAR, title VARCHAR)","SELECT city, COUNT(*) AS num_employees FROM employees WHERE title = 'IT Staff' GROUP BY city;",False,gpt-3.5-turbo-0125,"_col_0 city
     1 Chic
     1 Hous
     1 Miam
     1 New ","city num_employees
Chic             1
Hous             1
Miam             1
New              1",,0.0
List all media types.,SELECT name FROM media_types,CREATE TABLE media_types (name VARCHAR),SELECT name FROM media_types,True,gpt-3.5-turbo-0125,"name
Audi
Vide
Imag
Text
Inte","name
Audi
Vide
Imag
Text
Inte",,0.0
List all different genre types.,SELECT DISTINCT name FROM genres,CREATE TABLE genres (name VARCHAR),SELECT DISTINCT name FROM genres,True,gpt-3.5-turbo-0125,"name
Acti
Come
Dram
Horr
Sci-","name
Acti
Come
Dram
Horr
Sci-",,0.0
List the name of all playlist.,SELECT name FROM playlists,CREATE TABLE playlists (name VARCHAR),SELECT name FROM playlists,True,gpt-3.5-turbo-0125,"name
Work
Chil
Part
Stud
Road","name
Work
Chil
Part
Stud
Road",,0.0
List title of albums have the number of tracks greater than 10.,SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING COUNT(T1.id) > 10,"CREATE TABLE tracks (album_id VARCHAR); CREATE TABLE albums (title VARCHAR, id VARCHAR)","SELECT a.title FROM albums a JOIN (SELECT album_id, COUNT(*) AS num_tracks FROM tracks GROUP BY album_id HAVING num_tracks > 10) t ON a.id = t.album_id",True,gpt-3.5-turbo-0125,title,title,,0.0
List the name of playlist which has number of tracks greater than 100.,SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING COUNT(T1.track_id) > 100,"CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR); CREATE TABLE playlists (name VARCHAR, id VARCHAR)","SELECT p.name AS playlist_name FROM playlists p JOIN (SELECT playlist_id, COUNT(track_id) AS num_tracks FROM playlist_tracks GROUP BY playlist_id HAVING num_tracks > 100) t ON p.id = t.playlist_id;",False,gpt-3.5-turbo-0125,name,playlist_name,,0.0
Find the name of tracks which are in Movies playlist but not in music playlist.,SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music',"CREATE TABLE playlists (id VARCHAR, name VARCHAR); CREATE TABLE playlist_tracks (track_id VARCHAR, playlist_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR)",SELECT t.name FROM tracks t JOIN playlist_tracks pt ON t.id = pt.track_id JOIN playlists p ON pt.playlist_id = p.id WHERE p.name = 'Movies' AND t.id NOT IN (SELECT t.id FROM tracks t JOIN playlist_tracks pt ON t.id = pt.track_id JOIN playlists p ON pt.playlist_id = p.id WHERE p.name = 'Music'),False,gpt-3.5-turbo-0125,name,"name
Inte
Ince",,0.0
Find the name of tracks which are in both Movies and music playlists.,SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music',"CREATE TABLE playlists (id VARCHAR, name VARCHAR); CREATE TABLE playlist_tracks (track_id VARCHAR, playlist_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR)",SELECT t.name FROM tracks t JOIN playlist_tracks pt1 ON t.id = pt1.track_id JOIN playlists p1 ON pt1.playlist_id = p1.id JOIN playlist_tracks pt2 ON t.id = pt2.track_id JOIN playlists p2 ON pt2.playlist_id = p2.id WHERE p1.name = 'Movies' AND p2.name = 'Music',False,gpt-3.5-turbo-0125,"name
Trac
Trac",name,,0.0
Find number of tracks in each genre?,"SELECT COUNT(*), T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name","CREATE TABLE tracks (genre_id VARCHAR); CREATE TABLE genres (name VARCHAR, id VARCHAR)","SELECT g.name AS genre, COUNT(t.genre_id) AS num_tracks FROM genres g LEFT JOIN tracks t ON g.id = t.genre_id GROUP BY g.name;",False,gpt-3.5-turbo-0125,"_col_0 name
     1 Hip 
     2  Pop
     2 Rock","genre num_tracks
Hip H          1
  Pop          2
 Rock          2",,0.0
How many editors are there?,SELECT COUNT(*) FROM editor,CREATE TABLE editor (Id VARCHAR),SELECT COUNT(*) AS total_editors FROM editor,False,gpt-3.5-turbo-0125,"_col_0
     5","total_editors
            5",,0.0
List the names of editors in ascending order of age.,SELECT Name FROM editor ORDER BY Age,"CREATE TABLE editor (Name VARCHAR, Age VARCHAR)",SELECT Name FROM editor ORDER BY Age ASC,True,gpt-3.5-turbo-0125,"name
Alic
 Bob
Char
Davi
 Eve","name
Alic
 Bob
Char
Davi
 Eve",,0.0
What are the names and ages of editors?,"SELECT Name, Age FROM editor","CREATE TABLE editor (Name VARCHAR, Age VARCHAR)","SELECT Name, Age FROM editor",True,gpt-3.5-turbo-0125,"name age
John  30
Alic  25
 Bob  35
Emil  28
Mich  32","name age
John  30
Alic  25
 Bob  35
Emil  28
Mich  32",,0.0
List the names of editors who are older than 25.,SELECT Name FROM editor WHERE Age > 25,"CREATE TABLE editor (Name VARCHAR, Age INTEGER)",SELECT Name FROM editor WHERE Age > 25,True,gpt-3.5-turbo-0125,"name
Alic
 Bob
Char
 Eve","name
Alic
 Bob
Char
 Eve",,0.0
Show the names of editors of age either 24 or 25.,SELECT Name FROM editor WHERE Age = 24 OR Age = 25,"CREATE TABLE editor (Name VARCHAR, Age VARCHAR)","SELECT Name FROM editor WHERE Age IN ('24', '25')",False,gpt-3.5-turbo-0125,name,"name
John
Alic
Sara",,0.0
What is the name of the youngest editor?,SELECT Name FROM editor ORDER BY Age LIMIT 1,"CREATE TABLE editor (Name VARCHAR, Age VARCHAR)",SELECT Name FROM editor ORDER BY Age ASC LIMIT 1,True,gpt-3.5-turbo-0125,"name
Davi","name
Davi",,0.0
What are the different ages of editors? Show each age along with the number of editors of that age.,"SELECT Age, COUNT(*) FROM editor GROUP BY Age",CREATE TABLE editor (Age VARCHAR),"SELECT Age, COUNT(*) AS Number_of_Editors FROM editor GROUP BY Age",False,gpt-3.5-turbo-0125,"age _col_1
 25      1
 28      1
 30      1
 32      1
 35      1","age number_of_editors
 25                 1
 28                 1
 30                 1
 32                 1
 35                 1",,0.0
Please show the most common age of editors.,SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE editor (Age VARCHAR),"SELECT Age, COUNT(*) AS count FROM editor GROUP BY Age ORDER BY count DESC LIMIT 1",False,gpt-3.5-turbo-0125,"age
 25","age count
 25     2",,0.0
Show the distinct themes of journals.,SELECT DISTINCT Theme FROM journal,CREATE TABLE journal (Theme VARCHAR),SELECT DISTINCT Theme FROM journal,True,gpt-3.5-turbo-0125,"theme
  Art
Histo
Liter
Scien
Techn","theme
  Art
Histo
Liter
Scien
Techn",,0.0
Show the names of editors and the theme of journals for which they serve on committees.,"SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID","CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)","SELECT editor.Name, journal.Theme FROM editor JOIN journal_committee ON editor.Editor_ID = journal_committee.Editor_ID JOIN journal ON journal_committee.Journal_ID = journal.Journal_ID;",True,gpt-3.5-turbo-0125,"name theme
John Scien
Jane Techn
Mich Healt
Sara Busin
Davi Educa","name theme
John Scien
Jane Techn
Mich Healt
Sara Busin
Davi Educa",,0.0
"Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme.","SELECT T2.Name, T2.age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme","CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, age VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)","SELECT e.Name, e.age, j.Theme FROM editor e JOIN journal_committee jc ON e.Editor_ID = jc.Editor_ID JOIN journal j ON jc.Journal_ID = j.Journal_ID ORDER BY j.Theme ASC",True,gpt-3.5-turbo-0125,"name age theme
Char  40 Engin
Davi  45 Mathe
 Eve  50 Physi
Alic  30 Scien
 Bob  35 Techn","name age theme
Char  40 Engin
Davi  45 Mathe
 Eve  50 Physi
Alic  30 Scien
 Bob  35 Techn",,0.0
Show the names of editors that are on the committee of journals with sales bigger than 3000.,SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000,"CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Journal_ID VARCHAR, Sales INTEGER)",SELECT e.Name FROM editor e JOIN journal_committee jc ON e.Editor_ID = jc.Editor_ID JOIN journal j ON jc.Journal_ID = j.Journal_ID WHERE j.Sales > 3000,True,gpt-3.5-turbo-0125,"name
Jane
Emil
Davi","name
Jane
Emil
Davi",,0.0
Show the names of editors that are on at least two journal committees.,SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*) >= 2,"CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal_committee (Editor_ID VARCHAR)",SELECT Name FROM editor WHERE Editor_ID IN (SELECT Editor_ID FROM journal_committee GROUP BY Editor_ID HAVING COUNT(*) >= 2),True,gpt-3.5-turbo-0125,name,name,,0.0
List the names of editors that are not on any journal committee.,SELECT Name FROM editor WHERE NOT editor_id IN (SELECT editor_id FROM journal_committee),"CREATE TABLE editor (Name VARCHAR, editor_id VARCHAR); CREATE TABLE journal_committee (Name VARCHAR, editor_id VARCHAR)",SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee),True,gpt-3.5-turbo-0125,"name
John
Jane
Mich
Emil
Davi","name
John
Jane
Mich
Emil
Davi",,0.0
"List the date, theme and sales of the journal which did not have any of the listed editors serving on committee.","SELECT date, theme, sales FROM journal EXCEPT SELECT T1.date, T1.theme, T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID","CREATE TABLE journal_committee (journal_ID VARCHAR); CREATE TABLE journal (date VARCHAR, theme VARCHAR, sales VARCHAR); CREATE TABLE journal (date VARCHAR, theme VARCHAR, sales VARCHAR, journal_ID VARCHAR)","SELECT date, theme, sales FROM journal WHERE journal_ID NOT IN (SELECT journal_ID FROM journal_committee)",True,gpt-3.5-turbo-0125,"date theme sales
2022 Healt $1200
2022 Envir $1800
2022 Busin $2000","date theme sales
2022 Healt $1200
2022 Envir $1800
2022 Busin $2000",,0.0
What is the average sales of the journals that have an editor whose work type is 'Photo'?,SELECT AVG(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo',"CREATE TABLE journal_committee (journal_ID VARCHAR, work_type VARCHAR); CREATE TABLE journal (sales INTEGER, journal_ID VARCHAR)",SELECT AVG(j.sales) FROM journal j JOIN journal_committee jc ON j.journal_ID = jc.journal_ID WHERE jc.work_type = 'Photo',True,gpt-3.5-turbo-0125,"_col_0
183.33","_col_0
183.33",,0.0
How many accounts do we have?,SELECT COUNT(*) FROM Accounts,CREATE TABLE Accounts (Id VARCHAR),SELECT COUNT(Id) AS TotalAccounts FROM Accounts,False,gpt-3.5-turbo-0125,"_col_0
     5","totalaccounts
            5",,0.0
"Show ids, customer ids, names for all accounts.","SELECT account_id, customer_id, account_name FROM Accounts","CREATE TABLE Accounts (account_id VARCHAR, customer_id VARCHAR, account_name VARCHAR)","SELECT account_id, customer_id, account_name FROM Accounts",True,gpt-3.5-turbo-0125,"account_id customer_id account_name
         1         101      Savings
         2         102     Checking
         3         103   Investment
         4         104  Credit Card
         5         105         Loan","account_id customer_id account_name
         1         101      Savings
         2         102     Checking
         3         103   Investment
         4         104  Credit Card
         5         105         Loan",,0.0
Show all customer ids and the number of accounts for each customer.,"SELECT customer_id, COUNT(*) FROM Accounts GROUP BY customer_id",CREATE TABLE Accounts (customer_id VARCHAR),"SELECT customer_id, COUNT(*) AS num_accounts FROM Accounts GROUP BY customer_id;",False,gpt-3.5-turbo-0125,"customer_id _col_1
      12345      1
      24680      1
      54321      1
      67890      1
      98765      1","customer_id num_accounts
      12345            1
      24680            1
      54321            1
      67890            1
      98765            1",,0.0
Show the customer id and number of accounts with most accounts.,"SELECT customer_id, COUNT(*) FROM Accounts GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",CREATE TABLE Accounts (customer_id VARCHAR),"SELECT customer_id, COUNT(*) AS num_accounts FROM Accounts GROUP BY customer_id ORDER BY num_accounts DESC LIMIT 1;",False,gpt-3.5-turbo-0125,"customer_id _col_1
      12345      1","customer_id num_accounts
      12345            1",,0.0
Show the number of all customers without an account.,SELECT COUNT(*) FROM Customers WHERE NOT customer_id IN (SELECT customer_id FROM Accounts),CREATE TABLE Customers (customer_id VARCHAR); CREATE TABLE Accounts (customer_id VARCHAR),SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts),True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
Show the first names and last names of customers without any account.,"SELECT customer_first_name, customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name, T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id","CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR)","SELECT customer_first_name, customer_last_name FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)",False,gpt-3.5-turbo-0125,"customer_first_name customer_last_name
                Eve              Brown
              Alice              Smith
                Bob            Johnson","customer_first_name customer_last_name
              Alice              Smith
                Bob            Johnson
                Eve              Brown",,0.0
Show distinct first and last names for all customers with an account.,"SELECT DISTINCT T1.customer_first_name, T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id","CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)","SELECT DISTINCT customer_first_name, customer_last_name FROM Customers WHERE customer_id IN (SELECT customer_id FROM Accounts)",True,gpt-3.5-turbo-0125,"customer_first_name customer_last_name
              David              Brown
               Jane              Smith
               John                Doe
            Michael            Johnson
              Sarah           Williams","customer_first_name customer_last_name
              David              Brown
               Jane              Smith
               John                Doe
            Michael            Johnson
              Sarah           Williams",,0.0
How many customers have an account?,SELECT COUNT(DISTINCT customer_id) FROM Accounts,CREATE TABLE Accounts (customer_id VARCHAR),SELECT COUNT(DISTINCT customer_id) AS total_customers FROM Accounts,False,gpt-3.5-turbo-0125,"_col_0
     5","total_customers
              5",,0.0
How many customers do we have?,SELECT COUNT(*) FROM Customers,CREATE TABLE Customers (Id VARCHAR),SELECT COUNT(*) AS total_customers FROM Customers,False,gpt-3.5-turbo-0125,"_col_0
     5","total_customers
              5",,0.0
"Show ids, first names, last names, and phones for all customers.","SELECT customer_id, customer_first_name, customer_last_name, customer_phone FROM Customers","CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR, customer_last_name VARCHAR, customer_phone VARCHAR)","SELECT customer_id, customer_first_name, customer_last_name, customer_phone FROM Customers",True,gpt-3.5-turbo-0125,"customer_id customer_first_name customer_last_name customer_phone
          1                John                Doe       555-1234
          2                Jane              Smith       555-5678
          3             Michael            Johnson       555-9012
          4               Emily              Brown       555-3456
          5               David             Wilson       555-7890","customer_id customer_first_name customer_last_name customer_phone
          1                John                Doe       555-1234
          2                Jane              Smith       555-5678
          3             Michael            Johnson       555-9012
          4               Emily              Brown       555-3456
          5               David             Wilson       555-7890",,0.0
Show the number of customer cards.,SELECT COUNT(*) FROM Customers_cards,CREATE TABLE Customers_cards (Id VARCHAR),SELECT COUNT(*) AS number_of_customer_cards FROM Customers_cards,False,gpt-3.5-turbo-0125,"_col_0
     5","number_of_customer_cards
                       5",,0.0
"Show ids, customer ids, card type codes, card numbers for all cards.","SELECT card_id, customer_id, card_type_code, card_number FROM Customers_cards","CREATE TABLE Customers_cards (card_id VARCHAR, customer_id VARCHAR, card_type_code VARCHAR, card_number VARCHAR)","SELECT card_id, customer_id, card_type_code, card_number FROM Customers_cards",True,gpt-3.5-turbo-0125,"card_id customer_id card_type_code card_number
      1        1001           VISA 1234 5678 9
      2        1002     MasterCard 9876 5432 1
      3        1003 American Expre 2468 1357 8
      4        1004       Discover 5555 4444 3
      5        1005    Diners Club 7777 8888 9","card_id customer_id card_type_code card_number
      1        1001           VISA 1234 5678 9
      2        1002     MasterCard 9876 5432 1
      3        1003 American Expre 2468 1357 8
      4        1004       Discover 5555 4444 3
      5        1005    Diners Club 7777 8888 9",,0.0
Show all customer ids and the number of cards owned by each customer.,"SELECT customer_id, COUNT(*) FROM Customers_cards GROUP BY customer_id",CREATE TABLE Customers_cards (customer_id VARCHAR),"SELECT customer_id, COUNT(*) AS number_of_cards FROM Customers_cards GROUP BY customer_id;",False,gpt-3.5-turbo-0125,"customer_id _col_1
       C001      1
       C002      1
       C003      1
       C004      1
       C005      1","customer_id number_of_cards
       C001               1
       C002               1
       C003               1
       C004               1
       C005               1",,0.0
"What is the customer id with most number of cards, and how many does he have?","SELECT customer_id, COUNT(*) FROM Customers_cards GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",CREATE TABLE Customers_cards (customer_id VARCHAR),"SELECT customer_id, COUNT(*) AS card_count FROM Customers_cards GROUP BY customer_id ORDER BY card_count DESC LIMIT 1",False,gpt-3.5-turbo-0125,"customer_id _col_1
      12345      1","customer_id card_count
      12345          1",,0.0
"Show id, first and last names for all customers with at least two cards.","SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(*) >= 2","CREATE TABLE Customers_cards (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)","SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM Customers c JOIN (SELECT customer_id, COUNT(*) as num_cards FROM Customers_cards GROUP BY customer_id HAVING num_cards >= 2) cc ON c.customer_id = cc.customer_id",True,gpt-3.5-turbo-0125,customer_id customer_first_name customer_last_name,customer_id customer_first_name customer_last_name,,0.0
Show all card type codes and the number of cards in each type.,"SELECT card_type_code, COUNT(*) FROM Customers_cards GROUP BY card_type_code",CREATE TABLE Customers_cards (card_type_code VARCHAR),"SELECT card_type_code, COUNT(*) AS number_of_cards FROM Customers_cards GROUP BY card_type_code;",False,gpt-3.5-turbo-0125,"card_type_code _col_1
American Expre      1
   Diners Club      1
      Discover      1
    MasterCard      1
          VISA      1","card_type_code number_of_cards
American Expre               1
   Diners Club               1
      Discover               1
    MasterCard               1
          VISA               1",,0.0
What is the card type code with most number of cards?,SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE Customers_cards (card_type_code VARCHAR),"SELECT card_type_code, COUNT(*) AS card_count FROM Customers_cards GROUP BY card_type_code ORDER BY card_count DESC LIMIT 1",False,gpt-3.5-turbo-0125,"card_type_code
          VISA","card_type_code card_count
          VISA          2",,0.0
Show card type codes with at least 5 cards.,SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING COUNT(*) >= 5,CREATE TABLE Customers_cards (card_type_code VARCHAR),SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING COUNT(*) >= 5,True,gpt-3.5-turbo-0125,card_type_code,card_type_code,,0.0
Show all card type codes and the number of customers holding cards in each type.,"SELECT card_type_code, COUNT(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code","CREATE TABLE Customers_cards (card_type_code VARCHAR, customer_id VARCHAR)","SELECT card_type_code, COUNT(customer_id) AS num_customers FROM Customers_cards GROUP BY card_type_code;",False,gpt-3.5-turbo-0125,"card_type_code _col_1
American Expre      1
      Discover      1
    MasterCard      1
          VISA      2","card_type_code num_customers
American Expre             1
      Discover             1
    MasterCard             1
          VISA             2",,0.0
Show all card type codes.,SELECT DISTINCT card_type_code FROM Customers_Cards,CREATE TABLE Customers_Cards (card_type_code VARCHAR),SELECT card_type_code FROM Customers_Cards,False,gpt-3.5-turbo-0125,"card_type_code
American Expre
   Diners Club
      Discover
    MasterCard
          VISA","card_type_code
          VISA
    MasterCard
American Expre
      Discover
   Diners Club",,0.0
Show the number of card types.,SELECT COUNT(DISTINCT card_type_code) FROM Customers_Cards,CREATE TABLE Customers_Cards (card_type_code VARCHAR),SELECT COUNT(DISTINCT card_type_code) AS number_of_card_types FROM Customers_Cards,False,gpt-3.5-turbo-0125,"_col_0
     5","number_of_card_types
                   5",,0.0
Show all transaction types.,SELECT DISTINCT transaction_type FROM Financial_Transactions,CREATE TABLE Financial_Transactions (transaction_type VARCHAR),SELECT transaction_type FROM Financial_Transactions,False,gpt-3.5-turbo-0125,"transaction_type
         Deposit
         Payment
          Refund
        Transfer
      Withdrawal","transaction_type
         Deposit
      Withdrawal
        Transfer
         Payment
          Refund",,0.0
Show the number of transaction types.,SELECT COUNT(DISTINCT transaction_type) FROM Financial_Transactions,CREATE TABLE Financial_Transactions (transaction_type VARCHAR),SELECT COUNT(DISTINCT transaction_type) AS number_of_transaction_types FROM Financial_Transactions,False,gpt-3.5-turbo-0125,"_col_0
     5","number_of_transaction_types
                          5",,0.0
What is the average and total transaction amount?,"SELECT AVG(transaction_amount), SUM(transaction_amount) FROM Financial_transactions",CREATE TABLE Financial_transactions (transaction_amount INTEGER),"SELECT AVG(transaction_amount) AS average_transaction_amount, SUM(transaction_amount) AS total_transaction_amount FROM Financial_transactions",False,gpt-3.5-turbo-0125,"_col_0 _col_1
 200.0   1000","average_transaction_amount total_transaction_amount
                     200.0                     1000",,0.0
Show the card type codes and the number of transactions.,"SELECT T2.card_type_code, COUNT(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code","CREATE TABLE Financial_transactions (card_id VARCHAR); CREATE TABLE Customers_cards (card_type_code VARCHAR, card_id VARCHAR)","SELECT card_type_code, COUNT(*) AS number_of_transactions FROM Customers_cards GROUP BY card_type_code",False,gpt-3.5-turbo-0125,"card_type_code _col_1
             A      1
             B      1
             C      1
             D      1
             E      1","card_type_code number_of_transactions
             A                      1
             B                      1
             C                      1
             D                      1
             E                      1",,0.0
Show the transaction type and the number of transactions.,"SELECT transaction_type, COUNT(*) FROM Financial_transactions GROUP BY transaction_type",CREATE TABLE Financial_transactions (transaction_type VARCHAR),"SELECT transaction_type, COUNT(*) AS number_of_transactions FROM Financial_transactions GROUP BY transaction_type;",False,gpt-3.5-turbo-0125,"transaction_type _col_1
         Deposit      1
         Payment      1
          Refund      1
        Transfer      1
      Withdrawal      1","transaction_type number_of_transactions
         Deposit                      1
         Payment                      1
          Refund                      1
        Transfer                      1
      Withdrawal                      1",,0.0
What is the transaction type that has processed the greatest total amount in transactions?,SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY SUM(transaction_amount) DESC LIMIT 1,"CREATE TABLE Financial_transactions (transaction_type VARCHAR, transaction_amount INTEGER)",SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY SUM(transaction_amount) DESC LIMIT 1,True,gpt-3.5-turbo-0125,"transaction_type
         Deposit","transaction_type
         Deposit",,0.0
Show the account id and the number of transactions for each account,"SELECT account_id, COUNT(*) FROM Financial_transactions GROUP BY account_id",CREATE TABLE Financial_transactions (account_id VARCHAR),"SELECT account_id, COUNT(*) AS num_transactions FROM Financial_transactions GROUP BY account_id",False,gpt-3.5-turbo-0125,"account_id _col_1
     12345      1
     24680      1
     54321      1
     67890      1
     98765      1","account_id num_transactions
     12345                1
     24680                1
     54321                1
     67890                1
     98765                1",,0.0
How many tracks do we have?,SELECT COUNT(*) FROM track,CREATE TABLE track (Id VARCHAR),SELECT COUNT(*) AS total_tracks FROM track,False,gpt-3.5-turbo-0125,"_col_0
     5","total_tracks
           5",,0.0
Show the name and location for all tracks.,"SELECT name, LOCATION FROM track","CREATE TABLE track (name VARCHAR, LOCATION VARCHAR)","SELECT name, location FROM track",True,gpt-3.5-turbo-0125,"name location
Trac Location
Trac Location
Trac Location
Trac Location
Trac Location","name location
Trac Location
Trac Location
Trac Location
Trac Location
Trac Location",,0.0
"Show names and seatings, ordered by seating for all tracks opened after 2000.","SELECT name, seating FROM track WHERE year_opened > 2000 ORDER BY seating","CREATE TABLE track (name VARCHAR, seating VARCHAR, year_opened INTEGER)","SELECT name, seating FROM track WHERE year_opened > 2000 ORDER BY seating",True,gpt-3.5-turbo-0125,"name seating
Spee     100
Twis     150
Loop     200
Wild     250
Thun     300","name seating
Spee     100
Twis     150
Loop     200
Wild     250
Thun     300",,0.0
"What is the name, location and seating for the most recently opened track?","SELECT name, LOCATION, seating FROM track ORDER BY year_opened DESC LIMIT 1","CREATE TABLE track (name VARCHAR, LOCATION VARCHAR, seating VARCHAR, year_opened VARCHAR)","SELECT name, location, seating FROM track WHERE year_opened = (SELECT MAX(year_opened) FROM track)",True,gpt-3.5-turbo-0125,"name location seating
Spee   City A    5000","name location seating
Spee   City A    5000",,0.0
"What is the minimum, maximum, and average seating for all tracks.","SELECT MIN(seating), MAX(seating), AVG(seating) FROM track",CREATE TABLE track (seating INTEGER),"SELECT MIN(seating) AS min_seating, MAX(seating) AS max_seating, AVG(seating) AS avg_seating FROM track",False,gpt-3.5-turbo-0125,"_col_0 _col_1 _col_2
    80    200  130.0","min_seating max_seating avg_seating
         80         200       130.0",,0.0
"Show the name, location, open year for all tracks with a seating higher than the average.","SELECT name, LOCATION, year_opened FROM track WHERE seating > (SELECT AVG(seating) FROM track)","CREATE TABLE track (name VARCHAR, LOCATION VARCHAR, year_opened VARCHAR, seating INTEGER)","SELECT name, location, year_opened FROM track WHERE seating > (SELECT AVG(seating) FROM track)",True,gpt-3.5-turbo-0125,"name location year_opened
Dome   City D        2005
Park   City E        1990","name location year_opened
Dome   City D        2005
Park   City E        1990",,0.0
What are distinct locations where tracks are located?,SELECT DISTINCT LOCATION FROM track,CREATE TABLE track (LOCATION VARCHAR),SELECT DISTINCT LOCATION FROM track,True,gpt-3.5-turbo-0125,"location
 Chicago
Los Ange
   Miami
New York
San Fran","location
 Chicago
Los Ange
   Miami
New York
San Fran",,0.0
How many races are there?,SELECT COUNT(*) FROM race,CREATE TABLE race (Id VARCHAR),SELECT COUNT(*) AS num_races FROM race,False,gpt-3.5-turbo-0125,"_col_0
     5","num_races
        5",,0.0
What are the distinct classes that races can have?,SELECT DISTINCT CLASS FROM race,CREATE TABLE race (CLASS VARCHAR),SELECT DISTINCT CLASS FROM race,True,gpt-3.5-turbo-0125,"class
Arche
Cleri
 Mage
Rogue
Warri","class
Arche
Cleri
 Mage
Rogue
Warri",,0.0
"Show name, class, and date for all races.","SELECT name, CLASS, date FROM race","CREATE TABLE race (name VARCHAR, CLASS VARCHAR, date VARCHAR)","SELECT name, class, date FROM race",True,gpt-3.5-turbo-0125,"name class date
Race Warri 2022
Race  Mage 2022
Race Rogue 2022
Race Palad 2022
Race Druid 2022","name class date
Race Warri 2022
Race  Mage 2022
Race Rogue 2022
Race Palad 2022
Race Druid 2022",,0.0
Show the race class and number of races in each class.,"SELECT CLASS, COUNT(*) FROM race GROUP BY CLASS",CREATE TABLE race (CLASS VARCHAR),"SELECT CLASS, COUNT(*) AS number_of_races FROM race GROUP BY CLASS;",False,gpt-3.5-turbo-0125,"class _col_1
Cleri      1
 Mage      1
Palad      1
Rogue      1
Warri      1","class number_of_races
Cleri               1
 Mage               1
Palad               1
Rogue               1
Warri               1",,0.0
What is the race class with most number of races.,SELECT CLASS FROM race GROUP BY CLASS ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE race (CLASS VARCHAR),"SELECT CLASS, COUNT(*) AS num_races FROM race GROUP BY CLASS ORDER BY num_races DESC LIMIT 1",False,gpt-3.5-turbo-0125,"class
Dwarf","class num_races
Dwarf         1",,0.0
List the race class with at least two races.,SELECT CLASS FROM race GROUP BY CLASS HAVING COUNT(*) >= 2,CREATE TABLE race (CLASS VARCHAR),SELECT CLASS FROM race GROUP BY CLASS HAVING COUNT(*) >= 2,True,gpt-3.5-turbo-0125,class,class,,0.0
Show all track names that have had no races.,SELECT name FROM track WHERE NOT track_id IN (SELECT track_id FROM race),"CREATE TABLE track (name VARCHAR, track_id VARCHAR); CREATE TABLE race (name VARCHAR, track_id VARCHAR)",SELECT track.name FROM track LEFT JOIN race ON track.track_id = race.track_id WHERE race.name IS NULL;,False,gpt-3.5-turbo-0125,"name
Trac
Trac
Trac
Trac
Trac",name,,0.0
Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened.,SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000,"CREATE TABLE track (year_opened VARCHAR, seating INTEGER)",SELECT year_opened FROM track WHERE seating >= 5000 AND year_opened IN (SELECT year_opened FROM track WHERE seating <= 4000),False,gpt-3.5-turbo-0125,"year_opened
       2010
       2008
       2006",year_opened,,0.0
Show the name of track and the number of races in each track.,"SELECT T2.name, COUNT(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id","CREATE TABLE track (name VARCHAR, track_id VARCHAR); CREATE TABLE race (track_id VARCHAR)","SELECT track.name, COUNT(race.track_id) AS number_of_races FROM track LEFT JOIN race ON track.track_id = race.track_id GROUP BY track.name;",False,gpt-3.5-turbo-0125,name _col_1,"name number_of_races
Trac               1
Trac               1
Trac               1
Trac               1
Trac               1",,0.0
Show the name and date for each race and its track name.,"SELECT T1.name, T1.date, T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id","CREATE TABLE race (name VARCHAR, date VARCHAR, track_id VARCHAR); CREATE TABLE track (name VARCHAR, track_id VARCHAR)","SELECT race.name, race.date, track.name FROM race JOIN track ON race.track_id = track.track_id;",True,gpt-3.5-turbo-0125,"name date name
Trac 2022 Trac
Trac 2022 Trac
Trac 2022 Trac
Trac 2022 Trac
Trac 2022 Trac","name date name
Trac 2022 Trac
Trac 2022 Trac
Trac 2022 Trac
Trac 2022 Trac
Trac 2022 Trac",,0.0
Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.,SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000,"CREATE TABLE track (LOCATION VARCHAR, seating INTEGER)",SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000,False,gpt-3.5-turbo-0125,"location
 Houston","location
New York
   Miami
 Chicago",,0.0
How many members have the black membership card?,SELECT COUNT(*) FROM member WHERE Membership_card = 'Black',CREATE TABLE member (Membership_card VARCHAR),SELECT COUNT(*) FROM member WHERE Membership_card = 'black',False,gpt-3.5-turbo-0125,"_col_0
     0","_col_0
     5",,0.0
Find the number of members living in each address.,"SELECT COUNT(*), address FROM member GROUP BY address",CREATE TABLE member (address VARCHAR),"SELECT address, COUNT(*) AS num_members FROM member GROUP BY address",False,gpt-3.5-turbo-0125,"_col_0 address
     1 123 Mai
     1 321 Pin
     1 456 Elm
     1 654 Map
     1 789 Oak","address num_members
123 Mai           1
321 Pin           1
456 Elm           1
654 Map           1
789 Oak           1",,0.0
Give me the names of members whose address is in Harford or Waterbury.,SELECT name FROM member WHERE address = 'Harford' OR address = 'Waterbury',"CREATE TABLE member (name VARCHAR, address VARCHAR)","SELECT name FROM member WHERE address IN ('Harford', 'Waterbury')",True,gpt-3.5-turbo-0125,"name
Alic
 Bob
Davi
 Eve","name
Alic
 Bob
Davi
 Eve",,0.0
"Find the purchase time, age and address of each member, and show the results in the order of purchase time.","SELECT Time_of_purchase, age, address FROM member ORDER BY Time_of_purchase","CREATE TABLE member (Time_of_purchase VARCHAR, age VARCHAR, address VARCHAR)","SELECT Time_of_purchase, age, address FROM member ORDER BY Time_of_purchase",True,gpt-3.5-turbo-0125,"time_of_purchase age address
2022-01-15 08:30  25 123 Mai
2022-01-16 12:45  30 456 Elm
2022-01-17 15:20  40 789 Oak
2022-01-18 10:10  35 321 Pin
2022-01-19 09:00  28 654 Map","time_of_purchase age address
2022-01-15 08:30  25 123 Mai
2022-01-16 12:45  30 456 Elm
2022-01-17 15:20  40 789 Oak
2022-01-18 10:10  35 321 Pin
2022-01-19 09:00  28 654 Map",,0.0
Which membership card has more than 5 members?,SELECT Membership_card FROM member GROUP BY Membership_card HAVING COUNT(*) > 5,CREATE TABLE member (Membership_card VARCHAR),SELECT Membership_card FROM member GROUP BY Membership_card HAVING COUNT(*) > 5,True,gpt-3.5-turbo-0125,membership_card,membership_card,,0.0
Which address has both members younger than 30 and members older than 40?,SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40,"CREATE TABLE member (address VARCHAR, age INTEGER)",SELECT address FROM member GROUP BY address HAVING MIN(age) < 30 AND MAX(age) > 40,False,gpt-3.5-turbo-0125,"address
202 Map
789 Oak",address,,0.0
What is the membership card held by both members living in Hartford and ones living in Waterbury address?,SELECT membership_card FROM member WHERE address = 'Hartford' INTERSECT SELECT membership_card FROM member WHERE address = 'Waterbury',"CREATE TABLE member (membership_card VARCHAR, address VARCHAR)",SELECT membership_card FROM member WHERE address = 'Hartford' INTERSECT SELECT membership_card FROM member WHERE address = 'Waterbury',True,gpt-3.5-turbo-0125,"membership_card
          67890
          09876","membership_card
          67890
          09876",,0.0
How many members are not living in Hartford?,SELECT COUNT(*) FROM member WHERE address <> 'Hartford',CREATE TABLE member (address VARCHAR),SELECT COUNT(*) FROM member WHERE address <> 'Hartford',True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
Which address do not have any member with the black membership card?,SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card = 'Black',"CREATE TABLE member (address VARCHAR, Membership_card VARCHAR)",SELECT DISTINCT address FROM member WHERE address NOT IN (SELECT address FROM member WHERE Membership_card = 'black'),False,gpt-3.5-turbo-0125,address,"address
101 Pin
123 Mai
202 Map
456 Elm
789 Oak",,0.0
Show the shop addresses ordered by their opening year.,SELECT address FROM shop ORDER BY open_year,"CREATE TABLE shop (address VARCHAR, open_year VARCHAR)",SELECT address FROM shop ORDER BY open_year,True,gpt-3.5-turbo-0125,"address
123 Mai
456 Elm
789 Oak
321 Pin
654 Map","address
123 Mai
456 Elm
789 Oak
321 Pin
654 Map",,0.0
What are the average score and average staff number of all shops?,"SELECT AVG(num_of_staff), AVG(score) FROM shop","CREATE TABLE shop (num_of_staff INTEGER, score INTEGER)","SELECT AVG(score) AS average_score, AVG(num_of_staff) AS average_staff_number FROM shop",False,gpt-3.5-turbo-0125,"_col_0 _col_1
   9.0   81.6","average_score average_staff_number
         81.6                  9.0",,0.0
Find the id and address of the shops whose score is below the average score.,"SELECT shop_id, address FROM shop WHERE score < (SELECT AVG(score) FROM shop)","CREATE TABLE shop (shop_id VARCHAR, address VARCHAR, score INTEGER)","SELECT shop_id, address FROM shop WHERE score < (SELECT AVG(score) FROM shop)",True,gpt-3.5-turbo-0125,"shop_id address
    002 456 Elm
    004 101 Pin","shop_id address
    002 456 Elm
    004 101 Pin",,0.0
Find the address and staff number of the shops that do not have any happy hour.,"SELECT address, num_of_staff FROM shop WHERE NOT shop_id IN (SELECT shop_id FROM happy_hour)","CREATE TABLE shop (address VARCHAR, num_of_staff VARCHAR, shop_id VARCHAR); CREATE TABLE happy_hour (address VARCHAR, num_of_staff VARCHAR, shop_id VARCHAR)","SELECT address, num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)",True,gpt-3.5-turbo-0125,"address num_of_staff
123 Mai           10
456 Elm            8
789 Oak           12
101 Pin            6
202 Map            9","address num_of_staff
123 Mai           10
456 Elm            8
789 Oak           12
101 Pin            6
202 Map            9",,0.0
which shop has happy hour most frequently? List its id and number of happy hours.,"SELECT shop_id, COUNT(*) FROM happy_hour GROUP BY shop_id ORDER BY COUNT(*) DESC LIMIT 1",CREATE TABLE happy_hour (shop_id VARCHAR),"SELECT shop_id, COUNT(*) AS num_happy_hours FROM happy_hour GROUP BY shop_id ORDER BY num_happy_hours DESC LIMIT 1",False,gpt-3.5-turbo-0125,"shop_id _col_1
    101      1","shop_id num_happy_hours
    101               1",,0.0
Which month has the most happy hours?,SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE happy_hour (MONTH VARCHAR),"SELECT MONTH, COUNT(*) AS happy_hour_count FROM happy_hour GROUP BY MONTH ORDER BY happy_hour_count DESC LIMIT 1",False,gpt-3.5-turbo-0125,"month
April","month happy_hour_count
April                1",,0.0
Which months have more than 2 happy hours?,SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING COUNT(*) > 2,CREATE TABLE happy_hour (MONTH VARCHAR),SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING COUNT(*) > 2,True,gpt-3.5-turbo-0125,month,month,,0.0
How many albums are there?,SELECT COUNT(*) FROM ALBUM,CREATE TABLE ALBUM (Id VARCHAR),SELECT COUNT(*) FROM ALBUM,True,gpt-3.5-turbo-0125,"_col_0
     5","_col_0
     5",,0.0
List the names of all music genres.,SELECT Name FROM GENRE,CREATE TABLE GENRE (Name VARCHAR),SELECT Name FROM GENRE,True,gpt-3.5-turbo-0125,"name
Rock
 Pop
Hip 
Coun
Elec","name
Rock
 Pop
Hip 
Coun
Elec",,0.0
What are the distinct billing countries of the invoices?,SELECT DISTINCT (BillingCountry) FROM INVOICE,CREATE TABLE INVOICE (BillingCountry VARCHAR),SELECT DISTINCT BillingCountry FROM INVOICE,True,gpt-3.5-turbo-0125,"billingcountry
     Australia
        Canada
        France
       Germany
           USA","billingcountry
     Australia
        Canada
        France
       Germany
           USA",,0.0
Which artist has the most albums?,SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1,"CREATE TABLE ALBUM (ArtistId VARCHAR); CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)","SELECT Name AS Artist, COUNT(*) AS AlbumCount FROM ARTIST JOIN ALBUM ON ARTIST.ArtistId = ALBUM.ArtistId GROUP BY Name ORDER BY AlbumCount DESC LIMIT 1;",False,gpt-3.5-turbo-0125,"name
Jane","artist albumcount
Jane S          4",,0.0
What is the average unit price of all the tracks?,SELECT AVG(UnitPrice) FROM TRACK,CREATE TABLE TRACK (UnitPrice INTEGER),SELECT AVG(UnitPrice) AS AverageUnitPrice FROM TRACK,False,gpt-3.5-turbo-0125,"_col_0
   3.0","averageunitprice
             3.0",,0.0
What are the durations of the longest and the shortest tracks in milliseconds?,"SELECT MAX(Milliseconds), MIN(Milliseconds) FROM TRACK",CREATE TABLE TRACK (Milliseconds INTEGER),"SELECT MAX(Milliseconds) AS longest_duration, MIN(Milliseconds) AS shortest_duration FROM TRACK",False,gpt-3.5-turbo-0125,"_col_0 _col_1
420000 180000","longest_duration shortest_duration
          420000            180000",,0.0
How many distinct cities does the employees live in?,SELECT COUNT(DISTINCT city) FROM EMPLOYEE,CREATE TABLE EMPLOYEE (city VARCHAR),SELECT COUNT(DISTINCT city) AS distinct_cities FROM EMPLOYEE,False,gpt-3.5-turbo-0125,"_col_0
     5","distinct_cities
              5",,0.0
List the phone numbers of all employees.,SELECT Phone FROM EMPLOYEE,CREATE TABLE EMPLOYEE (Phone VARCHAR),SELECT Phone FROM EMPLOYEE,True,gpt-3.5-turbo-0125,"phone
555-1
555-5
555-9
555-3
555-7","phone
555-1
555-5
555-9
555-3
555-7",,0.0
Please show the employee first names and ids of employees who serve at least 10 customers.,"SELECT T1.FirstName, T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) >= 10","CREATE TABLE CUSTOMER (FirstName VARCHAR, SupportRepId VARCHAR); CREATE TABLE EMPLOYEE (EmployeeId VARCHAR)","SELECT FirstName, EmployeeId FROM EMPLOYEE JOIN CUSTOMER ON EMPLOYEE.EmployeeId = CUSTOMER.SupportRepId GROUP BY EmployeeId HAVING COUNT(*) >= 10;",False,gpt-3.5-turbo-0125,firstname supportrepid,firstname employeeid,,0.0
Please list all album titles in alphabetical order.,SELECT Title FROM ALBUM ORDER BY Title,CREATE TABLE ALBUM (Title VARCHAR),SELECT Title FROM ALBUM ORDER BY Title ASC,True,gpt-3.5-turbo-0125,"title
Album
Album
Album
Album
Album","title
Album
Album
Album
Album
Album",,0.0
Please list the name and id of all artists that have at least 3 albums in alphabetical order.,"SELECT T2.Name, T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*) >= 3 ORDER BY T2.Name","CREATE TABLE ARTIST (Name VARCHAR, ArtistID VARCHAR); CREATE TABLE ALBUM (ArtistId VARCHAR)","SELECT Name, ArtistID FROM ARTIST WHERE ArtistID IN (SELECT ArtistID FROM ALBUM GROUP BY ArtistID HAVING COUNT(*) >= 3) ORDER BY Name ASC;",True,gpt-3.5-turbo-0125,name artistid,name artistid,,0.0
Find the names of artists that do not have any albums.,SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId,"CREATE TABLE ARTIST (Name VARCHAR); CREATE TABLE ALBUM (ArtistId VARCHAR); CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)",SELECT Name FROM ARTIST WHERE Name NOT IN (SELECT Name FROM ARTIST INNER JOIN ALBUM ON ARTIST.ArtistId = ALBUM.ArtistId),False,gpt-3.5-turbo-0125,"name
Emil
Sara","name
Sara
Emil",,0.0
What are the distinct unit prices of all tracks?,SELECT DISTINCT (UnitPrice) FROM TRACK,CREATE TABLE TRACK (UnitPrice VARCHAR),SELECT DISTINCT UnitPrice FROM TRACK,True,gpt-3.5-turbo-0125,"unitprice
     0.99
     1.29
     1.99
     2.49
     2.99","unitprice
     0.99
     1.29
     1.99
     2.49
     2.99",,0.0
How many artists do not have any album?,SELECT COUNT(*) FROM ARTIST WHERE NOT artistid IN (SELECT artistid FROM ALBUM),CREATE TABLE ARTIST (artistid VARCHAR); CREATE TABLE ALBUM (artistid VARCHAR),SELECT COUNT(*) FROM ARTIST WHERE artistid NOT IN (SELECT artistid FROM ALBUM),True,gpt-3.5-turbo-0125,"_col_0
     0","_col_0
     0",,0.0
What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?,SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock',"CREATE TABLE Genre (GenreID VARCHAR, Name VARCHAR); CREATE TABLE Track (AlbumId VARCHAR, GenreID VARCHAR); CREATE TABLE Album (Title VARCHAR, AlbumId VARCHAR)","SELECT DISTINCT a.Title FROM Album a JOIN Track t ON a.AlbumId = t.AlbumId JOIN Genre g ON t.GenreID = g.GenreID WHERE g.Name IN ('Reggae', 'Rock') GROUP BY a.AlbumId HAVING COUNT(DISTINCT g.Name) = 2;",False,gpt-3.5-turbo-0125,"title
Album
Album",title,,0.0
Find all the phone numbers.,SELECT customer_phone FROM available_policies,CREATE TABLE available_policies (customer_phone VARCHAR),SELECT customer_phone FROM available_policies,True,gpt-3.5-turbo-0125,"customer_phone
      555-1234
      555-5678
      555-9012
      555-3456
      555-7890","customer_phone
      555-1234
      555-5678
      555-9012
      555-3456
      555-7890",,0.0
Which policy type has the most records in the database?,SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY COUNT(*) DESC LIMIT 1,CREATE TABLE available_policies (policy_type_code VARCHAR),"SELECT policy_type_code, COUNT(*) AS record_count FROM available_policies GROUP BY policy_type_code ORDER BY record_count DESC LIMIT 1;",False,gpt-3.5-turbo-0125,"policy_type_code
               A","policy_type_code record_count
               A            2",,0.0
What are all the customer phone numbers under the most popular policy type?,SELECT customer_phone FROM available_policies WHERE policy_type_code = (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY COUNT(*) DESC LIMIT 1),"CREATE TABLE available_policies (customer_phone VARCHAR, policy_type_code VARCHAR)",SELECT customer_phone FROM available_policies WHERE policy_type_code = (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY COUNT(*) DESC LIMIT 1),True,gpt-3.5-turbo-0125,"customer_phone
      555-1234
      555-9012
      555-7890","customer_phone
      555-1234
      555-9012
      555-7890",,0.0
Find the policy type used by more than 4 customers.,SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING COUNT(*) > 4,CREATE TABLE available_policies (policy_type_code VARCHAR),SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING COUNT(*) > 4,True,gpt-3.5-turbo-0125,policy_type_code,policy_type_code,,0.0
Find the total and average amount of settlements.,"SELECT SUM(settlement_amount), AVG(settlement_amount) FROM settlements",CREATE TABLE settlements (settlement_amount INTEGER),"SELECT SUM(settlement_amount) AS total_amount, AVG(settlement_amount) AS average_amount FROM settlements",False,gpt-3.5-turbo-0125,"_col_0 _col_1
  1500  300.0","total_amount average_amount
        1500          300.0",,0.0
