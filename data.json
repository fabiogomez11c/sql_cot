[{"answer": "SELECT COUNT(*) FROM head WHERE age > 56", "context": "CREATE TABLE head (age INTEGER)", "question": "How many heads of the departments are older than 56 ?", "dummy_table": {"head": [{"age": 45}, {"age": 60}, {"age": 52}, {"age": 58}, {"age": 65}]}}, {"answer": "SELECT name, born_state, age FROM head ORDER BY age", "context": "CREATE TABLE head (name VARCHAR, born_state VARCHAR, age VARCHAR)", "question": "List the name, born state and age of the heads of departments ordered by age.", "dummy_table": {"head": [{"name": "John Doe", "born_state": "California", "age": "45"}, {"name": "Jane Smith", "born_state": "New York", "age": "40"}, {"name": "Michael Johnson", "born_state": "Texas", "age": "50"}, {"name": "Emily Brown", "born_state": "Florida", "age": "35"}, {"name": "David Lee", "born_state": "Illinois", "age": "42"}]}}, {"answer": "SELECT creation, name, budget_in_billions FROM department", "context": "CREATE TABLE department (creation VARCHAR, name VARCHAR, budget_in_billions VARCHAR)", "question": "List the creation year, name and budget of each department.", "dummy_table": {"department": [{"creation": "2005", "name": "Finance", "budget_in_billions": "2.5"}, {"creation": "2010", "name": "Human Resources", "budget_in_billions": "1.8"}, {"creation": "2015", "name": "Marketing", "budget_in_billions": "3.2"}, {"creation": "2000", "name": "IT", "budget_in_billions": "4.6"}, {"creation": "2018", "name": "Research and Development", "budget_in_billions": "5.3"}]}}, {"answer": "SELECT MAX(budget_in_billions), MIN(budget_in_billions) FROM department", "context": "CREATE TABLE department (budget_in_billions INTEGER)", "question": "What are the maximum and minimum budget of the departments?", "dummy_table": {"department": [{"budget_in_billions": 3}, {"budget_in_billions": 5}, {"budget_in_billions": 2}, {"budget_in_billions": 4}, {"budget_in_billions": 1}]}}, {"answer": "SELECT AVG(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15", "context": "CREATE TABLE department (num_employees INTEGER, ranking INTEGER)", "question": "What is the average number of employees of the departments whose rank is between 10 and 15?", "dummy_table": {"department": [{"num_employees": 50, "ranking": 8}, {"num_employees": 75, "ranking": 12}, {"num_employees": 60, "ranking": 14}, {"num_employees": 45, "ranking": 9}, {"num_employees": 55, "ranking": 11}]}}, {"answer": "SELECT name FROM head WHERE born_state <> 'California'", "context": "CREATE TABLE head (name VARCHAR, born_state VARCHAR)", "question": "What are the names of the heads who are born outside the California state?", "dummy_table": {"head": [{"name": "John Doe", "born_state": "New York"}, {"name": "Jane Smith", "born_state": "Texas"}, {"name": "Michael Johnson", "born_state": "Florida"}, {"name": "Emily Brown", "born_state": "Illinois"}, {"name": "David Wilson", "born_state": "Washington"}]}}, {"answer": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama'", "context": "CREATE TABLE department (creation VARCHAR, department_id VARCHAR); CREATE TABLE management (department_id VARCHAR, head_id VARCHAR); CREATE TABLE head (head_id VARCHAR, born_state VARCHAR)", "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?", "dummy_table": {"department": [{"creation": "2015", "department_id": "D001"}, {"creation": "2017", "department_id": "D002"}, {"creation": "2018", "department_id": "D003"}, {"creation": "2016", "department_id": "D004"}, {"creation": "2019", "department_id": "D005"}], "management": [{"department_id": "D001", "head_id": "H001"}, {"department_id": "D002", "head_id": "H002"}, {"department_id": "D003", "head_id": "H003"}, {"department_id": "D004", "head_id": "H004"}, {"department_id": "D005", "head_id": "H005"}], "head": [{"head_id": "H001", "born_state": "Alabama"}, {"head_id": "H002", "born_state": "California"}, {"head_id": "H003", "born_state": "Alabama"}, {"head_id": "H004", "born_state": "Texas"}, {"head_id": "H005", "born_state": "Alabama"}]}}, {"answer": "SELECT born_state FROM head GROUP BY born_state HAVING COUNT(*) >= 3", "context": "CREATE TABLE head (born_state VARCHAR)", "question": "What are the names of the states where at least 3 heads were born?", "dummy_table": {"head": [{"born_state": "California"}, {"born_state": "New York"}, {"born_state": "California"}, {"born_state": "Texas"}, {"born_state": "California"}]}}, {"answer": "SELECT creation FROM department GROUP BY creation ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE department (creation VARCHAR)", "question": "In which year were most departments established?", "dummy_table": {"department": [{"creation": "2015"}, {"creation": "2017"}, {"creation": "2016"}, {"creation": "2018"}, {"creation": "2019"}]}}, {"answer": "SELECT T1.name, T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'", "context": "CREATE TABLE management (department_id VARCHAR, temporary_acting VARCHAR); CREATE TABLE department (name VARCHAR, num_employees VARCHAR, department_id VARCHAR)", "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?", "dummy_table": {"management": [{"department_id": "001", "temporary_acting": "Yes"}, {"department_id": "002", "temporary_acting": "No"}, {"department_id": "003", "temporary_acting": "Yes"}, {"department_id": "004", "temporary_acting": "Yes"}, {"department_id": "005", "temporary_acting": "No"}], "department": [{"name": "HR", "num_employees": "50", "department_id": "001"}, {"name": "Finance", "num_employees": "30", "department_id": "002"}, {"name": "Marketing", "num_employees": "40", "department_id": "003"}, {"name": "IT", "num_employees": "60", "department_id": "004"}, {"name": "Operations", "num_employees": "45", "department_id": "005"}]}}, {"answer": "SELECT COUNT(DISTINCT temporary_acting) FROM management", "context": "CREATE TABLE management (temporary_acting VARCHAR)", "question": "How many acting statuses are there?", "dummy_table": {"management": [{"temporary_acting": "Acting 1"}, {"temporary_acting": "Acting 2"}, {"temporary_acting": "Acting 3"}, {"temporary_acting": "Acting 4"}, {"temporary_acting": "Acting 5"}]}}, {"answer": "SELECT COUNT(*) FROM department WHERE NOT department_id IN (SELECT department_id FROM management)", "context": "CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR)", "question": "How many departments are led by heads who are not mentioned?", "dummy_table": {"management": [{"department_id": "1"}, {"department_id": "2"}, {"department_id": "3"}, {"department_id": "4"}, {"department_id": "5"}], "department": [{"department_id": "1"}, {"department_id": "2"}, {"department_id": "3"}, {"department_id": "4"}, {"department_id": "5"}]}}, {"answer": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'", "context": "CREATE TABLE head (age VARCHAR, head_id VARCHAR); CREATE TABLE management (head_id VARCHAR, temporary_acting VARCHAR)", "question": "What are the distinct ages of the heads who are acting?", "dummy_table": {"head": [{"age": "30", "head_id": "1"}, {"age": "35", "head_id": "2"}, {"age": "40", "head_id": "3"}, {"age": "45", "head_id": "4"}, {"age": "50", "head_id": "5"}], "management": [{"head_id": "1", "temporary_acting": "Yes"}, {"head_id": "2", "temporary_acting": "No"}, {"head_id": "3", "temporary_acting": "Yes"}, {"head_id": "4", "temporary_acting": "No"}, {"head_id": "5", "temporary_acting": "Yes"}]}}, {"answer": "SELECT T1.department_id, T1.name, COUNT(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING COUNT(*) > 1", "context": "CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR, name VARCHAR)", "question": "Which department has more than 1 head at a time? List the id, name and the number of heads.", "dummy_table": {"management": [{"department_id": "001"}, {"department_id": "002"}, {"department_id": "003"}, {"department_id": "004"}, {"department_id": "005"}], "department": [{"department_id": "001", "name": "HR"}, {"department_id": "002", "name": "Finance"}, {"department_id": "003", "name": "Marketing"}, {"department_id": "004", "name": "IT"}, {"department_id": "005", "name": "Operations"}]}}, {"answer": "SELECT head_id, name FROM head WHERE name LIKE '%Ha%'", "context": "CREATE TABLE head (head_id VARCHAR, name VARCHAR)", "question": "Which head's name has the substring 'Ha'? List the id and name.", "dummy_table": {"head": [{"head_id": "1", "name": "Hannah"}, {"head_id": "2", "name": "Harper"}, {"head_id": "3", "name": "John"}, {"head_id": "4", "name": "Sarah"}, {"head_id": "5", "name": "Michael"}]}}, {"answer": "SELECT COUNT(*) FROM farm", "context": "CREATE TABLE farm (Id VARCHAR)", "question": "How many farms are there?", "dummy_table": {"farm": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT Total_Horses FROM farm ORDER BY Total_Horses", "context": "CREATE TABLE farm (Total_Horses VARCHAR)", "question": "List the total number of horses on farms in ascending order.", "dummy_table": {"farm": [{"Total_Horses": "10"}, {"Total_Horses": "15"}, {"Total_Horses": "20"}, {"Total_Horses": "25"}, {"Total_Horses": "30"}]}}, {"answer": "SELECT Hosts FROM farm_competition WHERE Theme <> 'Aliens'", "context": "CREATE TABLE farm_competition (Hosts VARCHAR, Theme VARCHAR)", "question": "What are the hosts of competitions whose theme is not \"Aliens\"?", "dummy_table": {"farm_competition": [{"Hosts": "John", "Theme": "Animals"}, {"Hosts": "Sarah", "Theme": "Plants"}, {"Hosts": "Michael", "Theme": "Nature"}, {"Hosts": "Emily", "Theme": "Harvest"}, {"Hosts": "David", "Theme": "Crops"}]}}, {"answer": "SELECT Theme FROM farm_competition ORDER BY YEAR", "context": "CREATE TABLE farm_competition (Theme VARCHAR, YEAR VARCHAR)", "question": "What are the themes of farm competitions sorted by year in ascending order?", "dummy_table": {"farm_competition": [{"Theme": "Livestock Show", "YEAR": "2020"}, {"Theme": "Crop Yield Competition", "YEAR": "2021"}, {"Theme": "Farm Innovation Challenge", "YEAR": "2022"}, {"Theme": "Best Farm Practices Award", "YEAR": "2023"}, {"Theme": "Organic Farming Contest", "YEAR": "2024"}]}}, {"answer": "SELECT AVG(Working_Horses) FROM farm WHERE Total_Horses > 5000", "context": "CREATE TABLE farm (Working_Horses INTEGER, Total_Horses INTEGER)", "question": "What is the average number of working horses of farms with more than 5000 total number of horses?", "dummy_table": {"farm": [{"Working_Horses": 10, "Total_Horses": 6000}, {"Working_Horses": 8, "Total_Horses": 7000}, {"Working_Horses": 12, "Total_Horses": 8000}, {"Working_Horses": 15, "Total_Horses": 9000}, {"Working_Horses": 20, "Total_Horses": 10000}]}}, {"answer": "SELECT MAX(Cows), MIN(Cows) FROM farm", "context": "CREATE TABLE farm (Cows INTEGER)", "question": "What are the maximum and minimum number of cows across all farms.", "dummy_table": {"farm": [{"Cows": 10}, {"Cows": 15}, {"Cows": 20}, {"Cows": 5}, {"Cows": 12}]}}, {"answer": "SELECT COUNT(DISTINCT Status) FROM city", "context": "CREATE TABLE city (Status VARCHAR)", "question": "How many different statuses do cities have?", "dummy_table": {"City": [{"Status": "Active"}, {"Status": "Inactive"}, {"Status": "Pending"}, {"Status": "Completed"}, {"Status": "Cancelled"}]}}, {"answer": "SELECT Official_Name FROM city ORDER BY Population DESC", "context": "CREATE TABLE city (Official_Name VARCHAR, Population VARCHAR)", "question": "List official names of cities in descending order of population.", "dummy_table": {"City": [{"Official_Name": "New York", "Population": "8,336,817"}, {"Official_Name": "Los Angeles", "Population": "3,979,576"}, {"Official_Name": "Chicago", "Population": "2,693,976"}, {"Official_Name": "Houston", "Population": "2,320,268"}, {"Official_Name": "Phoenix", "Population": "1,680,992"}]}}, {"answer": "SELECT Official_Name, Status FROM city ORDER BY Population DESC LIMIT 1", "context": "CREATE TABLE city (Official_Name VARCHAR, Status VARCHAR, Population VARCHAR)", "question": "List the official name and status of the city with the largest population.", "dummy_table": {"City": [{"Official_Name": "New York City", "Status": "Metropolis", "Population": "8,336,817"}, {"Official_Name": "Los Angeles", "Status": "Metropolis", "Population": "3,979,576"}, {"Official_Name": "Chicago", "Status": "Metropolis", "Population": "2,693,976"}, {"Official_Name": "Houston", "Status": "Metropolis", "Population": "2,320,268"}, {"Official_Name": "Phoenix", "Status": "Metropolis", "Population": "1,680,992"}]}}, {"answer": "SELECT T2.Year, T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID", "context": "CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR); CREATE TABLE farm_competition (Year VARCHAR, Host_city_ID VARCHAR)", "question": "Show the years and the official names of the host cities of competitions.", "dummy_table": {"city": [{"Official_Name": "New York", "City_ID": "NYC"}, {"Official_Name": "Los Angeles", "City_ID": "LA"}, {"Official_Name": "Chicago", "City_ID": "CHI"}, {"Official_Name": "Houston", "City_ID": "HOU"}, {"Official_Name": "Miami", "City_ID": "MIA"}], "farm_competition": [{"Year": "2020", "Host_city_ID": "NYC"}, {"Year": "2021", "Host_city_ID": "LA"}, {"Year": "2022", "Host_city_ID": "CHI"}, {"Year": "2023", "Host_city_ID": "HOU"}, {"Year": "2024", "Host_city_ID": "MIA"}]}}, {"answer": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) > 1", "context": "CREATE TABLE farm_competition (Host_city_ID VARCHAR); CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR)", "question": "Show the official names of the cities that have hosted more than one competition.", "dummy_table": {"farm_competition": [{"Host_city_ID": "1"}, {"Host_city_ID": "2"}, {"Host_city_ID": "3"}, {"Host_city_ID": "4"}, {"Host_city_ID": "5"}], "city": [{"Official_Name": "City A", "City_ID": "1"}, {"Official_Name": "City B", "City_ID": "2"}, {"Official_Name": "City C", "City_ID": "3"}, {"Official_Name": "City D", "City_ID": "4"}, {"Official_Name": "City E", "City_ID": "5"}]}}, {"answer": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000", "context": "CREATE TABLE city (City_ID VARCHAR, Population INTEGER); CREATE TABLE farm_competition (Theme VARCHAR, Host_city_ID VARCHAR)", "question": "Please show the themes of competitions with host cities having populations larger than 1000.", "dummy_table": {"city": [{"City_ID": "1", "Population": 1500}, {"City_ID": "2", "Population": 800}, {"City_ID": "3", "Population": 2000}, {"City_ID": "4", "Population": 1200}, {"City_ID": "5", "Population": 300}], "farm_competition": [{"Theme": "Best Harvest", "Host_city_ID": "1"}, {"Theme": "Livestock Show", "Host_city_ID": "3"}, {"Theme": "Crop Yield", "Host_city_ID": "4"}, {"Theme": "Farm Innovation", "Host_city_ID": "1"}, {"Theme": "Agricultural Fair", "Host_city_ID": "3"}]}}, {"answer": "SELECT Status, AVG(Population) FROM city GROUP BY Status", "context": "CREATE TABLE city (Status VARCHAR, Population INTEGER)", "question": "Please show the different statuses of cities and the average population of cities with each status.", "dummy_table": {"City": [{"Status": "Active", "Population": 10000}, {"Status": "Inactive", "Population": 5000}, {"Status": "Active", "Population": 15000}, {"Status": "Inactive", "Population": 8000}, {"Status": "Active", "Population": 12000}]}}, {"answer": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*)", "context": "CREATE TABLE city (Status VARCHAR)", "question": "Please show the different statuses, ordered by the number of cities that have each.", "dummy_table": {"city": [{"Status": "Active"}, {"Status": "Inactive"}, {"Status": "Pending"}, {"Status": "Active"}, {"Status": "Active"}]}}, {"answer": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE city (Status VARCHAR)", "question": "List the most common type of Status across cities.", "dummy_table": {"City": [{"Status": "Active"}, {"Status": "Inactive"}, {"Status": "Active"}, {"Status": "Active"}, {"Status": "Inactive"}]}}, {"answer": "SELECT Official_Name FROM city WHERE NOT City_ID IN (SELECT Host_city_ID FROM farm_competition)", "context": "CREATE TABLE farm_competition (Official_Name VARCHAR, City_ID VARCHAR, Host_city_ID VARCHAR); CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR, Host_city_ID VARCHAR)", "question": "List the official names of cities that have not held any competition.", "dummy_table": {"farm_competition": [{"Official_Name": "City A", "City_ID": "A001", "Host_city_ID": "H001"}, {"Official_Name": "City B", "City_ID": "B002", "Host_city_ID": "H002"}, {"Official_Name": "City C", "City_ID": "C003", "Host_city_ID": "H003"}, {"Official_Name": "City D", "City_ID": "D004", "Host_city_ID": "H004"}, {"Official_Name": "City E", "City_ID": "E005", "Host_city_ID": "H005"}], "city": [{"Official_Name": "City F", "City_ID": "F006", "Host_city_ID": "H006"}, {"Official_Name": "City G", "City_ID": "G007", "Host_city_ID": "H007"}, {"Official_Name": "City H", "City_ID": "H008", "Host_city_ID": "H008"}, {"Official_Name": "City I", "City_ID": "I009", "Host_city_ID": "H009"}, {"Official_Name": "City J", "City_ID": "J010", "Host_city_ID": "H010"}]}}, {"answer": "SELECT Status FROM city WHERE Population > 1500 INTERSECT SELECT Status FROM city WHERE Population < 500", "context": "CREATE TABLE city (Status VARCHAR, Population INTEGER)", "question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.", "dummy_table": {"City": [{"Status": "Small", "Population": 1000}, {"Status": "Big", "Population": 2000}, {"Status": "Small", "Population": 1200}, {"Status": "Big", "Population": 1800}, {"Status": "Small", "Population": 1300}]}}, {"answer": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY COUNT(*) LIMIT 1", "context": "CREATE TABLE student_course_registrations (student_id VARCHAR)", "question": "what is id of students who registered some courses but the least number of courses in these students?", "dummy_table": {"student_course_registrations": [{"student_id": "123"}, {"student_id": "456"}, {"student_id": "789"}, {"student_id": "101"}, {"student_id": "202"}]}}, {"answer": "SELECT T2.first_name, T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id", "context": "CREATE TABLE candidates (candidate_id VARCHAR); CREATE TABLE people (first_name VARCHAR, last_name VARCHAR, person_id VARCHAR)", "question": "what are the first name and last name of all candidates?", "dummy_table": {"candidates": [{"candidate_id": "1"}, {"candidate_id": "2"}, {"candidate_id": "3"}, {"candidate_id": "4"}, {"candidate_id": "5"}], "people": [{"first_name": "John", "last_name": "Doe", "person_id": "1"}, {"first_name": "Jane", "last_name": "Smith", "person_id": "2"}, {"first_name": "Michael", "last_name": "Johnson", "person_id": "3"}, {"first_name": "Sarah", "last_name": "Williams", "person_id": "4"}, {"first_name": "David", "last_name": "Brown", "person_id": "5"}]}}, {"answer": "SELECT student_id FROM students WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance)", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE students (student_id VARCHAR)", "question": "List the id of students who never attends courses?", "dummy_table": {"student_course_attendance": [{"student_id": "123"}, {"student_id": "456"}, {"student_id": "789"}, {"student_id": "101"}, {"student_id": "202"}], "students": [{"student_id": "123"}, {"student_id": "456"}, {"student_id": "789"}, {"student_id": "101"}, {"student_id": "202"}]}}, {"answer": "SELECT student_id FROM student_course_attendance", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR)", "question": "List the id of students who attended some courses?", "dummy_table": {"student_course_attendance": [{"student_id": "S001"}, {"student_id": "S002"}, {"student_id": "S003"}, {"student_id": "S004"}, {"student_id": "S005"}]}}, {"answer": "SELECT T1.student_id, T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id", "context": "CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR, course_id VARCHAR)", "question": "What are the ids of all students for courses and what are the names of those courses?", "dummy_table": {"courses": [{"course_id": "C001", "course_name": "Mathematics"}, {"course_id": "C002", "course_name": "Physics"}, {"course_id": "C003", "course_name": "Biology"}, {"course_id": "C004", "course_name": "History"}, {"course_id": "C005", "course_name": "Computer Science"}], "student_course_registrations": [{"student_id": "S001", "course_id": "C001"}, {"student_id": "S002", "course_id": "C002"}, {"student_id": "S003", "course_id": "C003"}, {"student_id": "S004", "course_id": "C004"}, {"student_id": "S005", "course_id": "C005"}]}}, {"answer": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1", "context": "CREATE TABLE student_course_registrations (student_id VARCHAR, registration_date VARCHAR); CREATE TABLE students (student_details VARCHAR, student_id VARCHAR)", "question": "What is detail of the student who most recently registered course?", "dummy_table": {"student_course_registrations": [{"student_id": "S001", "registration_date": "2022-01-15"}, {"student_id": "S002", "registration_date": "2022-02-20"}, {"student_id": "S003", "registration_date": "2022-03-25"}, {"student_id": "S004", "registration_date": "2022-04-30"}, {"student_id": "S005", "registration_date": "2022-05-05"}], "students": [{"student_details": "John Doe", "student_id": "S001"}, {"student_details": "Jane Smith", "student_id": "S002"}, {"student_details": "Michael Johnson", "student_id": "S003"}, {"student_details": "Emily Brown", "student_id": "S004"}, {"student_details": "David Wilson", "student_id": "S005"}]}}, {"answer": "SELECT COUNT(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171", "context": "CREATE TABLE courses (course_id VARCHAR); CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)", "question": "How many courses do the student whose id is 171 attend?", "dummy_table": {"courses": [{"course_id": "C001"}, {"course_id": "C002"}, {"course_id": "C003"}, {"course_id": "C004"}, {"course_id": "C005"}], "student_course_attendance": [{"course_id": "C001", "student_id": "171"}, {"course_id": "C002", "student_id": "171"}, {"course_id": "C003", "student_id": "171"}, {"course_id": "C004", "student_id": "171"}, {"course_id": "C005", "student_id": "171"}]}}, {"answer": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1", "context": "CREATE TABLE candidate_assessments (candidate_id VARCHAR, assessment_date VARCHAR)", "question": "Find id of the candidate who most recently accessed the course?", "dummy_table": {"candidate_assessments": [{"candidate_id": "001", "assessment_date": "2022-01-15"}, {"candidate_id": "002", "assessment_date": "2022-01-10"}, {"candidate_id": "003", "assessment_date": "2022-01-20"}, {"candidate_id": "004", "assessment_date": "2022-01-05"}, {"candidate_id": "005", "assessment_date": "2022-01-25"}]}}, {"answer": "SELECT T1.student_id, COUNT(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id", "context": "CREATE TABLE students (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)", "question": "List the id of students who registered some courses and the number of their registered courses?", "dummy_table": {"students": [{"student_id": "S001"}, {"student_id": "S002"}, {"student_id": "S003"}, {"student_id": "S004"}, {"student_id": "S005"}], "student_course_registrations": [{"student_id": "S001"}, {"student_id": "S002"}, {"student_id": "S003"}, {"student_id": "S004"}, {"student_id": "S005"}]}}, {"answer": "SELECT student_id FROM student_course_attendance WHERE course_id = 301", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR)", "question": "What are the id of students who registered course 301?", "dummy_table": {"student_course_attendance": [{"student_id": "001", "course_id": "301"}, {"student_id": "002", "course_id": "301"}, {"student_id": "003", "course_id": "301"}, {"student_id": "004", "course_id": "301"}, {"student_id": "005", "course_id": "301"}]}}, {"answer": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR, date_of_attendance VARCHAR)", "question": "What is the id of the student who most recently registered course 301?", "dummy_table": {"student_course_attendance": [{"student_id": "S001", "course_id": "301", "date_of_attendance": "2022-10-10"}, {"student_id": "S002", "course_id": "301", "date_of_attendance": "2022-10-09"}, {"student_id": "S003", "course_id": "301", "date_of_attendance": "2022-10-08"}, {"student_id": "S004", "course_id": "301", "date_of_attendance": "2022-10-07"}, {"student_id": "S005", "course_id": "301", "date_of_attendance": "2022-10-06"}]}}, {"answer": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id", "context": "CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR)", "question": "Find distinct cities of addresses of people?", "dummy_table": {"addresses": [{"city": "New York", "address_id": "1"}, {"city": "Los Angeles", "address_id": "2"}, {"city": "Chicago", "address_id": "3"}, {"city": "Houston", "address_id": "4"}, {"city": "Miami", "address_id": "5"}], "people_addresses": []}}, {"answer": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id", "context": "CREATE TABLE students (student_id VARCHAR); CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR, person_id VARCHAR)", "question": "Find distinct cities of address of students?", "dummy_table": {"students": [{"student_id": "S1"}, {"student_id": "S2"}, {"student_id": "S3"}, {"student_id": "S4"}, {"student_id": "S5"}], "addresses": [{"city": "City1", "address_id": "A1"}, {"city": "City2", "address_id": "A2"}, {"city": "City3", "address_id": "A3"}, {"city": "City4", "address_id": "A4"}, {"city": "City5", "address_id": "A5"}], "people_addresses": [{"address_id": "A1", "person_id": "P1"}, {"address_id": "A2", "person_id": "P2"}, {"address_id": "A3", "person_id": "P3"}, {"address_id": "A4", "person_id": "P4"}, {"address_id": "A5", "person_id": "P5"}]}}, {"answer": "SELECT course_name FROM courses ORDER BY course_name", "context": "CREATE TABLE courses (course_name VARCHAR)", "question": "List the names of courses in alphabetical order?", "dummy_table": {"courses": [{"course_name": "Biology"}, {"course_name": "Chemistry"}, {"course_name": "History"}, {"course_name": "Mathematics"}, {"course_name": "Physics"}]}}, {"answer": "SELECT first_name FROM people ORDER BY first_name", "context": "CREATE TABLE people (first_name VARCHAR)", "question": "List the first names of people in alphabetical order?", "dummy_table": {"people": [{"first_name": "Alice"}, {"first_name": "Bob"}, {"first_name": "Charlie"}, {"first_name": "David"}, {"first_name": "Eve"}]}}, {"answer": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)", "question": "What are the id of students who registered courses or attended courses?", "dummy_table": {"student_course_attendance": [{"student_id": "S001"}, {"student_id": "S002"}, {"student_id": "S003"}, {"student_id": "S004"}, {"student_id": "S005"}], "student_course_registrations": [{"student_id": "S001"}, {"student_id": "S002"}, {"student_id": "S003"}, {"student_id": "S004"}, {"student_id": "S005"}]}}, {"answer": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121", "context": "CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR); CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR)", "question": "Find the id of courses which are registered or attended by student whose id is 121?", "dummy_table": {"student_course_attendance": [{"course_id": "C001", "student_id": "121"}, {"course_id": "C002", "student_id": "121"}, {"course_id": "C003", "student_id": "121"}, {"course_id": "C004", "student_id": "121"}, {"course_id": "C005", "student_id": "121"}], "student_course_registrations": [{"course_id": "C001", "student_id": "121"}, {"course_id": "C002", "student_id": "121"}, {"course_id": "C003", "student_id": "121"}, {"course_id": "C004", "student_id": "121"}, {"course_id": "C005", "student_id": "121"}]}}, {"answer": "SELECT * FROM student_course_registrations WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance)", "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)", "question": "What are all info of students who registered courses but not attended courses?", "dummy_table": {"student_course_attendance": [{"student_id": "123"}, {"student_id": "456"}, {"student_id": "789"}], "student_course_registrations": [{"student_id": "456"}, {"student_id": "789"}, {"student_id": "101"}]}}, {"answer": "SELECT date FROM weather WHERE max_temperature_f > 85", "context": "CREATE TABLE weather (date VARCHAR, max_temperature_f INTEGER)", "question": "Give me the dates when the max temperature was higher than 85.", "dummy_table": {"weather": [{"date": "2022-01-01", "max_temperature_f": 90}, {"date": "2022-01-02", "max_temperature_f": 88}, {"date": "2022-01-03", "max_temperature_f": 86}, {"date": "2022-01-04", "max_temperature_f": 84}, {"date": "2022-01-05", "max_temperature_f": 87}]}}, {"answer": "SELECT name FROM station WHERE lat < 37.5", "context": "CREATE TABLE station (name VARCHAR, lat INTEGER)", "question": "What are the names of stations that have latitude lower than 37.5?", "dummy_table": {"station": [{"name": "Station A", "lat": 35}, {"name": "Station B", "lat": 37}, {"name": "Station C", "lat": 36}, {"name": "Station D", "lat": 38}, {"name": "Station E", "lat": 34}]}}, {"answer": "SELECT city, MAX(lat) FROM station GROUP BY city", "context": "CREATE TABLE station (city VARCHAR, lat INTEGER)", "question": "For each city, return the highest latitude among its stations.", "dummy_table": {"station": [{"city": "New York", "lat": 40}, {"city": "Los Angeles", "lat": 34}, {"city": "Chicago", "lat": 41}, {"city": "Houston", "lat": 29}, {"city": "Miami", "lat": 25}]}}, {"answer": "SELECT start_station_name, end_station_name FROM trip ORDER BY id LIMIT 3", "context": "CREATE TABLE trip (start_station_name VARCHAR, end_station_name VARCHAR, id VARCHAR)", "question": "Give me the start station and end station for the trips with the three oldest id.", "dummy_table": {"trip": [{"id": "001", "start_station_name": "Station A", "end_station_name": "Station B"}, {"id": "002", "start_station_name": "Station C", "end_station_name": "Station D"}, {"id": "003", "start_station_name": "Station E", "end_station_name": "Station F"}, {"id": "004", "start_station_name": "Station G", "end_station_name": "Station H"}, {"id": "005", "start_station_name": "Station I", "end_station_name": "Station J"}]}}, {"answer": "SELECT id FROM trip ORDER BY duration LIMIT 1", "context": "CREATE TABLE trip (id VARCHAR, duration VARCHAR)", "question": "What is the id of the trip that has the shortest duration?", "dummy_table": {"trip": [{"id": "1", "duration": "30 minutes"}, {"id": "2", "duration": "45 minutes"}, {"id": "3", "duration": "20 minutes"}, {"id": "4", "duration": "60 minutes"}, {"id": "5", "duration": "15 minutes"}]}}, {"answer": "SELECT SUM(duration), MAX(duration) FROM trip WHERE bike_id = 636", "context": "CREATE TABLE trip (duration INTEGER, bike_id VARCHAR)", "question": "What is the total and maximum duration of trips with bike id 636?", "dummy_table": {"trip": [{"duration": 30, "bike_id": "636"}, {"duration": 45, "bike_id": "636"}, {"duration": 60, "bike_id": "636"}, {"duration": 20, "bike_id": "636"}, {"duration": 40, "bike_id": "636"}]}}, {"answer": "SELECT COUNT(DISTINCT bike_id) FROM trip", "context": "CREATE TABLE trip (bike_id VARCHAR)", "question": "From the trip record, find the number of unique bikes.", "dummy_table": {"trip": [{"bike_id": "ABC123"}, {"bike_id": "DEF456"}, {"bike_id": "GHI789"}, {"bike_id": "JKL012"}, {"bike_id": "MNO345"}]}}, {"answer": "SELECT COUNT(DISTINCT city) FROM station", "context": "CREATE TABLE station (city VARCHAR)", "question": "What is the number of distinct cities the stations are located at?", "dummy_table": {"station": [{"city": "New York"}, {"city": "Los Angeles"}, {"city": "Chicago"}, {"city": "Houston"}, {"city": "Miami"}]}}, {"answer": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 7", "context": "CREATE TABLE station (name VARCHAR, id VARCHAR); CREATE TABLE status (station_id VARCHAR, bikes_available VARCHAR)", "question": "Return the unique name for stations that have ever had 7 bikes available.", "dummy_table": {"station": [{"name": "Station A", "id": "1"}, {"name": "Station B", "id": "2"}, {"name": "Station C", "id": "3"}, {"name": "Station D", "id": "4"}, {"name": "Station E", "id": "5"}], "status": [{"station_id": "1", "bikes_available": "7"}, {"station_id": "3", "bikes_available": "7"}, {"station_id": "5", "bikes_available": "7"}]}}, {"answer": "SELECT bike_id FROM trip WHERE zip_code = 94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE trip (bike_id VARCHAR, zip_code VARCHAR)", "question": "Which bike traveled the most often in zip code 94002?", "dummy_table": {"trip": [{"bike_id": "B001", "zip_code": "94002"}, {"bike_id": "B002", "zip_code": "94002"}, {"bike_id": "B001", "zip_code": "94002"}, {"bike_id": "B003", "zip_code": "94002"}, {"bike_id": "B001", "zip_code": "94002"}]}}, {"answer": "SELECT T1.lat, T1.long, T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id ORDER BY T2.duration LIMIT 1", "context": "CREATE TABLE trip (start_station_id VARCHAR, duration VARCHAR); CREATE TABLE station (lat VARCHAR, long VARCHAR, city VARCHAR, id VARCHAR)", "question": "What is the latitude, longitude, city of the station from which the shortest trip started?", "dummy_table": {"trip": [{"start_station_id": "001", "duration": "30"}, {"start_station_id": "002", "duration": "45"}, {"start_station_id": "003", "duration": "20"}, {"start_station_id": "004", "duration": "15"}, {"start_station_id": "005", "duration": "25"}], "station": [{"lat": "40.7128", "long": "74.0060", "city": "New York", "id": "001"}, {"lat": "34.0522", "long": "118.2437", "city": "Los Angeles", "id": "002"}, {"lat": "41.8781", "long": "87.6298", "city": "Chicago", "id": "003"}, {"lat": "29.7604", "long": "95.3698", "city": "Houston", "id": "004"}, {"lat": "33.4484", "long": "112.0740", "city": "Phoenix", "id": "005"}]}}, {"answer": "SELECT cloud_cover FROM weather WHERE zip_code = 94107 GROUP BY cloud_cover ORDER BY COUNT(*) DESC LIMIT 3", "context": "CREATE TABLE weather (cloud_cover VARCHAR, zip_code VARCHAR)", "question": "What is the 3 most common cloud cover rates in the region of zip code 94107?", "dummy_table": {"weather": [{"cloud_cover": "Partly Cloudy", "zip_code": "94107"}, {"cloud_cover": "Sunny", "zip_code": "94107"}, {"cloud_cover": "Mostly Cloudy", "zip_code": "94107"}, {"cloud_cover": "Partly Cloudy", "zip_code": "94107"}, {"cloud_cover": "Partly Cloudy", "zip_code": "94107"}]}}, {"answer": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY AVG(mean_sea_level_pressure_inches) LIMIT 1", "context": "CREATE TABLE weather (zip_code VARCHAR, mean_sea_level_pressure_inches INTEGER)", "question": "What is the zip code in which the average mean sea level pressure is the lowest?", "dummy_table": {"weather": [{"zip_code": "12345", "mean_sea_level_pressure_inches": 29}, {"zip_code": "23456", "mean_sea_level_pressure_inches": 28}, {"zip_code": "34567", "mean_sea_level_pressure_inches": 27}, {"zip_code": "45678", "mean_sea_level_pressure_inches": 26}, {"zip_code": "56789", "mean_sea_level_pressure_inches": 25}]}}, {"answer": "SELECT AVG(long) FROM station WHERE NOT id IN (SELECT station_id FROM status GROUP BY station_id HAVING MAX(bikes_available) > 10)", "context": "CREATE TABLE station (long INTEGER, id VARCHAR, station_id VARCHAR, bikes_available INTEGER); CREATE TABLE status (long INTEGER, id VARCHAR, station_id VARCHAR, bikes_available INTEGER)", "question": "What is the average longitude of stations that never had bike availability more than 10?", "dummy_table": {"station": [{"long": 34, "id": "station1", "station_id": "A1", "bikes_available": 5}, {"long": 35, "id": "station2", "station_id": "B2", "bikes_available": 8}, {"long": 36, "id": "station3", "station_id": "C3", "bikes_available": 3}, {"long": 37, "id": "station4", "station_id": "D4", "bikes_available": 12}, {"long": 38, "id": "station5", "station_id": "E5", "bikes_available": 7}], "status": [{"long": 34, "id": "status1", "station_id": "A1", "bikes_available": 5}, {"long": 35, "id": "status2", "station_id": "B2", "bikes_available": 8}, {"long": 36, "id": "status3", "station_id": "C3", "bikes_available": 3}, {"long": 37, "id": "status4", "station_id": "D4", "bikes_available": 12}, {"long": 38, "id": "status5", "station_id": "E5", "bikes_available": 7}]}}, {"answer": "SELECT date, zip_code FROM weather WHERE min_dew_point_f < (SELECT MIN(min_dew_point_f) FROM weather WHERE zip_code = 94107)", "context": "CREATE TABLE weather (date VARCHAR, zip_code VARCHAR, min_dew_point_f INTEGER)", "question": "On which day and in which zip code was the min dew point lower than any day in zip code 94107?", "dummy_table": {"weather": [{"date": "2022-01-01", "zip_code": "94107", "min_dew_point_f": 50}, {"date": "2022-01-02", "zip_code": "94107", "min_dew_point_f": 48}, {"date": "2022-01-03", "zip_code": "94107", "min_dew_point_f": 45}, {"date": "2022-01-04", "zip_code": "94107", "min_dew_point_f": 47}, {"date": "2022-01-05", "zip_code": "94107", "min_dew_point_f": 46}]}}, {"answer": "SELECT T1.id, T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id", "context": "CREATE TABLE station (installation_date VARCHAR, id VARCHAR); CREATE TABLE trip (id VARCHAR, end_station_id VARCHAR)", "question": "For each trip, return its ending station's installation date.", "dummy_table": {"station": [{"installation_date": "2021-01-15", "id": "1"}, {"installation_date": "2020-11-30", "id": "2"}, {"installation_date": "2021-03-05", "id": "3"}, {"installation_date": "2020-09-20", "id": "4"}, {"installation_date": "2021-06-10", "id": "5"}], "trip": [{"id": "101", "end_station_id": "3"}, {"id": "102", "end_station_id": "1"}, {"id": "103", "end_station_id": "5"}, {"id": "104", "end_station_id": "2"}, {"id": "105", "end_station_id": "4"}]}}, {"answer": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id = T2.id ORDER BY T2.dock_count DESC LIMIT 1", "context": "CREATE TABLE trip (id VARCHAR, start_station_id VARCHAR); CREATE TABLE station (id VARCHAR, dock_count VARCHAR)", "question": "Which trip started from the station with the largest dock count? Give me the trip id.", "dummy_table": {"trip": [{"id": "1", "start_station_id": "A"}, {"id": "2", "start_station_id": "B"}, {"id": "3", "start_station_id": "C"}, {"id": "4", "start_station_id": "D"}, {"id": "5", "start_station_id": "E"}], "station": [{"id": "A", "dock_count": "10"}, {"id": "B", "dock_count": "15"}, {"id": "C", "dock_count": "20"}, {"id": "D", "dock_count": "25"}, {"id": "E", "dock_count": "30"}]}}, {"answer": "SELECT id FROM station WHERE lat > 37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING MIN(bikes_available) < 7", "context": "CREATE TABLE status (id VARCHAR, station_id VARCHAR, lat INTEGER, bikes_available INTEGER); CREATE TABLE station (id VARCHAR, station_id VARCHAR, lat INTEGER, bikes_available INTEGER)", "question": "What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?", "dummy_table": {"status": [{"id": "1", "station_id": "A", "lat": 38, "bikes_available": 10}, {"id": "2", "station_id": "B", "lat": 37, "bikes_available": 8}, {"id": "3", "station_id": "C", "lat": 38, "bikes_available": 9}, {"id": "4", "station_id": "D", "lat": 36, "bikes_available": 7}, {"id": "5", "station_id": "E", "lat": 39, "bikes_available": 10}], "station": [{"id": "1", "station_id": "A", "lat": 38, "bikes_available": 10}, {"id": "2", "station_id": "B", "lat": 37, "bikes_available": 8}, {"id": "3", "station_id": "C", "lat": 38, "bikes_available": 9}, {"id": "4", "station_id": "D", "lat": 36, "bikes_available": 7}, {"id": "5", "station_id": "E", "lat": 39, "bikes_available": 10}]}}, {"answer": "SELECT name, lat, city FROM station ORDER BY lat LIMIT 1", "context": "CREATE TABLE station (name VARCHAR, lat VARCHAR, city VARCHAR)", "question": "What are the name, latitude, and city of the station with the lowest latitude?", "dummy_table": {"station": [{"name": "Station A", "lat": "40.7128", "city": "New York"}, {"name": "Station B", "lat": "34.0522", "city": "Los Angeles"}, {"name": "Station C", "lat": "41.8781", "city": "Chicago"}, {"name": "Station D", "lat": "29.7604", "city": "Houston"}, {"name": "Station E", "lat": "33.4484", "city": "Phoenix"}]}}, {"answer": "SELECT date, mean_temperature_f, mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3", "context": "CREATE TABLE weather (date VARCHAR, mean_temperature_f VARCHAR, mean_humidity VARCHAR, max_gust_speed_mph VARCHAR)", "question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?", "dummy_table": {"weather": [{"date": "2022-01-01", "mean_temperature_f": "50", "mean_humidity": "60%", "max_gust_speed_mph": "25"}, {"date": "2022-01-02", "mean_temperature_f": "55", "mean_humidity": "65%", "max_gust_speed_mph": "30"}, {"date": "2022-01-03", "mean_temperature_f": "60", "mean_humidity": "70%", "max_gust_speed_mph": "35"}, {"date": "2022-01-04", "mean_temperature_f": "65", "mean_humidity": "75%", "max_gust_speed_mph": "40"}, {"date": "2022-01-05", "mean_temperature_f": "70", "mean_humidity": "80%", "max_gust_speed_mph": "45"}]}}, {"answer": "SELECT city, COUNT(*) FROM station GROUP BY city HAVING COUNT(*) >= 15", "context": "CREATE TABLE station (city VARCHAR)", "question": "List the name and the number of stations for all the cities that have at least 15 stations.", "dummy_table": {"station": [{"city": "New York"}, {"city": "Los Angeles"}, {"city": "Chicago"}, {"city": "Houston"}, {"city": "Phoenix"}]}}, {"answer": "SELECT start_station_id, start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*) >= 200", "context": "CREATE TABLE trip (start_station_id VARCHAR, start_station_name VARCHAR)", "question": "Find the ids and names of stations from which at least 200 trips started.", "dummy_table": {"trip": [{"start_station_id": "001", "start_station_name": "Station A"}, {"start_station_id": "002", "start_station_name": "Station B"}, {"start_station_id": "003", "start_station_name": "Station C"}, {"start_station_id": "004", "start_station_name": "Station D"}, {"start_station_id": "005", "start_station_name": "Station E"}]}}, {"answer": "SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_visibility_miles) < 10", "context": "CREATE TABLE weather (zip_code VARCHAR, mean_visibility_miles INTEGER)", "question": "Find the zip code in which the average mean visibility is lower than 10.", "dummy_table": {"weather": [{"zip_code": "12345", "mean_visibility_miles": 8}, {"zip_code": "23456", "mean_visibility_miles": 12}, {"zip_code": "34567", "mean_visibility_miles": 6}, {"zip_code": "45678", "mean_visibility_miles": 15}, {"zip_code": "56789", "mean_visibility_miles": 9}]}}, {"answer": "SELECT city FROM station GROUP BY city ORDER BY MAX(lat) DESC", "context": "CREATE TABLE station (city VARCHAR, lat INTEGER)", "question": "List all the cities in a decreasing order of each city's stations' highest latitude.", "dummy_table": {"station": [{"city": "New York", "lat": 40}, {"city": "Los Angeles", "lat": 34}, {"city": "Chicago", "lat": 41}, {"city": "Houston", "lat": 29}, {"city": "Phoenix", "lat": 33}]}}, {"answer": "SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5", "context": "CREATE TABLE weather (date VARCHAR, cloud_cover VARCHAR)", "question": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.", "dummy_table": {"weather": [{"date": "2022-01-01", "cloud_cover": "90%"}, {"date": "2022-01-02", "cloud_cover": "85%"}, {"date": "2022-01-03", "cloud_cover": "80%"}, {"date": "2022-01-04", "cloud_cover": "75%"}, {"date": "2022-01-05", "cloud_cover": "70%"}]}}, {"answer": "SELECT id, duration FROM trip ORDER BY duration DESC LIMIT 3", "context": "CREATE TABLE trip (id VARCHAR, duration VARCHAR)", "question": "What are the ids and durations of the trips with the top 3 durations?", "dummy_table": {"trip": [{"id": "1", "duration": "60"}, {"id": "2", "duration": "90"}, {"id": "3", "duration": "120"}, {"id": "4", "duration": "45"}, {"id": "5", "duration": "75"}]}}, {"answer": "SELECT DISTINCT start_station_name FROM trip WHERE duration < 100", "context": "CREATE TABLE trip (start_station_name VARCHAR, duration INTEGER)", "question": "List all the distinct stations from which a trip of duration below 100 started.", "dummy_table": {"trip": [{"start_station_name": "Station A", "duration": 50}, {"start_station_name": "Station B", "duration": 80}, {"start_station_name": "Station C", "duration": 90}, {"start_station_name": "Station A", "duration": 70}, {"start_station_name": "Station D", "duration": 60}]}}, {"answer": "SELECT id FROM trip WHERE duration >= (SELECT AVG(duration) FROM trip WHERE zip_code = 94103)", "context": "CREATE TABLE trip (id VARCHAR, duration INTEGER, zip_code VARCHAR)", "question": "Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.", "dummy_table": {"trip": [{"id": "1", "duration": 30, "zip_code": "94103"}, {"id": "2", "duration": 45, "zip_code": "94103"}, {"id": "3", "duration": 20, "zip_code": "94103"}, {"id": "4", "duration": 40, "zip_code": "94103"}, {"id": "5", "duration": 35, "zip_code": "94103"}]}}, {"answer": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31", "context": "CREATE TABLE weather (date VARCHAR, mean_sea_level_pressure_inches INTEGER)", "question": "What are the dates in which the mean sea level pressure was between 30.3 and 31?", "dummy_table": {"weather": [{"date": "2022-01-01", "mean_sea_level_pressure_inches": 30.5}, {"date": "2022-01-02", "mean_sea_level_pressure_inches": 30.2}, {"date": "2022-01-03", "mean_sea_level_pressure_inches": 30.8}, {"date": "2022-01-04", "mean_sea_level_pressure_inches": 29.9}, {"date": "2022-01-05", "mean_sea_level_pressure_inches": 31}]}}, {"answer": "SELECT DISTINCT T1.id, T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12", "context": "CREATE TABLE station (id VARCHAR, name VARCHAR); CREATE TABLE status (station_id VARCHAR, bikes_available INTEGER)", "question": "What are the id and name of the stations that have ever had more than 12 bikes available?", "dummy_table": {"station": [{"id": "1", "name": "Station A"}, {"id": "2", "name": "Station B"}, {"id": "3", "name": "Station C"}, {"id": "4", "name": "Station D"}, {"id": "5", "name": "Station E"}], "status": [{"station_id": "1", "bikes_available": 15}, {"station_id": "2", "bikes_available": 10}, {"station_id": "3", "bikes_available": 20}, {"station_id": "4", "bikes_available": 8}, {"station_id": "5", "bikes_available": 14}]}}, {"answer": "SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_humidity) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING COUNT(*) >= 100", "context": "CREATE TABLE weather (zip_code VARCHAR, mean_humidity INTEGER); CREATE TABLE trip (zip_code VARCHAR, mean_humidity INTEGER)", "question": "Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place.", "dummy_table": {"weather": [{"zip_code": "12345", "mean_humidity": 65}, {"zip_code": "23456", "mean_humidity": 70}, {"zip_code": "34567", "mean_humidity": 60}, {"zip_code": "45678", "mean_humidity": 75}, {"zip_code": "56789", "mean_humidity": 55}], "trip": [{"zip_code": "12345", "mean_humidity": 65}, {"zip_code": "23456", "mean_humidity": 70}, {"zip_code": "34567", "mean_humidity": 60}, {"zip_code": "45678", "mean_humidity": 75}, {"zip_code": "56789", "mean_humidity": 55}]}}, {"answer": "SELECT AVG(T1.lat), AVG(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id", "context": "CREATE TABLE trip (start_station_id VARCHAR); CREATE TABLE station (lat INTEGER, long INTEGER, id VARCHAR)", "question": "What is the average latitude and longitude of the starting points of all trips?", "dummy_table": {"trip": [{"start_station_id": "station1"}, {"start_station_id": "station2"}, {"start_station_id": "station3"}, {"start_station_id": "station4"}, {"start_station_id": "station5"}], "station": [{"lat": 40, "long": -74, "id": "station1"}, {"lat": 41, "long": -73, "id": "station2"}, {"lat": 42, "long": -72, "id": "station3"}, {"lat": 43, "long": -71, "id": "station4"}, {"lat": 44, "long": -70, "id": "station5"}]}}, {"answer": "SELECT COUNT(*) FROM book", "context": "CREATE TABLE book (Id VARCHAR)", "question": "How many books are there?", "dummy_table": {"book": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT Writer FROM book ORDER BY Writer", "context": "CREATE TABLE book (Writer VARCHAR)", "question": "List the writers of the books in ascending alphabetical order.", "dummy_table": {"book": [{"Writer": "Author A"}, {"Writer": "Author B"}, {"Writer": "Author C"}, {"Writer": "Author D"}, {"Writer": "Author E"}]}}, {"answer": "SELECT Title FROM book ORDER BY Issues", "context": "CREATE TABLE book (Title VARCHAR, Issues VARCHAR)", "question": "List the titles of the books in ascending order of issues.", "dummy_table": {"book": [{"Title": "Book A", "Issues": "1"}, {"Title": "Book B", "Issues": "2"}, {"Title": "Book C", "Issues": "3"}, {"Title": "Book D", "Issues": "4"}, {"Title": "Book E", "Issues": "5"}]}}, {"answer": "SELECT Title, Issues FROM book", "context": "CREATE TABLE book (Title VARCHAR, Issues VARCHAR)", "question": "What are the title and issues of the books?", "dummy_table": {"book": [{"Title": "The Great Gatsby", "Issues": "10"}, {"Title": "To Kill a Mockingbird", "Issues": "5"}, {"Title": "1984", "Issues": "8"}, {"Title": "Pride and Prejudice", "Issues": "3"}, {"Title": "The Catcher in the Rye", "Issues": "6"}]}}, {"answer": "SELECT Publication_Date FROM publication ORDER BY Price DESC", "context": "CREATE TABLE publication (Publication_Date VARCHAR, Price VARCHAR)", "question": "What are the dates of publications in descending order of price?", "dummy_table": {"publication": [{"Publication_Date": "2022-01-01", "Price": "$10"}, {"Publication_Date": "2022-02-15", "Price": "$15"}, {"Publication_Date": "2022-03-10", "Price": "$20"}, {"Publication_Date": "2022-04-05", "Price": "$25"}, {"Publication_Date": "2022-05-20", "Price": "$30"}]}}, {"answer": "SELECT DISTINCT Publisher FROM publication WHERE Price > 5000000", "context": "CREATE TABLE publication (Publisher VARCHAR, Price INTEGER)", "question": "What are the distinct publishers of publications with price higher than 5000000?", "dummy_table": {"publication": [{"Publisher": "Publisher1", "Price": 6000000}, {"Publisher": "Publisher2", "Price": 7000000}, {"Publisher": "Publisher3", "Price": 8000000}, {"Publisher": "Publisher4", "Price": 9000000}, {"Publisher": "Publisher5", "Price": 10000000}]}}, {"answer": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1", "context": "CREATE TABLE publication (Publisher VARCHAR, Price VARCHAR)", "question": "List the publisher of the publication with the highest price.", "dummy_table": {"Publication": [{"Publisher": "Publisher1", "Price": "100"}, {"Publisher": "Publisher2", "Price": "150"}, {"Publisher": "Publisher3", "Price": "120"}, {"Publisher": "Publisher4", "Price": "200"}, {"Publisher": "Publisher5", "Price": "180"}]}}, {"answer": "SELECT Publication_Date FROM publication ORDER BY Price LIMIT 3", "context": "CREATE TABLE publication (Publication_Date VARCHAR, Price VARCHAR)", "question": "List the publication dates of publications with 3 lowest prices.", "dummy_table": {"Publication": [{"Publication_Date": "2022-01-01", "Price": "10.00"}, {"Publication_Date": "2022-02-01", "Price": "12.00"}, {"Publication_Date": "2022-03-01", "Price": "8.00"}, {"Publication_Date": "2022-04-01", "Price": "9.00"}, {"Publication_Date": "2022-05-01", "Price": "7.00"}]}}, {"answer": "SELECT T1.Title, T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID", "context": "CREATE TABLE book (Title VARCHAR, Book_ID VARCHAR); CREATE TABLE publication (Publication_Date VARCHAR, Book_ID VARCHAR)", "question": "Show the title and publication dates of books.", "dummy_table": {"book": [{"Title": "The Great Gatsby", "Book_ID": "123"}, {"Title": "To Kill a Mockingbird", "Book_ID": "456"}, {"Title": "1984", "Book_ID": "789"}, {"Title": "Pride and Prejudice", "Book_ID": "101"}, {"Title": "The Catcher in the Rye", "Book_ID": "112"}], "publication": [{"Publication_Date": "2021-05-15", "Book_ID": "123"}, {"Publication_Date": "2020-11-30", "Book_ID": "456"}, {"Publication_Date": "2019-08-20", "Book_ID": "789"}, {"Publication_Date": "2018-03-10", "Book_ID": "101"}, {"Publication_Date": "2017-09-25", "Book_ID": "112"}]}}, {"answer": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 4000000", "context": "CREATE TABLE publication (Book_ID VARCHAR, Price INTEGER); CREATE TABLE book (Writer VARCHAR, Book_ID VARCHAR)", "question": "Show writers who have published a book with price more than 4000000.", "dummy_table": {"publication": [{"Book_ID": "12345", "Price": 5000000}, {"Book_ID": "67890", "Price": 4500000}, {"Book_ID": "54321", "Price": 6000000}, {"Book_ID": "98765", "Price": 3500000}, {"Book_ID": "13579", "Price": 7000000}], "book": [{"Writer": "John Doe", "Book_ID": "12345"}, {"Writer": "Jane Smith", "Book_ID": "67890"}, {"Writer": "Alice Johnson", "Book_ID": "54321"}, {"Writer": "Bob Brown", "Book_ID": "98765"}, {"Writer": "Eve White", "Book_ID": "13579"}]}}, {"answer": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T2.Price DESC", "context": "CREATE TABLE publication (Book_ID VARCHAR, Price VARCHAR); CREATE TABLE book (Title VARCHAR, Book_ID VARCHAR)", "question": "Show the titles of books in descending order of publication price.", "dummy_table": {"publication": [{"Book_ID": "001", "Price": "20"}, {"Book_ID": "002", "Price": "15"}, {"Book_ID": "003", "Price": "25"}, {"Book_ID": "004", "Price": "18"}, {"Book_ID": "005", "Price": "22"}], "book": [{"Title": "Book A", "Book_ID": "001"}, {"Title": "Book B", "Book_ID": "002"}, {"Title": "Book C", "Book_ID": "003"}, {"Title": "Book D", "Book_ID": "004"}, {"Title": "Book E", "Book_ID": "005"}]}}, {"answer": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*) > 1", "context": "CREATE TABLE publication (Publisher VARCHAR)", "question": "Show publishers that have more than one publication.", "dummy_table": {"Publication": [{"Publisher": "Publisher A"}, {"Publisher": "Publisher B"}, {"Publisher": "Publisher A"}, {"Publisher": "Publisher C"}, {"Publisher": "Publisher B"}]}}, {"answer": "SELECT Publisher, COUNT(*) FROM publication GROUP BY Publisher", "context": "CREATE TABLE publication (Publisher VARCHAR)", "question": "Show different publishers together with the number of publications they have.", "dummy_table": {"Publication": [{"Publisher": "Publisher A"}, {"Publisher": "Publisher B"}, {"Publisher": "Publisher C"}, {"Publisher": "Publisher D"}, {"Publisher": "Publisher E"}]}}, {"answer": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE publication (Publication_Date VARCHAR)", "question": "Please show the most common publication date.", "dummy_table": {"publication": [{"Publication_Date": "2022-01-01"}, {"Publication_Date": "2022-01-02"}, {"Publication_Date": "2022-01-03"}, {"Publication_Date": "2022-01-04"}, {"Publication_Date": "2022-01-05"}]}}, {"answer": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*) > 1", "context": "CREATE TABLE book (Writer VARCHAR)", "question": "List the writers who have written more than one book.", "dummy_table": {"book": [{"Writer": "John Doe"}, {"Writer": "Jane Smith"}, {"Writer": "John Doe"}, {"Writer": "Alice Johnson"}, {"Writer": "Bob Brown"}]}}, {"answer": "SELECT Title FROM book WHERE NOT Book_ID IN (SELECT Book_ID FROM publication)", "context": "CREATE TABLE book (Title VARCHAR, Book_ID VARCHAR); CREATE TABLE publication (Title VARCHAR, Book_ID VARCHAR)", "question": "List the titles of books that are not published.", "dummy_table": {"book": [{"Title": "The Great Gatsby", "Book_ID": "123"}, {"Title": "To Kill a Mockingbird", "Book_ID": "456"}, {"Title": "1984", "Book_ID": "789"}, {"Title": "Pride and Prejudice", "Book_ID": "101"}, {"Title": "The Catcher in the Rye", "Book_ID": "202"}], "publication": []}}, {"answer": "SELECT Publisher FROM publication WHERE Price > 10000000 INTERSECT SELECT Publisher FROM publication WHERE Price < 5000000", "context": "CREATE TABLE publication (Publisher VARCHAR, Price INTEGER)", "question": "Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.", "dummy_table": {"Publication": [{"Publisher": "Publisher1", "Price": 15000000}, {"Publisher": "Publisher2", "Price": 8000000}, {"Publisher": "Publisher3", "Price": 12000000}, {"Publisher": "Publisher4", "Price": 3000000}, {"Publisher": "Publisher5", "Price": 6000000}]}}, {"answer": "SELECT COUNT(*) FROM actor", "context": "CREATE TABLE actor (Id VARCHAR)", "question": "How many actors are there?", "dummy_table": {"actor": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT Name FROM actor ORDER BY Name", "context": "CREATE TABLE actor (Name VARCHAR)", "question": "List the name of actors in ascending alphabetical order.", "dummy_table": {"actor": [{"Name": "Alice"}, {"Name": "Bob"}, {"Name": "Charlie"}, {"Name": "David"}, {"Name": "Eve"}]}}, {"answer": "SELECT Character, Duration FROM actor", "context": "CREATE TABLE actor (Character VARCHAR, Duration VARCHAR)", "question": "What are the characters and duration of actors?", "dummy_table": {"actor": [{"Character": "John Doe", "Duration": "2 hours"}, {"Character": "Jane Smith", "Duration": "1.5 hours"}, {"Character": "Alice Johnson", "Duration": "3 hours"}, {"Character": "Bob Brown", "Duration": "2.5 hours"}, {"Character": "Emily Davis", "Duration": "2 hours"}]}}, {"answer": "SELECT Name FROM actor WHERE Age <> 20", "context": "CREATE TABLE actor (Name VARCHAR, Age VARCHAR)", "question": "List the name of actors whose age is not 20.", "dummy_table": {"actor": [{"Name": "John", "Age": "25"}, {"Name": "Emily", "Age": "30"}, {"Name": "Michael", "Age": "22"}, {"Name": "Sarah", "Age": "18"}, {"Name": "David", "Age": "35"}]}}, {"answer": "SELECT Character FROM actor ORDER BY age DESC", "context": "CREATE TABLE actor (Character VARCHAR, age VARCHAR)", "question": "What are the characters of actors in descending order of age?", "dummy_table": {"actor": [{"Character": "John", "age": "40"}, {"Character": "Alice", "age": "35"}, {"Character": "Bob", "age": "30"}, {"Character": "Sarah", "age": "25"}, {"Character": "Mike", "age": "20"}]}}, {"answer": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1", "context": "CREATE TABLE actor (Duration VARCHAR, Age VARCHAR)", "question": "What is the duration of the oldest actor?", "dummy_table": {"actor": [{"Duration": "2 years", "Age": "45"}, {"Duration": "3 years", "Age": "50"}, {"Duration": "1 year", "Age": "60"}, {"Duration": "4 years", "Age": "55"}, {"Duration": "5 years", "Age": "70"}]}}, {"answer": "SELECT T1.Name, T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID", "context": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR); CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)", "question": "Show names of actors and names of musicals they are in.", "dummy_table": {"actor": [{"Name": "John Doe", "Musical_ID": "M001"}, {"Name": "Jane Smith", "Musical_ID": "M002"}, {"Name": "Michael Johnson", "Musical_ID": "M003"}, {"Name": "Sarah Williams", "Musical_ID": "M001"}, {"Name": "David Brown", "Musical_ID": "M004"}], "musical": [{"Name": "Les Miserables", "Musical_ID": "M001"}, {"Name": "The Phantom of the Opera", "Musical_ID": "M002"}, {"Name": "Hamilton", "Musical_ID": "M003"}, {"Name": "Cats", "Musical_ID": "M004"}, {"Name": "Chicago", "Musical_ID": "M005"}]}}, {"answer": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC", "context": "CREATE TABLE musical (Musical_ID VARCHAR, Year VARCHAR); CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR)", "question": "Show names of actors in descending order of the year their musical is awarded.", "dummy_table": {"musical": [{"Musical_ID": "M001", "Year": "2010"}, {"Musical_ID": "M002", "Year": "2015"}, {"Musical_ID": "M003", "Year": "2005"}, {"Musical_ID": "M004", "Year": "2018"}, {"Musical_ID": "M005", "Year": "2012"}], "actor": [{"Name": "John Doe", "Musical_ID": "M003"}, {"Name": "Jane Smith", "Musical_ID": "M002"}, {"Name": "Michael Johnson", "Musical_ID": "M005"}, {"Name": "Sarah Williams", "Musical_ID": "M001"}, {"Name": "Robert Brown", "Musical_ID": "M004"}]}}, {"answer": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*) >= 3", "context": "CREATE TABLE actor (Musical_ID VARCHAR); CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)", "question": "Show names of musicals which have at least three actors.", "dummy_table": {"actor": [{"Musical_ID": "M1"}, {"Musical_ID": "M2"}, {"Musical_ID": "M3"}, {"Musical_ID": "M4"}, {"Musical_ID": "M5"}], "musical": [{"Name": "Musical 1", "Musical_ID": "M1"}, {"Name": "Musical 2", "Musical_ID": "M2"}, {"Name": "Musical 3", "Musical_ID": "M3"}, {"Name": "Musical 4", "Musical_ID": "M4"}, {"Name": "Musical 5", "Musical_ID": "M5"}]}}, {"answer": "SELECT Nominee, COUNT(*) FROM musical GROUP BY Nominee", "context": "CREATE TABLE musical (Nominee VARCHAR)", "question": "Show different nominees and the number of musicals they have been nominated.", "dummy_table": {"musical": [{"Nominee": "John Doe"}, {"Nominee": "Jane Smith"}, {"Nominee": "Alice Johnson"}, {"Nominee": "Bob Brown"}, {"Nominee": "Sarah Lee"}]}}, {"answer": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE musical (Nominee VARCHAR)", "question": "Please show the nominee who has been nominated the greatest number of times.", "dummy_table": {"musical": [{"Nominee": "John Doe"}, {"Nominee": "Jane Smith"}, {"Nominee": "Alice Johnson"}, {"Nominee": "Bob Brown"}, {"Nominee": "Sarah Lee"}]}}, {"answer": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE musical (RESULT VARCHAR)", "question": "List the most common result of the musicals.", "dummy_table": {"musical": [{"RESULT": "Success"}, {"RESULT": "Failure"}, {"RESULT": "Cancelled"}, {"RESULT": "Success"}, {"RESULT": "Success"}]}}, {"answer": "SELECT Name FROM musical WHERE NOT Musical_ID IN (SELECT Musical_ID FROM actor)", "context": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR); CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)", "question": "List the name of musicals that do not have actors.", "dummy_table": {"musical": [{"Name": "Hamilton", "Musical_ID": "M001"}, {"Name": "Les Miserables", "Musical_ID": "M002"}, {"Name": "Phantom of the Opera", "Musical_ID": "M003"}, {"Name": "Wicked", "Musical_ID": "M004"}, {"Name": "Rent", "Musical_ID": "M005"}], "actor": []}}, {"answer": "SELECT email FROM user_profiles WHERE name = 'Mary'", "context": "CREATE TABLE user_profiles (email VARCHAR, name VARCHAR)", "question": "Find the emails of the user named \"Mary\".", "dummy_table": {"user_profiles": [{"email": "mary@example.com", "name": "Mary"}, {"email": "john@example.com", "name": "John"}, {"email": "jane@example.com", "name": "Jane"}, {"email": "alex@example.com", "name": "Alex"}, {"email": "sara@example.com", "name": "Sara"}]}}, {"answer": "SELECT partitionid FROM user_profiles WHERE name = 'Iron Man'", "context": "CREATE TABLE user_profiles (partitionid VARCHAR, name VARCHAR)", "question": "What is the partition id of the user named \"Iron Man\".", "dummy_table": {"user_profiles": [{"partitionid": "001", "name": "Iron Man"}, {"partitionid": "002", "name": "Captain America"}, {"partitionid": "003", "name": "Thor"}, {"partitionid": "004", "name": "Hulk"}, {"partitionid": "005", "name": "Black Widow"}]}}, {"answer": "SELECT COUNT(*) FROM user_profiles", "context": "CREATE TABLE user_profiles (Id VARCHAR)", "question": "How many users are there?", "dummy_table": {"user_profiles": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT COUNT(*) FROM follows", "context": "CREATE TABLE follows (Id VARCHAR)", "question": "How many followers does each user have?", "dummy_table": {"follows": [{"Id": "user1"}, {"Id": "user2"}, {"Id": "user3"}, {"Id": "user4"}, {"Id": "user5"}]}}, {"answer": "SELECT COUNT(*) FROM follows GROUP BY f1", "context": "CREATE TABLE follows (f1 VARCHAR)", "question": "Find the number of followers for each user.", "dummy_table": {"follows": [{"f1": "user1"}, {"f1": "user2"}, {"f1": "user3"}, {"f1": "user4"}, {"f1": "user5"}]}}, {"answer": "SELECT COUNT(*) FROM tweets", "context": "CREATE TABLE tweets (Id VARCHAR)", "question": "Find the number of tweets in record.", "dummy_table": {"tweets": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT COUNT(DISTINCT UID) FROM tweets", "context": "CREATE TABLE tweets (UID VARCHAR)", "question": "Find the number of users who posted some tweets.", "dummy_table": {"tweets": [{"UID": "user1"}, {"UID": "user2"}, {"UID": "user3"}, {"UID": "user4"}, {"UID": "user5"}]}}, {"answer": "SELECT name, email FROM user_profiles WHERE name LIKE '%Swift%'", "context": "CREATE TABLE user_profiles (name VARCHAR, email VARCHAR)", "question": "Find the name and email of the user whose name contains the word \u2018Swift\u2019.", "dummy_table": {"user_profiles": [{"name": "Taylor Swift", "email": "taylor@example.com"}, {"name": "John Doe", "email": "john.doe@example.com"}, {"name": "Jane Swift", "email": "jane.swift@example.com"}, {"name": "Alice Johnson", "email": "alice.johnson@example.com"}, {"name": "Michael Swift", "email": "michael.swift@example.com"}]}}, {"answer": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'", "context": "CREATE TABLE user_profiles (name VARCHAR, email VARCHAR)", "question": "Find the names of users whose emails contain \u2018superstar\u2019 or \u2018edu\u2019.", "dummy_table": {"user_profiles": [{"name": "John Doe", "email": "johndoe@example.com"}, {"name": "Jane Smith", "email": "janesuperstar@example.com"}, {"name": "Alice Johnson", "email": "alice.edu@example.com"}, {"name": "Bob Brown", "email": "bob@example.com"}, {"name": "Sarah Lee", "email": "sarahlee@superstar.edu"}]}}, {"answer": "SELECT text FROM tweets WHERE text LIKE '%intern%'", "context": "CREATE TABLE tweets (text VARCHAR)", "question": "Return the text of tweets about the topic 'intern'.", "dummy_table": {"tweets": [{"text": "Just started my internship and I'm already loving it!"}, {"text": "Looking for an intern to join our team. Apply now!"}, {"text": "Interns play a crucial role in our organization's success."}, {"text": "Excited to welcome our new intern to the team!"}, {"text": "Internship opportunities available for students."}]}}, {"answer": "SELECT name, email FROM user_profiles WHERE followers > 1000", "context": "CREATE TABLE user_profiles (name VARCHAR, email VARCHAR, followers INTEGER)", "question": "Find the name and email of the users who have more than 1000 followers.", "dummy_table": {"user_profiles": [{"name": "John Doe", "email": "johndoe@example.com", "followers": 1500}, {"name": "Jane Smith", "email": "janesmith@example.com", "followers": 1200}, {"name": "Alice Johnson", "email": "alicejohnson@example.com", "followers": 800}, {"name": "Bob Brown", "email": "bobbrown@example.com", "followers": 2000}, {"name": "Sarah Lee", "email": "sarahlee@example.com", "followers": 900}]}}, {"answer": "SELECT T1.name, T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING COUNT(*) > 1", "context": "CREATE TABLE follows (f1 VARCHAR); CREATE TABLE user_profiles (name VARCHAR, email VARCHAR, uid VARCHAR)", "question": "Find the name and email for the users who have more than one follower.", "dummy_table": {"follows": [{"f1": "user1"}, {"f1": "user2"}, {"f1": "user3"}, {"f1": "user4"}, {"f1": "user5"}], "user_profiles": [{"name": "John Doe", "email": "john.doe@example.com", "uid": "12345"}, {"name": "Jane Smith", "email": "jane.smith@example.com", "uid": "67890"}, {"name": "Alice Johnson", "email": "alice.johnson@example.com", "uid": "54321"}, {"name": "Bob Brown", "email": "bob.brown@example.com", "uid": "98765"}, {"name": "Eve Wilson", "email": "eve.wilson@example.com", "uid": "13579"}]}}, {"answer": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING COUNT(*) > 1", "context": "CREATE TABLE tweets (uid VARCHAR); CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR)", "question": "Find the names of users who have more than one tweet.", "dummy_table": {"tweets": [{"uid": "user1"}, {"uid": "user2"}, {"uid": "user3"}, {"uid": "user4"}, {"uid": "user5"}], "user_profiles": [{"name": "John", "uid": "user1"}, {"name": "Jane", "uid": "user2"}, {"name": "Alice", "uid": "user3"}, {"name": "Bob", "uid": "user4"}, {"name": "Eve", "uid": "user5"}]}}, {"answer": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1", "context": "CREATE TABLE user_profiles (name VARCHAR, followers VARCHAR)", "question": "Find the name of the user who has the largest number of followers.", "dummy_table": {"user_profiles": [{"name": "Alice", "followers": "1000"}, {"name": "Bob", "followers": "500"}, {"name": "Charlie", "followers": "1500"}, {"name": "David", "followers": "800"}, {"name": "Eve", "followers": "1200"}]}}, {"answer": "SELECT name, email FROM user_profiles ORDER BY followers LIMIT 1", "context": "CREATE TABLE user_profiles (name VARCHAR, email VARCHAR, followers VARCHAR)", "question": "Find the name and email of the user followed by the least number of people.", "dummy_table": {"user_profiles": [{"name": "Alice", "email": "alice@example.com", "followers": "100"}, {"name": "Bob", "email": "bob@example.com", "followers": "50"}, {"name": "Charlie", "email": "charlie@example.com", "followers": "30"}, {"name": "David", "email": "david@example.com", "followers": "80"}, {"name": "Eve", "email": "eve@example.com", "followers": "20"}]}}, {"answer": "SELECT name, followers FROM user_profiles ORDER BY followers DESC", "context": "CREATE TABLE user_profiles (name VARCHAR, followers VARCHAR)", "question": "List the name and number of followers for each user, and sort the results by the number of followers in descending order.", "dummy_table": {"user_profiles": [{"name": "Alice", "followers": "1000"}, {"name": "Bob", "followers": "800"}, {"name": "Charlie", "followers": "1200"}, {"name": "David", "followers": "600"}, {"name": "Eve", "followers": "1500"}]}}, {"answer": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5", "context": "CREATE TABLE user_profiles (name VARCHAR, followers VARCHAR)", "question": "List the names of 5 users followed by the largest number of other users.", "dummy_table": {"user_profiles": [{"name": "Alice", "followers": "100"}, {"name": "Bob", "followers": "150"}, {"name": "Charlie", "followers": "200"}, {"name": "David", "followers": "250"}, {"name": "Eve", "followers": "300"}]}}, {"answer": "SELECT text FROM tweets ORDER BY createdate", "context": "CREATE TABLE tweets (text VARCHAR, createdate VARCHAR)", "question": "List the text of all tweets in the order of date.", "dummy_table": {"tweets": [{"text": "Hello world", "createdate": "2022-01-01"}, {"text": "Good morning", "createdate": "2022-01-02"}, {"text": "Happy Friday", "createdate": "2022-01-03"}, {"text": "Weekend vibes", "createdate": "2022-01-04"}, {"text": "Coding time", "createdate": "2022-01-05"}]}}, {"answer": "SELECT AVG(followers) FROM user_profiles WHERE NOT UID IN (SELECT UID FROM tweets)", "context": "CREATE TABLE user_profiles (followers INTEGER, UID VARCHAR); CREATE TABLE tweets (followers INTEGER, UID VARCHAR)", "question": "Find the average number of followers for the users who do not have any tweet.", "dummy_table": {"user_profiles": [{"followers": 100, "UID": "user1"}, {"followers": 200, "UID": "user2"}, {"followers": 150, "UID": "user3"}, {"followers": 120, "UID": "user4"}, {"followers": 180, "UID": "user5"}], "tweets": []}}, {"answer": "SELECT AVG(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)", "context": "CREATE TABLE user_profiles (followers INTEGER, UID VARCHAR); CREATE TABLE tweets (followers INTEGER, UID VARCHAR)", "question": "Find the average number of followers for the users who had some tweets.", "dummy_table": {"user_profiles": [{"followers": 100, "UID": "user1"}, {"followers": 200, "UID": "user2"}, {"followers": 150, "UID": "user3"}, {"followers": 120, "UID": "user4"}, {"followers": 180, "UID": "user5"}], "tweets": [{"followers": 100, "UID": "user1"}, {"followers": 150, "UID": "user3"}, {"followers": 120, "UID": "user4"}]}}, {"answer": "SELECT MAX(followers), SUM(followers) FROM user_profiles", "context": "CREATE TABLE user_profiles (followers INTEGER)", "question": "Find the maximum and total number of followers of all users.", "dummy_table": {"user_profiles": [{"followers": 100}, {"followers": 200}, {"followers": 150}, {"followers": 300}, {"followers": 250}]}}, {"answer": "SELECT DISTINCT (catalog_entry_name) FROM catalog_contents", "context": "CREATE TABLE catalog_contents (catalog_entry_name VARCHAR)", "question": "Find the names of all the catalog entries.", "dummy_table": {"catalog_contents": [{"catalog_entry_name": "Entry 1"}, {"catalog_entry_name": "Entry 2"}, {"catalog_entry_name": "Entry 3"}, {"catalog_entry_name": "Entry 4"}, {"catalog_entry_name": "Entry 5"}]}}, {"answer": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING COUNT(*) > 3", "context": "CREATE TABLE Attribute_Definitions (attribute_data_type VARCHAR)", "question": "Find the list of attribute data types possessed by more than 3 attribute definitions.", "dummy_table": {"Attribute_Definitions": [{"attribute_data_type": "VARCHAR"}, {"attribute_data_type": "INTEGER"}, {"attribute_data_type": "BOOLEAN"}, {"attribute_data_type": "DATE"}, {"attribute_data_type": "DECIMAL"}]}}, {"answer": "SELECT catalog_level_name, catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10", "context": "CREATE TABLE Catalog_Structure (catalog_level_name VARCHAR, catalog_level_number INTEGER)", "question": "Find the name and level of catalog structure with level between 5 and 10.", "dummy_table": {"Catalog_Structure": [{"catalog_level_name": "Level 1", "catalog_level_number": 1}, {"catalog_level_name": "Level 2", "catalog_level_number": 2}, {"catalog_level_name": "Level 3", "catalog_level_number": 3}, {"catalog_level_name": "Level 4", "catalog_level_number": 4}, {"catalog_level_name": "Level 5", "catalog_level_number": 5}]}}, {"answer": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE catalogs (catalog_publisher VARCHAR)", "question": "Which catalog publisher has published the most catalogs?", "dummy_table": {"catalogs": [{"catalog_publisher": "Publisher A"}, {"catalog_publisher": "Publisher B"}, {"catalog_publisher": "Publisher A"}, {"catalog_publisher": "Publisher C"}, {"catalog_publisher": "Publisher B"}]}}, {"answer": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value = (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY COUNT(*) DESC LIMIT 1)", "context": "CREATE TABLE Catalog_Contents_Additional_Attributes (catalog_entry_id VARCHAR, attribute_value VARCHAR); CREATE TABLE Catalog_Contents (catalog_entry_name VARCHAR, catalog_entry_id VARCHAR); CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_value VARCHAR)", "question": "What are the entry names of catalog with the attribute possessed by most entries.", "dummy_table": {"Catalog_Contents": [{"catalog_entry_name": "Entry1", "catalog_entry_id": "1"}, {"catalog_entry_name": "Entry2", "catalog_entry_id": "2"}, {"catalog_entry_name": "Entry3", "catalog_entry_id": "3"}, {"catalog_entry_name": "Entry4", "catalog_entry_id": "4"}, {"catalog_entry_name": "Entry5", "catalog_entry_id": "5"}], "Catalog_Contents_Additional_Attributes": [{"catalog_entry_id": "1", "attribute_value": "Value1"}, {"catalog_entry_id": "2", "attribute_value": "Value2"}, {"catalog_entry_id": "3", "attribute_value": "Value3"}, {"catalog_entry_id": "4", "attribute_value": "Value4"}, {"catalog_entry_id": "5", "attribute_value": "Value5"}]}}, {"answer": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1", "context": "CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, price_in_dollars VARCHAR)", "question": "What is the entry name of the most expensive catalog (in USD)?", "dummy_table": {"catalog_contents": [{"catalog_entry_name": "Product A", "price_in_dollars": "100"}, {"catalog_entry_name": "Product B", "price_in_dollars": "150"}, {"catalog_entry_name": "Product C", "price_in_dollars": "120"}, {"catalog_entry_name": "Product D", "price_in_dollars": "200"}, {"catalog_entry_name": "Product E", "price_in_dollars": "180"}]}}, {"answer": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number = t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1", "context": "CREATE TABLE catalog_structure (catalog_level_name VARCHAR, catalog_level_number VARCHAR); CREATE TABLE catalog_contents (catalog_level_number VARCHAR, price_in_dollars VARCHAR)", "question": "What is the level name of the cheapest catalog (in USD)?", "dummy_table": {"catalog_structure": [{"catalog_level_name": "Level 1", "catalog_level_number": "1"}, {"catalog_level_name": "Level 2", "catalog_level_number": "2"}, {"catalog_level_name": "Level 3", "catalog_level_number": "3"}, {"catalog_level_name": "Level 4", "catalog_level_number": "4"}, {"catalog_level_name": "Level 5", "catalog_level_number": "5"}], "catalog_contents": [{"catalog_level_number": "1", "price_in_dollars": "10"}, {"catalog_level_number": "2", "price_in_dollars": "15"}, {"catalog_level_number": "3", "price_in_dollars": "8"}, {"catalog_level_number": "4", "price_in_dollars": "20"}, {"catalog_level_number": "5", "price_in_dollars": "5"}]}}, {"answer": "SELECT AVG(price_in_euros), MIN(price_in_euros) FROM catalog_contents", "context": "CREATE TABLE catalog_contents (price_in_euros INTEGER)", "question": "What are the average and minimum price (in Euro) of all products?", "dummy_table": {"catalog_contents": [{"price_in_euros": 10}, {"price_in_euros": 20}, {"price_in_euros": 15}, {"price_in_euros": 25}, {"price_in_euros": 30}]}}, {"answer": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1", "context": "CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, height VARCHAR)", "question": "What is the product with the highest height? Give me the catalog entry name.", "dummy_table": {"catalog_contents": [{"catalog_entry_name": "Product A", "height": "10cm"}, {"catalog_entry_name": "Product B", "height": "15cm"}, {"catalog_entry_name": "Product C", "height": "12cm"}, {"catalog_entry_name": "Product D", "height": "18cm"}, {"catalog_entry_name": "Product E", "height": "20cm"}]}}, {"answer": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity LIMIT 1", "context": "CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, capacity VARCHAR)", "question": "Find the name of the product that has the smallest capacity.", "dummy_table": {"catalog_contents": [{"catalog_entry_name": "Product A", "capacity": "10GB"}, {"catalog_entry_name": "Product B", "capacity": "5GB"}, {"catalog_entry_name": "Product C", "capacity": "8GB"}, {"catalog_entry_name": "Product D", "capacity": "3GB"}, {"catalog_entry_name": "Product E", "capacity": "12GB"}]}}, {"answer": "SELECT t1.attribute_name, t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0", "context": "CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_id VARCHAR, attribute_value VARCHAR); CREATE TABLE Attribute_Definitions (attribute_name VARCHAR, attribute_id VARCHAR)", "question": "Find the name and attribute ID of the attribute definitions with attribute value 0.", "dummy_table": {"Catalog_Contents_Additional_Attributes": [{"attribute_id": "1", "attribute_value": "0"}, {"attribute_id": "2", "attribute_value": "0"}, {"attribute_id": "3", "attribute_value": "0"}, {"attribute_id": "4", "attribute_value": "0"}, {"attribute_id": "5", "attribute_value": "0"}], "Attribute_Definitions": [{"attribute_name": "Attribute1", "attribute_id": "1"}, {"attribute_name": "Attribute2", "attribute_id": "2"}, {"attribute_name": "Attribute3", "attribute_id": "3"}, {"attribute_name": "Attribute4", "attribute_id": "4"}, {"attribute_name": "Attribute5", "attribute_id": "5"}]}}, {"answer": "SELECT catalog_entry_name, capacity FROM Catalog_Contents WHERE price_in_dollars > 700", "context": "CREATE TABLE Catalog_Contents (catalog_entry_name VARCHAR, capacity VARCHAR, price_in_dollars INTEGER)", "question": "Find the name and capacity of products with price greater than 700 (in USD).", "dummy_table": {"Catalog_Contents": [{"catalog_entry_name": "Product A", "capacity": "10GB", "price_in_dollars": 800}, {"catalog_entry_name": "Product B", "capacity": "20GB", "price_in_dollars": 900}, {"catalog_entry_name": "Product C", "capacity": "15GB", "price_in_dollars": 750}, {"catalog_entry_name": "Product D", "capacity": "25GB", "price_in_dollars": 1000}, {"catalog_entry_name": "Product E", "capacity": "30GB", "price_in_dollars": 850}]}}, {"answer": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING COUNT(*) > 1", "context": "CREATE TABLE Catalogs (date_of_latest_revision VARCHAR)", "question": "Find the dates on which more than one revisions were made.", "dummy_table": {"Catalogs": [{"date_of_latest_revision": "2022-01-15"}, {"date_of_latest_revision": "2022-02-20"}, {"date_of_latest_revision": "2022-03-25"}, {"date_of_latest_revision": "2022-03-25"}, {"date_of_latest_revision": "2022-04-30"}]}}, {"answer": "SELECT COUNT(*) FROM catalog_contents", "context": "CREATE TABLE catalog_contents (Id VARCHAR)", "question": "How many products are there in the records?", "dummy_table": {"catalog_contents": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id > 8", "context": "CREATE TABLE catalog_contents (catalog_entry_name VARCHAR, next_entry_id INTEGER)", "question": "Name all the products with next entry ID greater than 8.", "dummy_table": {"catalog_contents": [{"catalog_entry_name": "Product A", "next_entry_id": 10}, {"catalog_entry_name": "Product B", "next_entry_id": 5}, {"catalog_entry_name": "Product C", "next_entry_id": 12}, {"catalog_entry_name": "Product D", "next_entry_id": 3}, {"catalog_entry_name": "Product E", "next_entry_id": 9}]}}, {"answer": "SELECT COUNT(*) FROM Aircraft", "context": "CREATE TABLE Aircraft (Id VARCHAR)", "question": "How many aircrafts do we have?", "dummy_table": {"Aircraft": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT name, distance FROM Aircraft", "context": "CREATE TABLE Aircraft (name VARCHAR, distance VARCHAR)", "question": "Show name and distance for all aircrafts.", "dummy_table": {"Aircraft": [{"name": "Boeing 747", "distance": "10000 km"}, {"name": "Airbus A380", "distance": "12000 km"}, {"name": "Cessna 172", "distance": "800 km"}, {"name": "Embraer E190", "distance": "3000 km"}, {"name": "Bombardier Global 6000", "distance": "14000 km"}]}}, {"answer": "SELECT aid FROM Aircraft WHERE distance > 1000", "context": "CREATE TABLE Aircraft (aid VARCHAR, distance INTEGER)", "question": "Show ids for all aircrafts with more than 1000 distance.", "dummy_table": {"Aircraft": [{"aid": "A001", "distance": 1500}, {"aid": "A002", "distance": 800}, {"aid": "A003", "distance": 1200}, {"aid": "A004", "distance": 950}, {"aid": "A005", "distance": 2000}]}}, {"answer": "SELECT COUNT(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000", "context": "CREATE TABLE Aircraft (distance INTEGER)", "question": "How many aircrafts have distance between 1000 and 5000?", "dummy_table": {"Aircraft": [{"distance": 1500}, {"distance": 2000}, {"distance": 3000}, {"distance": 4000}, {"distance": 4500}]}}, {"answer": "SELECT name, distance FROM Aircraft WHERE aid = 12", "context": "CREATE TABLE Aircraft (name VARCHAR, distance VARCHAR, aid VARCHAR)", "question": "What is the name and distance for aircraft with id 12?", "dummy_table": {"Aircraft": [{"name": "Airbus A320", "distance": "1000 km", "aid": "12"}, {"name": "Boeing 747", "distance": "5000 km", "aid": "15"}, {"name": "Cessna 172", "distance": "300 km", "aid": "18"}, {"name": "Embraer E190", "distance": "1500 km", "aid": "22"}, {"name": "Bombardier CRJ900", "distance": "800 km", "aid": "25"}]}}, {"answer": "SELECT MIN(distance), AVG(distance), MAX(distance) FROM Aircraft", "context": "CREATE TABLE Aircraft (distance INTEGER)", "question": "What is the minimum, average, and maximum distance of all aircrafts.", "dummy_table": {"Aircraft": [{"distance": 100}, {"distance": 200}, {"distance": 150}, {"distance": 300}, {"distance": 250}]}}, {"answer": "SELECT aid, name FROM Aircraft ORDER BY distance DESC LIMIT 1", "context": "CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR, distance VARCHAR)", "question": "Show the id and name of the aircraft with the maximum distance.", "dummy_table": {"Aircraft": [{"aid": "1", "name": "Boeing 747", "distance": "10000 km"}, {"aid": "2", "name": "Airbus A380", "distance": "12000 km"}, {"aid": "3", "name": "Boeing 787", "distance": "11000 km"}, {"aid": "4", "name": "Embraer E190", "distance": "5000 km"}, {"aid": "5", "name": "Cessna 172", "distance": "1500 km"}]}}, {"answer": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3", "context": "CREATE TABLE Aircraft (name VARCHAR, distance VARCHAR)", "question": "Show the name of aircrafts with top three lowest distances.", "dummy_table": {"Aircraft": [{"name": "Boeing 747", "distance": "1000 miles"}, {"name": "Airbus A320", "distance": "800 miles"}, {"name": "Cessna 172", "distance": "500 miles"}, {"name": "Embraer E190", "distance": "600 miles"}, {"name": "Bombardier CRJ200", "distance": "700 miles"}]}}, {"answer": "SELECT name FROM Aircraft WHERE distance > (SELECT AVG(distance) FROM Aircraft)", "context": "CREATE TABLE Aircraft (name VARCHAR, distance INTEGER)", "question": "Show names for all aircrafts with distances more than the average.", "dummy_table": {"Aircraft": [{"name": "Airbus A320", "distance": 1500}, {"name": "Boeing 747", "distance": 2000}, {"name": "Embraer E190", "distance": 1200}, {"name": "Cessna 172", "distance": 800}, {"name": "Bombardier Global 6000", "distance": 2500}]}}, {"answer": "SELECT COUNT(*) FROM Employee", "context": "CREATE TABLE Employee (Id VARCHAR)", "question": "How many employees do we have?", "dummy_table": {"Employee": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT name, salary FROM Employee ORDER BY salary", "context": "CREATE TABLE Employee (name VARCHAR, salary VARCHAR)", "question": "Show name and salary for all employees sorted by salary.", "dummy_table": {"Employee": [{"name": "Alice", "salary": "50000"}, {"name": "Bob", "salary": "60000"}, {"name": "Charlie", "salary": "55000"}, {"name": "David", "salary": "52000"}, {"name": "Eve", "salary": "58000"}]}}, {"answer": "SELECT eid FROM Employee WHERE salary > 100000", "context": "CREATE TABLE Employee (eid VARCHAR, salary INTEGER)", "question": "Show ids for all employees with at least 100000 salary.", "dummy_table": {"Employee": [{"eid": "001", "salary": 120000}, {"eid": "002", "salary": 95000}, {"eid": "003", "salary": 105000}, {"eid": "004", "salary": 110000}, {"eid": "005", "salary": 98000}]}}, {"answer": "SELECT COUNT(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000", "context": "CREATE TABLE Employee (salary INTEGER)", "question": "How many employees have salary between 100000 and 200000?", "dummy_table": {"Employee": [{"salary": 150000}, {"salary": 120000}, {"salary": 180000}, {"salary": 110000}, {"salary": 130000}]}}, {"answer": "SELECT name, salary FROM Employee WHERE eid = 242518965", "context": "CREATE TABLE Employee (name VARCHAR, salary VARCHAR, eid VARCHAR)", "question": "What is the name and salary for employee with id 242518965?", "dummy_table": {"Employee": [{"eid": "242518965", "name": "John Doe", "salary": "$50,000"}, {"eid": "123456789", "name": "Jane Smith", "salary": "$60,000"}, {"eid": "987654321", "name": "Michael Johnson", "salary": "$55,000"}, {"eid": "555555555", "name": "Emily Davis", "salary": "$45,000"}, {"eid": "999999999", "name": "Chris Brown", "salary": "$70,000"}]}}, {"answer": "SELECT AVG(salary), MAX(salary) FROM Employee", "context": "CREATE TABLE Employee (salary INTEGER)", "question": "What is average and maximum salary of all employees.", "dummy_table": {"Employee": [{"salary": 50000}, {"salary": 60000}, {"salary": 70000}, {"salary": 80000}, {"salary": 90000}]}}, {"answer": "SELECT eid, name FROM Employee ORDER BY salary DESC LIMIT 1", "context": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)", "question": "Show the id and name of the employee with maximum salary.", "dummy_table": {"Employee": [{"eid": "001", "name": "Alice", "salary": "50000"}, {"eid": "002", "name": "Bob", "salary": "60000"}, {"eid": "003", "name": "Charlie", "salary": "70000"}, {"eid": "004", "name": "David", "salary": "80000"}, {"eid": "005", "name": "Eve", "salary": "90000"}]}}, {"answer": "SELECT name FROM Employee ORDER BY salary LIMIT 3", "context": "CREATE TABLE Employee (name VARCHAR, salary VARCHAR)", "question": "Show the name of employees with three lowest salaries.", "dummy_table": {"Employee": [{"name": "Alice", "salary": "30000"}, {"name": "Bob", "salary": "35000"}, {"name": "Charlie", "salary": "28000"}, {"name": "David", "salary": "32000"}, {"name": "Eve", "salary": "27000"}]}}, {"answer": "SELECT name FROM Employee WHERE salary > (SELECT AVG(salary) FROM Employee)", "context": "CREATE TABLE Employee (name VARCHAR, salary INTEGER)", "question": "Show names for all employees with salary more than the average.", "dummy_table": {"Employee": [{"name": "Alice", "salary": 50000}, {"name": "Bob", "salary": 60000}, {"name": "Charlie", "salary": 70000}, {"name": "David", "salary": 80000}, {"name": "Eve", "salary": 90000}]}}, {"answer": "SELECT eid, salary FROM Employee WHERE name = 'Mark Young'", "context": "CREATE TABLE Employee (eid VARCHAR, salary VARCHAR, name VARCHAR)", "question": "Show the id and salary of Mark Young.", "dummy_table": {"Employee": [{"eid": "001", "salary": "50000", "name": "John Doe"}, {"eid": "002", "salary": "60000", "name": "Jane Smith"}, {"eid": "003", "salary": "70000", "name": "Mark Young"}, {"eid": "004", "salary": "55000", "name": "Emily Brown"}, {"eid": "005", "salary": "65000", "name": "Michael Johnson"}]}}, {"answer": "SELECT COUNT(*) FROM Flight", "context": "CREATE TABLE Flight (Id VARCHAR)", "question": "How many flights do we have?", "dummy_table": {"Flight": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT flno, origin, destination FROM Flight ORDER BY origin", "context": "CREATE TABLE Flight (flno VARCHAR, origin VARCHAR, destination VARCHAR)", "question": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.", "dummy_table": {"Flight": [{"flno": "AA101", "origin": "Chicago", "destination": "New York"}, {"flno": "BB202", "origin": "Los Angeles", "destination": "Miami"}, {"flno": "CC303", "origin": "San Francisco", "destination": "Seattle"}, {"flno": "DD404", "origin": "Boston", "destination": "Washington D.C."}, {"flno": "EE505", "origin": "Dallas", "destination": "Houston"}]}}, {"answer": "SELECT flno FROM Flight WHERE distance > 2000", "context": "CREATE TABLE Flight (flno VARCHAR, distance INTEGER)", "question": "Show flight number for all flights with more than 2000 distance.", "dummy_table": {"Flight": [{"flno": "AA123", "distance": 2500}, {"flno": "BB456", "distance": 3000}, {"flno": "CC789", "distance": 2200}, {"flno": "DD012", "distance": 2800}, {"flno": "EE345", "distance": 2100}]}}, {"answer": "SELECT origin, destination FROM Flight WHERE price > 300", "context": "CREATE TABLE Flight (origin VARCHAR, destination VARCHAR, price INTEGER)", "question": "Show origin and destination for flights with price higher than 300.", "dummy_table": {"Flight": [{"origin": "New York", "destination": "Los Angeles", "price": 400}, {"origin": "Chicago", "destination": "Miami", "price": 350}, {"origin": "Dallas", "destination": "San Francisco", "price": 500}, {"origin": "Seattle", "destination": "Boston", "price": 320}, {"origin": "Atlanta", "destination": "Las Vegas", "price": 450}]}}, {"answer": "SELECT flno, distance FROM Flight ORDER BY price DESC LIMIT 1", "context": "CREATE TABLE Flight (flno VARCHAR, distance VARCHAR, price VARCHAR)", "question": "Show the flight number and distance of the flight with maximum price.", "dummy_table": {"Flight": [{"flno": "F100", "distance": "1000", "price": "500"}, {"flno": "F200", "distance": "1500", "price": "700"}, {"flno": "F300", "distance": "1200", "price": "600"}, {"flno": "F400", "distance": "800", "price": "400"}, {"flno": "F500", "distance": "2000", "price": "800"}]}}, {"answer": "SELECT flno FROM Flight ORDER BY distance LIMIT 3", "context": "CREATE TABLE Flight (flno VARCHAR, distance VARCHAR)", "question": "Show the flight number of flights with three lowest distances.", "dummy_table": {"Flight": [{"flno": "FL001", "distance": "100"}, {"flno": "FL002", "distance": "150"}, {"flno": "FL003", "distance": "200"}, {"flno": "FL004", "distance": "250"}, {"flno": "FL005", "distance": "300"}]}}, {"answer": "SELECT origin, COUNT(*) FROM Flight GROUP BY origin", "context": "CREATE TABLE Flight (origin VARCHAR)", "question": "Show all origins and the number of flights from each origin.", "dummy_table": {"Flight": [{"origin": "New York"}, {"origin": "Los Angeles"}, {"origin": "Chicago"}, {"origin": "Miami"}, {"origin": "Dallas"}]}}, {"answer": "SELECT destination, COUNT(*) FROM Flight GROUP BY destination", "context": "CREATE TABLE Flight (destination VARCHAR)", "question": "Show all destinations and the number of flights to each destination.", "dummy_table": {"Flight": [{"destination": "New York"}, {"destination": "Los Angeles"}, {"destination": "Chicago"}, {"destination": "Miami"}, {"destination": "Dallas"}]}}, {"answer": "SELECT origin FROM Flight GROUP BY origin ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Flight (origin VARCHAR)", "question": "Which origin has most number of flights?", "dummy_table": {"Flight": [{"origin": "New York"}, {"origin": "Los Angeles"}, {"origin": "Chicago"}, {"origin": "Miami"}, {"origin": "Dallas"}]}}, {"answer": "SELECT destination FROM Flight GROUP BY destination ORDER BY COUNT(*) LIMIT 1", "context": "CREATE TABLE Flight (destination VARCHAR)", "question": "Which destination has least number of flights?", "dummy_table": {"Flight": [{"destination": "New York"}, {"destination": "Los Angeles"}, {"destination": "Chicago"}, {"destination": "Miami"}, {"destination": "Seattle"}]}}, {"answer": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99", "context": "CREATE TABLE Flight (aid VARCHAR, flno VARCHAR); CREATE TABLE Aircraft (name VARCHAR, aid VARCHAR)", "question": "What is the aircraft name for the flight with number 99", "dummy_table": {"Flight": [{"aid": "A001", "flno": "99"}, {"aid": "A002", "flno": "100"}, {"aid": "A003", "flno": "101"}, {"aid": "A004", "flno": "102"}, {"aid": "A005", "flno": "103"}], "Aircraft": [{"name": "Boeing 747", "aid": "A001"}, {"name": "Airbus A320", "aid": "A002"}, {"name": "Boeing 777", "aid": "A003"}, {"name": "Airbus A380", "aid": "A004"}, {"name": "Embraer E190", "aid": "A005"}]}}, {"answer": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING COUNT(*) >= 2", "context": "CREATE TABLE Aircraft (name VARCHAR, aid VARCHAR); CREATE TABLE Flight (aid VARCHAR)", "question": "Show names for all aircraft with at least two flights.", "dummy_table": {"Aircraft": [{"name": "Boeing 747", "aid": "A001"}, {"name": "Airbus A380", "aid": "A002"}, {"name": "Cessna 172", "aid": "A003"}, {"name": "Embraer E190", "aid": "A004"}, {"name": "Bombardier Challenger 300", "aid": "A005"}], "Flight": []}}, {"answer": "SELECT COUNT(DISTINCT eid) FROM Certificate", "context": "CREATE TABLE Certificate (eid VARCHAR)", "question": "How many employees have certificate.", "dummy_table": {"Certificate": [{"eid": "12345"}, {"eid": "67890"}, {"eid": "54321"}, {"eid": "09876"}, {"eid": "13579"}]}}, {"answer": "SELECT COUNT(DISTINCT allergy) FROM Allergy_type", "context": "CREATE TABLE Allergy_type (allergy VARCHAR)", "question": "How many allergies are there?", "dummy_table": {"Allergy_type": [{"allergy": "Peanut allergy"}, {"allergy": "Lactose intolerance"}, {"allergy": "Shellfish allergy"}, {"allergy": "Gluten sensitivity"}, {"allergy": "Soy allergy"}]}}, {"answer": "SELECT COUNT(DISTINCT allergytype) FROM Allergy_type", "context": "CREATE TABLE Allergy_type (allergytype VARCHAR)", "question": "How many different allergy types exist?", "dummy_table": {"Allergy_type": [{"allergytype": "Peanut allergy"}, {"allergytype": "Shellfish allergy"}, {"allergytype": "Dairy allergy"}, {"allergytype": "Gluten allergy"}, {"allergytype": "Soy allergy"}]}}, {"answer": "SELECT DISTINCT allergytype FROM Allergy_type", "context": "CREATE TABLE Allergy_type (allergytype VARCHAR)", "question": "Show all allergy types.", "dummy_table": {"Allergy_type": [{"allergytype": "Peanut allergy"}, {"allergytype": "Shellfish allergy"}, {"allergytype": "Dairy allergy"}, {"allergytype": "Gluten allergy"}, {"allergytype": "Soy allergy"}]}}, {"answer": "SELECT allergy, allergytype FROM Allergy_type", "context": "CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)", "question": "Show all allergies and their types.", "dummy_table": {"Allergy_type": [{"allergy": "Peanut", "allergytype": "Food"}, {"allergy": "Pollen", "allergytype": "Environmental"}, {"allergy": "Penicillin", "allergytype": "Medication"}, {"allergy": "Cat", "allergytype": "Animal"}, {"allergy": "Dust", "allergytype": "Environmental"}]}}, {"answer": "SELECT allergytype, COUNT(*) FROM Allergy_type GROUP BY allergytype", "context": "CREATE TABLE Allergy_type (allergytype VARCHAR)", "question": "Show all allergy types and the number of allergies in each type.", "dummy_table": {"Allergy_type": [{"allergytype": "Peanut allergy"}, {"allergytype": "Lactose intolerance"}, {"allergytype": "Gluten allergy"}, {"allergytype": "Shellfish allergy"}, {"allergytype": "Pollen allergy"}]}}, {"answer": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Allergy_type (allergytype VARCHAR)", "question": "Which allergy type has most number of allergies?", "dummy_table": {"Allergy_type": [{"allergytype": "Peanut allergy"}, {"allergytype": "Shellfish allergy"}, {"allergytype": "Dairy allergy"}, {"allergytype": "Gluten allergy"}, {"allergytype": "Soy allergy"}]}}, {"answer": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY COUNT(*) LIMIT 1", "context": "CREATE TABLE Allergy_type (allergytype VARCHAR)", "question": "Which allergy type has least number of allergies?", "dummy_table": {"Allergy_type": [{"allergytype": "Peanut"}, {"allergytype": "Gluten"}, {"allergytype": "Dairy"}, {"allergytype": "Shellfish"}, {"allergytype": "Soy"}]}}, {"answer": "SELECT COUNT(*) FROM Student", "context": "CREATE TABLE Student (Id VARCHAR)", "question": "How many students are there?", "dummy_table": {"Student": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT Fname, Lname FROM Student", "context": "CREATE TABLE Student (Fname VARCHAR, Lname VARCHAR)", "question": "Show first name and last name for all students.", "dummy_table": {"Student": [{"Fname": "John", "Lname": "Doe"}, {"Fname": "Jane", "Lname": "Smith"}, {"Fname": "Michael", "Lname": "Johnson"}, {"Fname": "Sarah", "Lname": "Williams"}, {"Fname": "David", "Lname": "Brown"}]}}, {"answer": "SELECT COUNT(DISTINCT advisor) FROM Student", "context": "CREATE TABLE Student (advisor VARCHAR)", "question": "How many different advisors are listed?", "dummy_table": {"Student": [{"advisor": "John"}, {"advisor": "Jane"}, {"advisor": "Mike"}, {"advisor": "Sarah"}, {"advisor": "Emily"}]}}, {"answer": "SELECT DISTINCT Major FROM Student", "context": "CREATE TABLE Student (Major VARCHAR)", "question": "Show all majors.", "dummy_table": {"Student": [{"Major": "Computer Science"}, {"Major": "Biology"}, {"Major": "History"}, {"Major": "Mathematics"}, {"Major": "English"}]}}, {"answer": "SELECT DISTINCT city_code FROM Student", "context": "CREATE TABLE Student (city_code VARCHAR)", "question": "Show all cities where students live.", "dummy_table": {"Student": [{"city_code": "NYC"}, {"city_code": "LA"}, {"city_code": "CHI"}, {"city_code": "MIA"}, {"city_code": "DAL"}]}}, {"answer": "SELECT Fname, Lname, Age FROM Student WHERE Sex = 'F'", "context": "CREATE TABLE Student (Fname VARCHAR, Lname VARCHAR, Age VARCHAR, Sex VARCHAR)", "question": "Show first name, last name, age for all female students. Their sex is F.", "dummy_table": {"Student": [{"Fname": "Alice", "Lname": "Smith", "Age": "20", "Sex": "F"}, {"Fname": "Emma", "Lname": "Johnson", "Age": "22", "Sex": "F"}, {"Fname": "Olivia", "Lname": "Williams", "Age": "21", "Sex": "F"}, {"Fname": "Sophia", "Lname": "Brown", "Age": "23", "Sex": "F"}, {"Fname": "Ava", "Lname": "Jones", "Age": "24", "Sex": "F"}]}}, {"answer": "SELECT StuID FROM Student WHERE Sex = 'M'", "context": "CREATE TABLE Student (StuID VARCHAR, Sex VARCHAR)", "question": "Show student ids for all male students.", "dummy_table": {"Student": [{"StuID": "001", "Sex": "Male"}, {"StuID": "002", "Sex": "Female"}, {"StuID": "003", "Sex": "Male"}, {"StuID": "004", "Sex": "Female"}, {"StuID": "005", "Sex": "Male"}]}}, {"answer": "SELECT COUNT(*) FROM Student WHERE age = 18", "context": "CREATE TABLE Student (age VARCHAR)", "question": "How many students are age 18?", "dummy_table": {"Student": [{"age": "18"}, {"age": "20"}, {"age": "18"}, {"age": "22"}, {"age": "18"}]}}, {"answer": "SELECT StuID FROM Student WHERE age > 20", "context": "CREATE TABLE Student (StuID VARCHAR, age INTEGER)", "question": "Show all student ids who are older than 20.", "dummy_table": {"Student": [{"StuID": "001", "age": 22}, {"StuID": "002", "age": 19}, {"StuID": "003", "age": 25}, {"StuID": "004", "age": 18}, {"StuID": "005", "age": 21}]}}, {"answer": "SELECT Advisor FROM Student WHERE StuID = 1004", "context": "CREATE TABLE Student (Advisor VARCHAR, StuID VARCHAR)", "question": "Who is the advisor of student with ID 1004?", "dummy_table": {"Student": [{"Advisor": "John", "StuID": "1001"}, {"Advisor": "Alice", "StuID": "1002"}, {"Advisor": "Bob", "StuID": "1003"}, {"Advisor": "Sarah", "StuID": "1004"}, {"Advisor": "Michael", "StuID": "1005"}]}}, {"answer": "SELECT MIN(age), AVG(age), MAX(age) FROM Student", "context": "CREATE TABLE Student (age INTEGER)", "question": "Show the minimum, average, and maximum age of all students.", "dummy_table": {"Student": [{"age": 20}, {"age": 22}, {"age": 18}, {"age": 25}, {"age": 21}]}}, {"answer": "SELECT LName FROM Student WHERE age = (SELECT MIN(age) FROM Student)", "context": "CREATE TABLE Student (LName VARCHAR, age INTEGER)", "question": "What is the last name of the youngest student?", "dummy_table": {"Student": [{"LName": "Smith", "age": 20}, {"LName": "Johnson", "age": 22}, {"LName": "Williams", "age": 18}, {"LName": "Brown", "age": 19}, {"LName": "Jones", "age": 21}]}}, {"answer": "SELECT StuID FROM Student WHERE age = (SELECT MAX(age) FROM Student)", "context": "CREATE TABLE Student (StuID VARCHAR, age INTEGER)", "question": "Show the student id of the oldest student.", "dummy_table": {"Student": [{"StuID": "001", "age": 20}, {"StuID": "002", "age": 22}, {"StuID": "003", "age": 19}, {"StuID": "004", "age": 21}, {"StuID": "005", "age": 23}]}}, {"answer": "SELECT major, COUNT(*) FROM Student GROUP BY major", "context": "CREATE TABLE Student (major VARCHAR)", "question": "Show all majors and corresponding number of students.", "dummy_table": {"Student": [{"major": "Computer Science"}, {"major": "Biology"}, {"major": "History"}, {"major": "Mathematics"}, {"major": "English"}]}}, {"answer": "SELECT major FROM Student GROUP BY major ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Student (major VARCHAR)", "question": "Which major has most number of students?", "dummy_table": {"Student": [{"major": "Computer Science"}, {"major": "Engineering"}, {"major": "Business"}, {"major": "Psychology"}, {"major": "Biology"}]}}, {"answer": "SELECT age, COUNT(*) FROM Student GROUP BY age", "context": "CREATE TABLE Student (age VARCHAR)", "question": "Show all ages and corresponding number of students.", "dummy_table": {"Student": [{"age": "20"}, {"age": "22"}, {"age": "21"}, {"age": "19"}, {"age": "23"}]}}, {"answer": "SELECT AVG(age), sex FROM Student GROUP BY sex", "context": "CREATE TABLE Student (sex VARCHAR, age INTEGER)", "question": "Show the average age for male and female students.", "dummy_table": {"Student": [{"sex": "Male", "age": 20}, {"sex": "Female", "age": 22}, {"sex": "Male", "age": 19}, {"sex": "Female", "age": 21}, {"sex": "Male", "age": 18}]}}, {"answer": "SELECT city_code, COUNT(*) FROM Student GROUP BY city_code", "context": "CREATE TABLE Student (city_code VARCHAR)", "question": "Show all cities and corresponding number of students.", "dummy_table": {"Student": [{"city_code": "NYC"}, {"city_code": "LA"}, {"city_code": "CHI"}, {"city_code": "SF"}, {"city_code": "MIA"}]}}, {"answer": "SELECT advisor, COUNT(*) FROM Student GROUP BY advisor", "context": "CREATE TABLE Student (advisor VARCHAR)", "question": "Show all advisors and corresponding number of students.", "dummy_table": {"Student": [{"advisor": "John Doe"}, {"advisor": "Jane Smith"}, {"advisor": "Michael Johnson"}, {"advisor": "Emily Brown"}, {"advisor": "David Wilson"}]}}, {"answer": "SELECT advisor FROM Student GROUP BY advisor ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Student (advisor VARCHAR)", "question": "Which advisor has most number of students?", "dummy_table": {"Student": [{"advisor": "John"}, {"advisor": "Jane"}, {"advisor": "John"}, {"advisor": "Jane"}, {"advisor": "John"}]}}, {"answer": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING COUNT(*) >= 2", "context": "CREATE TABLE Has_allergy (StuID VARCHAR)", "question": "Show all student IDs who have at least two allergies.", "dummy_table": {"Has_allergy": [{"StuID": "12345"}, {"StuID": "67890"}, {"StuID": "54321"}, {"StuID": "98765"}, {"StuID": "13579"}]}}, {"answer": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Has_allergy (Allergy VARCHAR)", "question": "Which allergy has most number of students affected?", "dummy_table": {"Has_allergy": [{"Allergy": "Peanuts"}, {"Allergy": "Dairy"}, {"Allergy": "Gluten"}, {"Allergy": "Shellfish"}, {"Allergy": "Soy"}]}}, {"answer": "SELECT Allergy, COUNT(*) FROM Has_allergy GROUP BY Allergy", "context": "CREATE TABLE Has_allergy (Allergy VARCHAR)", "question": "Show all allergies with number of students affected.", "dummy_table": {"Has_allergy": [{"Allergy": "Peanuts"}, {"Allergy": "Dairy"}, {"Allergy": "Gluten"}, {"Allergy": "Shellfish"}, {"Allergy": "Soy"}]}}, {"answer": "SELECT T2.allergytype, COUNT(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype", "context": "CREATE TABLE Has_allergy (allergy VARCHAR); CREATE TABLE Allergy_type (allergytype VARCHAR, allergy VARCHAR)", "question": "Show all allergy type with number of students affected.", "dummy_table": {"Has_allergy": [{"allergy": "Peanuts"}, {"allergy": "Dairy"}, {"allergy": "Gluten"}, {"allergy": "Shellfish"}, {"allergy": "Soy"}], "Allergy_type": [{"allergytype": "Food Allergy", "allergy": "Peanuts"}, {"allergytype": "Food Allergy", "allergy": "Dairy"}, {"allergytype": "Food Allergy", "allergy": "Gluten"}, {"allergytype": "Food Allergy", "allergy": "Shellfish"}, {"allergytype": "Food Allergy", "allergy": "Soy"}]}}, {"answer": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5", "context": "CREATE TABLE invoices (billing_country VARCHAR)", "question": "A list of the top 5 countries by number of invoices. List country name and number of invoices.", "dummy_table": {"invoices": [{"billing_country": "USA"}, {"billing_country": "Canada"}, {"billing_country": "Germany"}, {"billing_country": "France"}, {"billing_country": "Australia"}]}}, {"answer": "SELECT billing_country, SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8", "context": "CREATE TABLE invoices (billing_country VARCHAR, total INTEGER)", "question": "A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.", "dummy_table": {"invoices": [{"billing_country": "USA", "total": 1000}, {"billing_country": "Canada", "total": 800}, {"billing_country": "UK", "total": 1200}, {"billing_country": "Germany", "total": 1500}, {"billing_country": "France", "total": 900}]}}, {"answer": "SELECT billing_country, AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10", "context": "CREATE TABLE invoices (billing_country VARCHAR, total INTEGER)", "question": "A list of the top 10 countries by average invoice size. List country name and average invoice size.", "dummy_table": {"invoices": [{"billing_country": "USA", "total": 100}, {"billing_country": "Canada", "total": 150}, {"billing_country": "UK", "total": 120}, {"billing_country": "Germany", "total": 200}, {"billing_country": "France", "total": 180}]}}, {"answer": "SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5", "context": "CREATE TABLE customers (first_name VARCHAR, last_name VARCHAR, id VARCHAR); CREATE TABLE invoices (customer_id VARCHAR, invoice_date VARCHAR)", "question": "Find out 5 customers who most recently purchased something. List customers' first and last name.", "dummy_table": {"customers": [{"id": "1", "first_name": "John", "last_name": "Doe"}, {"id": "2", "first_name": "Jane", "last_name": "Smith"}, {"id": "3", "first_name": "Michael", "last_name": "Johnson"}, {"id": "4", "first_name": "Emily", "last_name": "Brown"}, {"id": "5", "first_name": "David", "last_name": "Williams"}], "invoices": [{"customer_id": "1", "invoice_date": "2022-10-15"}, {"customer_id": "2", "invoice_date": "2022-10-14"}, {"customer_id": "3", "invoice_date": "2022-10-13"}, {"customer_id": "4", "invoice_date": "2022-10-12"}, {"customer_id": "5", "invoice_date": "2022-10-11"}]}}, {"answer": "SELECT title FROM albums", "context": "CREATE TABLE albums (title VARCHAR)", "question": "List every album's title.", "dummy_table": {"albums": [{"title": "Album 1"}, {"title": "Album 2"}, {"title": "Album 3"}, {"title": "Album 4"}, {"title": "Album 5"}]}}, {"answer": "SELECT title FROM albums ORDER BY title", "context": "CREATE TABLE albums (title VARCHAR)", "question": "List every album ordered by album title in ascending order.", "dummy_table": {"albums": [{"title": "Album A"}, {"title": "Album B"}, {"title": "Album C"}, {"title": "Album D"}, {"title": "Album E"}]}}, {"answer": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title", "context": "CREATE TABLE albums (title VARCHAR)", "question": "List every album whose title starts with A in alphabetical order.", "dummy_table": {"albums": [{"title": "A Head Full of Dreams"}, {"title": "Abbey Road"}, {"title": "American Idiot"}, {"title": "A Night at the Opera"}, {"title": "Achtung Baby"}]}}, {"answer": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%'", "context": "CREATE TABLE artists (id VARCHAR, name VARCHAR); CREATE TABLE albums (title VARCHAR, artist_id VARCHAR)", "question": "List the name of albums that are released by aritist whose name has 'Led'", "dummy_table": {"artists": [{"id": "1", "name": "Led Zeppelin"}, {"id": "2", "name": "The Beatles"}, {"id": "3", "name": "Led Zeppelin II"}, {"id": "4", "name": "Pink Floyd"}, {"id": "5", "name": "Led Zeppelin IV"}], "albums": [{"title": "Led Zeppelin I", "artist_id": "1"}, {"title": "Abbey Road", "artist_id": "2"}, {"title": "Led Zeppelin III", "artist_id": "1"}, {"title": "The Dark Side of the Moon", "artist_id": "4"}, {"title": "Houses of the Holy", "artist_id": "5"}]}}, {"answer": "SELECT first_name, last_name FROM employees ORDER BY birth_date DESC LIMIT 1", "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, birth_date VARCHAR)", "question": "Who is the youngest employee in the company? List employee's first and last name.", "dummy_table": {"employees": [{"first_name": "John", "last_name": "Doe", "birth_date": "1990-05-15"}, {"first_name": "Jane", "last_name": "Smith", "birth_date": "1992-08-20"}, {"first_name": "Michael", "last_name": "Johnson", "birth_date": "1995-02-10"}, {"first_name": "Emily", "last_name": "Brown", "birth_date": "1997-11-30"}, {"first_name": "David", "last_name": "Williams", "birth_date": "2000-04-25"}]}}, {"answer": "SELECT first_name, last_name FROM employees ORDER BY hire_date LIMIT 10", "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, hire_date VARCHAR)", "question": "List top 10 employee work longest in the company. List employee's first and last name.", "dummy_table": {"employees": [{"first_name": "John", "last_name": "Doe", "hire_date": "2010-05-15"}, {"first_name": "Jane", "last_name": "Smith", "hire_date": "2008-11-20"}, {"first_name": "Michael", "last_name": "Johnson", "hire_date": "2012-09-30"}, {"first_name": "Emily", "last_name": "Brown", "hire_date": "2007-03-10"}, {"first_name": "David", "last_name": "Williams", "hire_date": "2011-07-25"}]}}, {"answer": "SELECT COUNT(*), city FROM employees WHERE title = 'IT Staff' GROUP BY city", "context": "CREATE TABLE employees (city VARCHAR, title VARCHAR)", "question": "Find the number of employees whose title is IT Staff from each city?", "dummy_table": {"employees": [{"city": "New York", "title": "IT Staff"}, {"city": "Los Angeles", "title": "Manager"}, {"city": "Chicago", "title": "IT Staff"}, {"city": "Houston", "title": "IT Staff"}, {"city": "Miami", "title": "IT Staff"}]}}, {"answer": "SELECT name FROM media_types", "context": "CREATE TABLE media_types (name VARCHAR)", "question": "List all media types.", "dummy_table": {"media_types": [{"name": "Audio"}, {"name": "Video"}, {"name": "Image"}, {"name": "Text"}, {"name": "Interactive"}]}}, {"answer": "SELECT DISTINCT name FROM genres", "context": "CREATE TABLE genres (name VARCHAR)", "question": "List all different genre types.", "dummy_table": {"genres": [{"name": "Action"}, {"name": "Comedy"}, {"name": "Drama"}, {"name": "Horror"}, {"name": "Sci-Fi"}]}}, {"answer": "SELECT name FROM playlists", "context": "CREATE TABLE playlists (name VARCHAR)", "question": "List the name of all playlist.", "dummy_table": {"playlists": [{"name": "Workout Playlist"}, {"name": "Chill Playlist"}, {"name": "Party Playlist"}, {"name": "Study Playlist"}, {"name": "Road Trip Playlist"}]}}, {"answer": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING COUNT(T1.id) > 10", "context": "CREATE TABLE tracks (album_id VARCHAR); CREATE TABLE albums (title VARCHAR, id VARCHAR)", "question": "List title of albums have the number of tracks greater than 10.", "dummy_table": {"albums": [{"title": "Album 1", "id": "1"}, {"title": "Album 2", "id": "2"}, {"title": "Album 3", "id": "3"}, {"title": "Album 4", "id": "4"}, {"title": "Album 5", "id": "5"}], "tracks": [{"album_id": "1"}, {"album_id": "2"}, {"album_id": "3"}, {"album_id": "4"}, {"album_id": "5"}]}}, {"answer": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING COUNT(T1.track_id) > 100", "context": "CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR); CREATE TABLE playlists (name VARCHAR, id VARCHAR)", "question": "List the name of playlist which has number of tracks greater than 100.", "dummy_table": {"playlist_tracks": [{"playlist_id": "1", "track_id": "101"}, {"playlist_id": "2", "track_id": "102"}, {"playlist_id": "3", "track_id": "103"}, {"playlist_id": "4", "track_id": "104"}, {"playlist_id": "5", "track_id": "105"}], "playlists": [{"name": "Playlist 1", "id": "1"}, {"name": "Playlist 2", "id": "2"}, {"name": "Playlist 3", "id": "3"}, {"name": "Playlist 4", "id": "4"}, {"name": "Playlist 5", "id": "5"}]}}, {"answer": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'", "context": "CREATE TABLE playlists (id VARCHAR, name VARCHAR); CREATE TABLE playlist_tracks (track_id VARCHAR, playlist_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR)", "question": "Find the name of tracks which are in Movies playlist but not in music playlist.", "dummy_table": {"playlists": [{"id": "1", "name": "Movies"}, {"id": "2", "name": "Music"}, {"id": "3", "name": "Podcasts"}, {"id": "4", "name": "Books"}, {"id": "5", "name": "TV Shows"}], "playlist_tracks": [{"track_id": "101", "playlist_id": "1"}, {"track_id": "102", "playlist_id": "1"}, {"track_id": "103", "playlist_id": "2"}, {"track_id": "104", "playlist_id": "3"}, {"track_id": "105", "playlist_id": "4"}], "tracks": [{"name": "Interstellar", "id": "101"}, {"name": "Inception", "id": "102"}, {"name": "Bohemian Rhapsody", "id": "103"}, {"name": "Serial", "id": "104"}, {"name": "Breaking Bad", "id": "105"}]}}, {"answer": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'", "context": "CREATE TABLE playlists (id VARCHAR, name VARCHAR); CREATE TABLE playlist_tracks (track_id VARCHAR, playlist_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR)", "question": "Find the name of tracks which are in both Movies and music playlists.", "dummy_table": {"playlists": [{"id": "1", "name": "Movies"}, {"id": "2", "name": "Music"}, {"id": "3", "name": "Podcasts"}, {"id": "4", "name": "Books"}, {"id": "5", "name": "TV Shows"}], "playlist_tracks": [{"track_id": "101", "playlist_id": "1"}, {"track_id": "102", "playlist_id": "2"}, {"track_id": "103", "playlist_id": "1"}, {"track_id": "104", "playlist_id": "2"}, {"track_id": "105", "playlist_id": "3"}], "tracks": [{"name": "Track1", "id": "101"}, {"name": "Track2", "id": "102"}, {"name": "Track3", "id": "103"}, {"name": "Track4", "id": "104"}, {"name": "Track5", "id": "105"}]}}, {"answer": "SELECT COUNT(*), T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name", "context": "CREATE TABLE tracks (genre_id VARCHAR); CREATE TABLE genres (name VARCHAR, id VARCHAR)", "question": "Find number of tracks in each genre?", "dummy_table": {"tracks": [{"genre_id": "1"}, {"genre_id": "2"}, {"genre_id": "1"}, {"genre_id": "3"}, {"genre_id": "2"}], "genres": [{"name": "Rock", "id": "1"}, {"name": "Pop", "id": "2"}, {"name": "Hip Hop", "id": "3"}]}}, {"answer": "SELECT COUNT(*) FROM editor", "context": "CREATE TABLE editor (Id VARCHAR)", "question": "How many editors are there?", "dummy_table": {"editor": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT Name FROM editor ORDER BY Age", "context": "CREATE TABLE editor (Name VARCHAR, Age VARCHAR)", "question": "List the names of editors in ascending order of age.", "dummy_table": {"editor": [{"Name": "Alice", "Age": "25"}, {"Name": "Bob", "Age": "30"}, {"Name": "Charlie", "Age": "35"}, {"Name": "David", "Age": "40"}, {"Name": "Eve", "Age": "45"}]}}, {"answer": "SELECT Name, Age FROM editor", "context": "CREATE TABLE editor (Name VARCHAR, Age VARCHAR)", "question": "What are the names and ages of editors?", "dummy_table": {"editor": [{"Name": "John", "Age": "30"}, {"Name": "Alice", "Age": "25"}, {"Name": "Bob", "Age": "35"}, {"Name": "Emily", "Age": "28"}, {"Name": "Michael", "Age": "32"}]}}, {"answer": "SELECT Name FROM editor WHERE Age > 25", "context": "CREATE TABLE editor (Name VARCHAR, Age INTEGER)", "question": "List the names of editors who are older than 25.", "dummy_table": {"editor": [{"Name": "Alice", "Age": 30}, {"Name": "Bob", "Age": 28}, {"Name": "Charlie", "Age": 26}, {"Name": "David", "Age": 24}, {"Name": "Eve", "Age": 27}]}}, {"answer": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25", "context": "CREATE TABLE editor (Name VARCHAR, Age VARCHAR)", "question": "Show the names of editors of age either 24 or 25.", "dummy_table": {"editor": [{"Name": "John", "Age": "24"}, {"Name": "Alice", "Age": "25"}, {"Name": "Bob", "Age": "23"}, {"Name": "Sarah", "Age": "24"}, {"Name": "Michael", "Age": "26"}]}}, {"answer": "SELECT Name FROM editor ORDER BY Age LIMIT 1", "context": "CREATE TABLE editor (Name VARCHAR, Age VARCHAR)", "question": "What is the name of the youngest editor?", "dummy_table": {"editor": [{"Name": "John", "Age": "25"}, {"Name": "Emily", "Age": "30"}, {"Name": "Michael", "Age": "22"}, {"Name": "Sarah", "Age": "28"}, {"Name": "David", "Age": "20"}]}}, {"answer": "SELECT Age, COUNT(*) FROM editor GROUP BY Age", "context": "CREATE TABLE editor (Age VARCHAR)", "question": "What are the different ages of editors? Show each age along with the number of editors of that age.", "dummy_table": {"editor": [{"Age": "25"}, {"Age": "30"}, {"Age": "28"}, {"Age": "35"}, {"Age": "32"}]}}, {"answer": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE editor (Age VARCHAR)", "question": "Please show the most common age of editors.", "dummy_table": {"editor": [{"Age": "25"}, {"Age": "30"}, {"Age": "28"}, {"Age": "25"}, {"Age": "35"}]}}, {"answer": "SELECT DISTINCT Theme FROM journal", "context": "CREATE TABLE journal (Theme VARCHAR)", "question": "Show the distinct themes of journals.", "dummy_table": {"journal": [{"Theme": "Science"}, {"Theme": "History"}, {"Theme": "Literature"}, {"Theme": "Technology"}, {"Theme": "Art"}]}}, {"answer": "SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID", "context": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)", "question": "Show the names of editors and the theme of journals for which they serve on committees.", "dummy_table": {"journal_committee": [{"Editor_ID": "E001", "Journal_ID": "J001"}, {"Editor_ID": "E002", "Journal_ID": "J002"}, {"Editor_ID": "E003", "Journal_ID": "J003"}, {"Editor_ID": "E004", "Journal_ID": "J004"}, {"Editor_ID": "E005", "Journal_ID": "J005"}], "editor": [{"Name": "John Doe", "Editor_ID": "E001"}, {"Name": "Jane Smith", "Editor_ID": "E002"}, {"Name": "Michael Johnson", "Editor_ID": "E003"}, {"Name": "Sarah Williams", "Editor_ID": "E004"}, {"Name": "David Brown", "Editor_ID": "E005"}], "journal": [{"Theme": "Science", "Journal_ID": "J001"}, {"Theme": "Technology", "Journal_ID": "J002"}, {"Theme": "Health", "Journal_ID": "J003"}, {"Theme": "Business", "Journal_ID": "J004"}, {"Theme": "Education", "Journal_ID": "J005"}]}}, {"answer": "SELECT T2.Name, T2.age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme", "context": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, age VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)", "question": "Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme.", "dummy_table": {"journal_committee": [{"Editor_ID": "E001", "Journal_ID": "J001"}, {"Editor_ID": "E002", "Journal_ID": "J002"}, {"Editor_ID": "E003", "Journal_ID": "J003"}, {"Editor_ID": "E004", "Journal_ID": "J004"}, {"Editor_ID": "E005", "Journal_ID": "J005"}], "editor": [{"Name": "Alice", "age": "30", "Editor_ID": "E001"}, {"Name": "Bob", "age": "35", "Editor_ID": "E002"}, {"Name": "Charlie", "age": "40", "Editor_ID": "E003"}, {"Name": "David", "age": "45", "Editor_ID": "E004"}, {"Name": "Eve", "age": "50", "Editor_ID": "E005"}], "journal": [{"Theme": "Science", "Journal_ID": "J001"}, {"Theme": "Technology", "Journal_ID": "J002"}, {"Theme": "Engineering", "Journal_ID": "J003"}, {"Theme": "Mathematics", "Journal_ID": "J004"}, {"Theme": "Physics", "Journal_ID": "J005"}]}}, {"answer": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000", "context": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Journal_ID VARCHAR, Sales INTEGER)", "question": "Show the names of editors that are on the committee of journals with sales bigger than 3000.", "dummy_table": {"journal_committee": [{"Editor_ID": "E001", "Journal_ID": "J001"}, {"Editor_ID": "E002", "Journal_ID": "J002"}, {"Editor_ID": "E003", "Journal_ID": "J003"}, {"Editor_ID": "E004", "Journal_ID": "J004"}, {"Editor_ID": "E005", "Journal_ID": "J005"}], "editor": [{"Name": "John Doe", "Editor_ID": "E001"}, {"Name": "Jane Smith", "Editor_ID": "E002"}, {"Name": "Michael Johnson", "Editor_ID": "E003"}, {"Name": "Emily Brown", "Editor_ID": "E004"}, {"Name": "David Wilson", "Editor_ID": "E005"}], "journal": [{"Journal_ID": "J001", "Sales": 2500}, {"Journal_ID": "J002", "Sales": 4000}, {"Journal_ID": "J003", "Sales": 3000}, {"Journal_ID": "J004", "Sales": 5000}, {"Journal_ID": "J005", "Sales": 3500}]}}, {"answer": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*) >= 2", "context": "CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal_committee (Editor_ID VARCHAR)", "question": "Show the names of editors that are on at least two journal committees.", "dummy_table": {"editor": [{"Name": "John Doe", "Editor_ID": "E001"}, {"Name": "Jane Smith", "Editor_ID": "E002"}, {"Name": "Alice Johnson", "Editor_ID": "E003"}, {"Name": "Bob Brown", "Editor_ID": "E004"}, {"Name": "Emily Davis", "Editor_ID": "E005"}], "journal_committee": [{"Editor_ID": "E001"}, {"Editor_ID": "E002"}, {"Editor_ID": "E003"}, {"Editor_ID": "E004"}, {"Editor_ID": "E005"}]}}, {"answer": "SELECT Name FROM editor WHERE NOT editor_id IN (SELECT editor_id FROM journal_committee)", "context": "CREATE TABLE editor (Name VARCHAR, editor_id VARCHAR); CREATE TABLE journal_committee (Name VARCHAR, editor_id VARCHAR)", "question": "List the names of editors that are not on any journal committee.", "dummy_table": {"editor": [{"Name": "John Doe", "editor_id": "E001"}, {"Name": "Jane Smith", "editor_id": "E002"}, {"Name": "Michael Johnson", "editor_id": "E003"}, {"Name": "Emily Davis", "editor_id": "E004"}, {"Name": "David Brown", "editor_id": "E005"}], "journal_committee": [{"Name": "Alice Wilson", "editor_id": "E006"}, {"Name": "Robert Lee", "editor_id": "E007"}, {"Name": "Sarah Moore", "editor_id": "E008"}, {"Name": "Daniel Taylor", "editor_id": "E009"}, {"Name": "Olivia Anderson", "editor_id": "E010"}]}}, {"answer": "SELECT date, theme, sales FROM journal EXCEPT SELECT T1.date, T1.theme, T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID", "context": "CREATE TABLE journal_committee (journal_ID VARCHAR); CREATE TABLE journal (date VARCHAR, theme VARCHAR, sales VARCHAR); CREATE TABLE journal (date VARCHAR, theme VARCHAR, sales VARCHAR, journal_ID VARCHAR)", "question": "List the date, theme and sales of the journal which did not have any of the listed editors serving on committee.", "dummy_table": {"journal_committee": [{"journal_ID": "12345"}, {"journal_ID": "67890"}, {"journal_ID": "54321"}, {"journal_ID": "98765"}, {"journal_ID": "13579"}], "journal": [{"date": "2022-01-01", "theme": "Technology", "sales": "$1000", "journal_ID": "54321"}, {"date": "2022-02-01", "theme": "Science", "sales": "$1500", "journal_ID": "98765"}, {"date": "2022-03-01", "theme": "Health", "sales": "$1200", "journal_ID": "24680"}, {"date": "2022-04-01", "theme": "Business", "sales": "$2000", "journal_ID": "97531"}, {"date": "2022-05-01", "theme": "Environment", "sales": "$1800", "journal_ID": "24680"}]}}, {"answer": "SELECT AVG(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'", "context": "CREATE TABLE journal_committee (journal_ID VARCHAR, work_type VARCHAR); CREATE TABLE journal (sales INTEGER, journal_ID VARCHAR)", "question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?", "dummy_table": {"journal_committee": [{"journal_ID": "J123", "work_type": "Photo"}, {"journal_ID": "J456", "work_type": "Article"}, {"journal_ID": "J789", "work_type": "Photo"}, {"journal_ID": "J101", "work_type": "Photo"}, {"journal_ID": "J112", "work_type": "Review"}], "journal": [{"sales": 100, "journal_ID": "J123"}, {"sales": 200, "journal_ID": "J456"}, {"sales": 150, "journal_ID": "J789"}, {"sales": 300, "journal_ID": "J101"}, {"sales": 250, "journal_ID": "J112"}]}}, {"answer": "SELECT COUNT(*) FROM Accounts", "context": "CREATE TABLE Accounts (Id VARCHAR)", "question": "How many accounts do we have?", "dummy_table": {"Accounts": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT account_id, customer_id, account_name FROM Accounts", "context": "CREATE TABLE Accounts (account_id VARCHAR, customer_id VARCHAR, account_name VARCHAR)", "question": "Show ids, customer ids, names for all accounts.", "dummy_table": {"Accounts": [{"account_id": "1", "customer_id": "101", "account_name": "Savings"}, {"account_id": "2", "customer_id": "102", "account_name": "Checking"}, {"account_id": "3", "customer_id": "103", "account_name": "Investment"}, {"account_id": "4", "customer_id": "104", "account_name": "Credit Card"}, {"account_id": "5", "customer_id": "105", "account_name": "Loan"}]}}, {"answer": "SELECT customer_id, COUNT(*) FROM Accounts GROUP BY customer_id", "context": "CREATE TABLE Accounts (customer_id VARCHAR)", "question": "Show all customer ids and the number of accounts for each customer.", "dummy_table": {"Accounts": [{"customer_id": "12345"}, {"customer_id": "67890"}, {"customer_id": "54321"}, {"customer_id": "98765"}, {"customer_id": "24680"}]}}, {"answer": "SELECT customer_id, COUNT(*) FROM Accounts GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Accounts (customer_id VARCHAR)", "question": "Show the customer id and number of accounts with most accounts.", "dummy_table": {"Accounts": [{"customer_id": "12345"}, {"customer_id": "67890"}, {"customer_id": "54321"}, {"customer_id": "98765"}, {"customer_id": "24680"}]}}, {"answer": "SELECT COUNT(*) FROM Customers WHERE NOT customer_id IN (SELECT customer_id FROM Accounts)", "context": "CREATE TABLE Customers (customer_id VARCHAR); CREATE TABLE Accounts (customer_id VARCHAR)", "question": "Show the number of all customers without an account.", "dummy_table": {"Customers": [{"customer_id": "C001"}, {"customer_id": "C002"}, {"customer_id": "C003"}, {"customer_id": "C004"}, {"customer_id": "C005"}], "Accounts": []}}, {"answer": "SELECT customer_first_name, customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name, T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "context": "CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR)", "question": "Show the first names and last names of customers without any account.", "dummy_table": {"Accounts": [{"customer_id": "12345"}, {"customer_id": "67890"}], "Customers": [{"customer_first_name": "Alice", "customer_last_name": "Smith", "customer_id": "54321"}, {"customer_first_name": "Bob", "customer_last_name": "Johnson", "customer_id": "09876"}, {"customer_first_name": "Eve", "customer_last_name": "Brown", "customer_id": "24680"}]}}, {"answer": "SELECT DISTINCT T1.customer_first_name, T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id", "context": "CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)", "question": "Show distinct first and last names for all customers with an account.", "dummy_table": {"Accounts": [{"customer_id": "12345"}, {"customer_id": "67890"}, {"customer_id": "54321"}, {"customer_id": "09876"}, {"customer_id": "13579"}], "Customers": [{"customer_first_name": "John", "customer_last_name": "Doe", "customer_id": "12345"}, {"customer_first_name": "Jane", "customer_last_name": "Smith", "customer_id": "67890"}, {"customer_first_name": "Michael", "customer_last_name": "Johnson", "customer_id": "54321"}, {"customer_first_name": "Sarah", "customer_last_name": "Williams", "customer_id": "09876"}, {"customer_first_name": "David", "customer_last_name": "Brown", "customer_id": "13579"}]}}, {"answer": "SELECT COUNT(DISTINCT customer_id) FROM Accounts", "context": "CREATE TABLE Accounts (customer_id VARCHAR)", "question": "How many customers have an account?", "dummy_table": {"Accounts": [{"customer_id": "C001"}, {"customer_id": "C002"}, {"customer_id": "C003"}, {"customer_id": "C004"}, {"customer_id": "C005"}]}}, {"answer": "SELECT COUNT(*) FROM Customers", "context": "CREATE TABLE Customers (Id VARCHAR)", "question": "How many customers do we have?", "dummy_table": {"Customers": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT customer_id, customer_first_name, customer_last_name, customer_phone FROM Customers", "context": "CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR, customer_last_name VARCHAR, customer_phone VARCHAR)", "question": "Show ids, first names, last names, and phones for all customers.", "dummy_table": {"Customers": [{"customer_id": "1", "customer_first_name": "John", "customer_last_name": "Doe", "customer_phone": "555-1234"}, {"customer_id": "2", "customer_first_name": "Jane", "customer_last_name": "Smith", "customer_phone": "555-5678"}, {"customer_id": "3", "customer_first_name": "Michael", "customer_last_name": "Johnson", "customer_phone": "555-9012"}, {"customer_id": "4", "customer_first_name": "Emily", "customer_last_name": "Brown", "customer_phone": "555-3456"}, {"customer_id": "5", "customer_first_name": "David", "customer_last_name": "Wilson", "customer_phone": "555-7890"}]}}, {"answer": "SELECT COUNT(*) FROM Customers_cards", "context": "CREATE TABLE Customers_cards (Id VARCHAR)", "question": "Show the number of customer cards.", "dummy_table": {"Customers_cards": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT card_id, customer_id, card_type_code, card_number FROM Customers_cards", "context": "CREATE TABLE Customers_cards (card_id VARCHAR, customer_id VARCHAR, card_type_code VARCHAR, card_number VARCHAR)", "question": "Show ids, customer ids, card type codes, card numbers for all cards.", "dummy_table": {"Customers_cards": [{"card_id": "1", "customer_id": "1001", "card_type_code": "VISA", "card_number": "1234 5678 9012 3456"}, {"card_id": "2", "customer_id": "1002", "card_type_code": "MasterCard", "card_number": "9876 5432 1098 7654"}, {"card_id": "3", "customer_id": "1003", "card_type_code": "American Express", "card_number": "2468 1357 8024 6913"}, {"card_id": "4", "customer_id": "1004", "card_type_code": "Discover", "card_number": "5555 4444 3333 2222"}, {"card_id": "5", "customer_id": "1005", "card_type_code": "Diners Club", "card_number": "7777 8888 9999 0000"}]}}, {"answer": "SELECT customer_id, COUNT(*) FROM Customers_cards GROUP BY customer_id", "context": "CREATE TABLE Customers_cards (customer_id VARCHAR)", "question": "Show all customer ids and the number of cards owned by each customer.", "dummy_table": {"Customers_cards": [{"customer_id": "C001"}, {"customer_id": "C002"}, {"customer_id": "C003"}, {"customer_id": "C004"}, {"customer_id": "C005"}]}}, {"answer": "SELECT customer_id, COUNT(*) FROM Customers_cards GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Customers_cards (customer_id VARCHAR)", "question": "What is the customer id with most number of cards, and how many does he have?", "dummy_table": {"Customers_cards": [{"customer_id": "12345"}, {"customer_id": "67890"}, {"customer_id": "54321"}, {"customer_id": "98765"}, {"customer_id": "24680"}]}}, {"answer": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(*) >= 2", "context": "CREATE TABLE Customers_cards (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)", "question": "Show id, first and last names for all customers with at least two cards.", "dummy_table": {"Customers_cards": [{"customer_id": "12345"}, {"customer_id": "67890"}, {"customer_id": "54321"}], "Customers": [{"customer_first_name": "John", "customer_last_name": "Doe", "customer_id": "12345"}, {"customer_first_name": "Jane", "customer_last_name": "Smith", "customer_id": "67890"}, {"customer_first_name": "Alice", "customer_last_name": "Johnson", "customer_id": "54321"}]}}, {"answer": "SELECT card_type_code, COUNT(*) FROM Customers_cards GROUP BY card_type_code", "context": "CREATE TABLE Customers_cards (card_type_code VARCHAR)", "question": "Show all card type codes and the number of cards in each type.", "dummy_table": {"Customers_cards": [{"card_type_code": "VISA"}, {"card_type_code": "MasterCard"}, {"card_type_code": "American Express"}, {"card_type_code": "Discover"}, {"card_type_code": "Diners Club"}]}}, {"answer": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE Customers_cards (card_type_code VARCHAR)", "question": "What is the card type code with most number of cards?", "dummy_table": {"Customers_cards": [{"card_type_code": "VISA"}, {"card_type_code": "MASTERCARD"}, {"card_type_code": "AMEX"}, {"card_type_code": "DISCOVER"}, {"card_type_code": "VISA"}]}}, {"answer": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING COUNT(*) >= 5", "context": "CREATE TABLE Customers_cards (card_type_code VARCHAR)", "question": "Show card type codes with at least 5 cards.", "dummy_table": {"Customers_cards": [{"card_type_code": "A"}, {"card_type_code": "B"}, {"card_type_code": "C"}, {"card_type_code": "D"}, {"card_type_code": "E"}]}}, {"answer": "SELECT card_type_code, COUNT(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code", "context": "CREATE TABLE Customers_cards (card_type_code VARCHAR, customer_id VARCHAR)", "question": "Show all card type codes and the number of customers holding cards in each type.", "dummy_table": {"Customers_cards": [{"card_type_code": "VISA", "customer_id": "12345"}, {"card_type_code": "MasterCard", "customer_id": "54321"}, {"card_type_code": "American Express", "customer_id": "98765"}, {"card_type_code": "Discover", "customer_id": "67890"}, {"card_type_code": "VISA", "customer_id": "13579"}]}}, {"answer": "SELECT DISTINCT card_type_code FROM Customers_Cards", "context": "CREATE TABLE Customers_Cards (card_type_code VARCHAR)", "question": "Show all card type codes.", "dummy_table": {"Customers_Cards": [{"card_type_code": "VISA"}, {"card_type_code": "MasterCard"}, {"card_type_code": "American Express"}, {"card_type_code": "Discover"}, {"card_type_code": "Diners Club"}]}}, {"answer": "SELECT COUNT(DISTINCT card_type_code) FROM Customers_Cards", "context": "CREATE TABLE Customers_Cards (card_type_code VARCHAR)", "question": "Show the number of card types.", "dummy_table": {"Customers_Cards": [{"card_type_code": "Type1"}, {"card_type_code": "Type2"}, {"card_type_code": "Type3"}, {"card_type_code": "Type4"}, {"card_type_code": "Type5"}]}}, {"answer": "SELECT DISTINCT transaction_type FROM Financial_Transactions", "context": "CREATE TABLE Financial_Transactions (transaction_type VARCHAR)", "question": "Show all transaction types.", "dummy_table": {"Financial_Transactions": [{"transaction_type": "Deposit"}, {"transaction_type": "Withdrawal"}, {"transaction_type": "Transfer"}, {"transaction_type": "Payment"}, {"transaction_type": "Refund"}]}}, {"answer": "SELECT COUNT(DISTINCT transaction_type) FROM Financial_Transactions", "context": "CREATE TABLE Financial_Transactions (transaction_type VARCHAR)", "question": "Show the number of transaction types.", "dummy_table": {"Financial_Transactions": [{"transaction_type": "Deposit"}, {"transaction_type": "Withdrawal"}, {"transaction_type": "Transfer"}, {"transaction_type": "Payment"}, {"transaction_type": "Refund"}]}}, {"answer": "SELECT AVG(transaction_amount), SUM(transaction_amount) FROM Financial_transactions", "context": "CREATE TABLE Financial_transactions (transaction_amount INTEGER)", "question": "What is the average and total transaction amount?", "dummy_table": {"Financial_transactions": [{"transaction_amount": 100}, {"transaction_amount": 200}, {"transaction_amount": 150}, {"transaction_amount": 300}, {"transaction_amount": 250}]}}, {"answer": "SELECT T2.card_type_code, COUNT(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code", "context": "CREATE TABLE Financial_transactions (card_id VARCHAR); CREATE TABLE Customers_cards (card_type_code VARCHAR, card_id VARCHAR)", "question": "Show the card type codes and the number of transactions.", "dummy_table": {"Financial_transactions": [{"card_id": "12345"}, {"card_id": "67890"}, {"card_id": "54321"}, {"card_id": "09876"}, {"card_id": "24680"}], "Customers_cards": [{"card_type_code": "A", "card_id": "12345"}, {"card_type_code": "B", "card_id": "67890"}, {"card_type_code": "C", "card_id": "54321"}, {"card_type_code": "D", "card_id": "09876"}, {"card_type_code": "E", "card_id": "24680"}]}}, {"answer": "SELECT transaction_type, COUNT(*) FROM Financial_transactions GROUP BY transaction_type", "context": "CREATE TABLE Financial_transactions (transaction_type VARCHAR)", "question": "Show the transaction type and the number of transactions.", "dummy_table": {"Financial_transactions": [{"transaction_type": "Deposit"}, {"transaction_type": "Withdrawal"}, {"transaction_type": "Transfer"}, {"transaction_type": "Payment"}, {"transaction_type": "Refund"}]}}, {"answer": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY SUM(transaction_amount) DESC LIMIT 1", "context": "CREATE TABLE Financial_transactions (transaction_type VARCHAR, transaction_amount INTEGER)", "question": "What is the transaction type that has processed the greatest total amount in transactions?", "dummy_table": {"Financial_transactions": [{"transaction_type": "Deposit", "transaction_amount": 1000}, {"transaction_type": "Withdrawal", "transaction_amount": -500}, {"transaction_type": "Deposit", "transaction_amount": 1500}, {"transaction_type": "Transfer", "transaction_amount": -800}, {"transaction_type": "Withdrawal", "transaction_amount": -300}]}}, {"answer": "SELECT account_id, COUNT(*) FROM Financial_transactions GROUP BY account_id", "context": "CREATE TABLE Financial_transactions (account_id VARCHAR)", "question": "Show the account id and the number of transactions for each account", "dummy_table": {"Financial_transactions": [{"account_id": "12345"}, {"account_id": "67890"}, {"account_id": "54321"}, {"account_id": "98765"}, {"account_id": "24680"}]}}, {"answer": "SELECT COUNT(*) FROM track", "context": "CREATE TABLE track (Id VARCHAR)", "question": "How many tracks do we have?", "dummy_table": {"track": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT name, LOCATION FROM track", "context": "CREATE TABLE track (name VARCHAR, LOCATION VARCHAR)", "question": "Show the name and location for all tracks.", "dummy_table": {"track": [{"name": "Track 1", "LOCATION": "Location 1"}, {"name": "Track 2", "LOCATION": "Location 2"}, {"name": "Track 3", "LOCATION": "Location 3"}, {"name": "Track 4", "LOCATION": "Location 4"}, {"name": "Track 5", "LOCATION": "Location 5"}]}}, {"answer": "SELECT name, seating FROM track WHERE year_opened > 2000 ORDER BY seating", "context": "CREATE TABLE track (name VARCHAR, seating VARCHAR, year_opened INTEGER)", "question": "Show names and seatings, ordered by seating for all tracks opened after 2000.", "dummy_table": {"track": [{"name": "Speedy Coaster", "seating": "100", "year_opened": 2005}, {"name": "Twist and Turn", "seating": "150", "year_opened": 2008}, {"name": "Loop de Loop", "seating": "200", "year_opened": 2010}, {"name": "Wild Ride", "seating": "250", "year_opened": 2012}, {"name": "Thunderbolt", "seating": "300", "year_opened": 2015}]}}, {"answer": "SELECT name, LOCATION, seating FROM track ORDER BY year_opened DESC LIMIT 1", "context": "CREATE TABLE track (name VARCHAR, LOCATION VARCHAR, seating VARCHAR, year_opened VARCHAR)", "question": "What is the name, location and seating for the most recently opened track?", "dummy_table": {"track": [{"name": "Speedy Circuit", "LOCATION": "City A", "seating": "5000", "year_opened": "2020"}, {"name": "Thunder Raceway", "LOCATION": "Town B", "seating": "7000", "year_opened": "2019"}, {"name": "Rapid Speedway", "LOCATION": "Village C", "seating": "6000", "year_opened": "2018"}, {"name": "Velocity Oval", "LOCATION": "City D", "seating": "8000", "year_opened": "2017"}, {"name": "Turbo Track", "LOCATION": "Town E", "seating": "5500", "year_opened": "2016"}]}}, {"answer": "SELECT MIN(seating), MAX(seating), AVG(seating) FROM track", "context": "CREATE TABLE track (seating INTEGER)", "question": "What is the minimum, maximum, and average seating for all tracks.", "dummy_table": {"track": [{"seating": 100}, {"seating": 150}, {"seating": 120}, {"seating": 80}, {"seating": 200}]}}, {"answer": "SELECT name, LOCATION, year_opened FROM track WHERE seating > (SELECT AVG(seating) FROM track)", "context": "CREATE TABLE track (name VARCHAR, LOCATION VARCHAR, year_opened VARCHAR, seating INTEGER)", "question": "Show the name, location, open year for all tracks with a seating higher than the average.", "dummy_table": {"track": [{"name": "Stadium A", "LOCATION": "City A", "year_opened": "2000", "seating": 15000}, {"name": "Arena B", "LOCATION": "City B", "year_opened": "1995", "seating": 20000}, {"name": "Field C", "LOCATION": "City C", "year_opened": "2010", "seating": 18000}, {"name": "Dome D", "LOCATION": "City D", "year_opened": "2005", "seating": 22000}, {"name": "Park E", "LOCATION": "City E", "year_opened": "1990", "seating": 25000}]}}, {"answer": "SELECT DISTINCT LOCATION FROM track", "context": "CREATE TABLE track (LOCATION VARCHAR)", "question": "What are distinct locations where tracks are located?", "dummy_table": {"track": [{"LOCATION": "New York"}, {"LOCATION": "Los Angeles"}, {"LOCATION": "Chicago"}, {"LOCATION": "Miami"}, {"LOCATION": "San Francisco"}]}}, {"answer": "SELECT COUNT(*) FROM race", "context": "CREATE TABLE race (Id VARCHAR)", "question": "How many races are there?", "dummy_table": {"race": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT DISTINCT CLASS FROM race", "context": "CREATE TABLE race (CLASS VARCHAR)", "question": "What are the distinct classes that races can have?", "dummy_table": {"race": [{"CLASS": "Warrior"}, {"CLASS": "Mage"}, {"CLASS": "Rogue"}, {"CLASS": "Cleric"}, {"CLASS": "Archer"}]}}, {"answer": "SELECT name, CLASS, date FROM race", "context": "CREATE TABLE race (name VARCHAR, CLASS VARCHAR, date VARCHAR)", "question": "Show name, class, and date for all races.", "dummy_table": {"race": [{"name": "Race1", "CLASS": "Warrior", "date": "2022-01-15"}, {"name": "Race2", "CLASS": "Mage", "date": "2022-02-20"}, {"name": "Race3", "CLASS": "Rogue", "date": "2022-03-25"}, {"name": "Race4", "CLASS": "Paladin", "date": "2022-04-30"}, {"name": "Race5", "CLASS": "Druid", "date": "2022-05-05"}]}}, {"answer": "SELECT CLASS, COUNT(*) FROM race GROUP BY CLASS", "context": "CREATE TABLE race (CLASS VARCHAR)", "question": "Show the race class and number of races in each class.", "dummy_table": {"race": [{"CLASS": "Warrior"}, {"CLASS": "Mage"}, {"CLASS": "Rogue"}, {"CLASS": "Cleric"}, {"CLASS": "Paladin"}]}}, {"answer": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE race (CLASS VARCHAR)", "question": "What is the race class with most number of races.", "dummy_table": {"race": [{"CLASS": "Human"}, {"CLASS": "Elf"}, {"CLASS": "Dwarf"}, {"CLASS": "Orc"}, {"CLASS": "Gnome"}]}}, {"answer": "SELECT CLASS FROM race GROUP BY CLASS HAVING COUNT(*) >= 2", "context": "CREATE TABLE race (CLASS VARCHAR)", "question": "List the race class with at least two races.", "dummy_table": {"Race": [{"CLASS": "Human"}, {"CLASS": "Elf"}, {"CLASS": "Dwarf"}, {"CLASS": "Orc"}, {"CLASS": "Gnome"}]}}, {"answer": "SELECT name FROM track WHERE NOT track_id IN (SELECT track_id FROM race)", "context": "CREATE TABLE track (name VARCHAR, track_id VARCHAR); CREATE TABLE race (name VARCHAR, track_id VARCHAR)", "question": "Show all track names that have had no races.", "dummy_table": {"track": [{"name": "Track A", "track_id": "1"}, {"name": "Track B", "track_id": "2"}, {"name": "Track C", "track_id": "3"}, {"name": "Track D", "track_id": "4"}, {"name": "Track E", "track_id": "5"}], "race": []}}, {"answer": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000", "context": "CREATE TABLE track (year_opened VARCHAR, seating INTEGER)", "question": "Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened.", "dummy_table": {"track": [{"year_opened": "2005", "seating": 6000}, {"year_opened": "2010", "seating": 4500}, {"year_opened": "2008", "seating": 5000}, {"year_opened": "2012", "seating": 3500}, {"year_opened": "2006", "seating": 4800}]}}, {"answer": "SELECT T2.name, COUNT(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id", "context": "CREATE TABLE track (name VARCHAR, track_id VARCHAR); CREATE TABLE race (track_id VARCHAR)", "question": "Show the name of track and the number of races in each track.", "dummy_table": {"track": [{"name": "Track A", "track_id": "1"}, {"name": "Track B", "track_id": "2"}, {"name": "Track C", "track_id": "3"}, {"name": "Track D", "track_id": "4"}, {"name": "Track E", "track_id": "5"}], "race": []}}, {"answer": "SELECT T1.name, T1.date, T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id", "context": "CREATE TABLE race (name VARCHAR, date VARCHAR, track_id VARCHAR); CREATE TABLE track (name VARCHAR, track_id VARCHAR)", "question": "Show the name and date for each race and its track name.", "dummy_table": {"race": [{"name": "Race 1", "date": "2022-01-15", "track_id": "001"}, {"name": "Race 2", "date": "2022-02-20", "track_id": "002"}, {"name": "Race 3", "date": "2022-03-25", "track_id": "003"}, {"name": "Race 4", "date": "2022-04-30", "track_id": "004"}, {"name": "Race 5", "date": "2022-05-05", "track_id": "005"}], "track": [{"name": "Track 1", "track_id": "001"}, {"name": "Track 2", "track_id": "002"}, {"name": "Track 3", "track_id": "003"}, {"name": "Track 4", "track_id": "004"}, {"name": "Track 5", "track_id": "005"}]}}, {"answer": "SELECT LOCATION FROM track WHERE seating > 90000 INTERSECT SELECT LOCATION FROM track WHERE seating < 70000", "context": "CREATE TABLE track (LOCATION VARCHAR, seating INTEGER)", "question": "Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.", "dummy_table": {"track": [{"LOCATION": "New York", "seating": 100000}, {"LOCATION": "Los Angeles", "seating": 80000}, {"LOCATION": "Chicago", "seating": 95000}, {"LOCATION": "Houston", "seating": 65000}, {"LOCATION": "Miami", "seating": 105000}]}}, {"answer": "SELECT COUNT(*) FROM member WHERE Membership_card = 'Black'", "context": "CREATE TABLE member (Membership_card VARCHAR)", "question": "How many members have the black membership card?", "dummy_table": {"member": [{"Membership_card": "black"}, {"Membership_card": "black"}, {"Membership_card": "black"}, {"Membership_card": "black"}, {"Membership_card": "black"}]}}, {"answer": "SELECT COUNT(*), address FROM member GROUP BY address", "context": "CREATE TABLE member (address VARCHAR)", "question": "Find the number of members living in each address.", "dummy_table": {"member": [{"address": "123 Main St"}, {"address": "456 Elm St"}, {"address": "789 Oak St"}, {"address": "321 Pine St"}, {"address": "654 Maple St"}]}}, {"answer": "SELECT name FROM member WHERE address = 'Harford' OR address = 'Waterbury'", "context": "CREATE TABLE member (name VARCHAR, address VARCHAR)", "question": "Give me the names of members whose address is in Harford or Waterbury.", "dummy_table": {"member": [{"name": "Alice", "address": "Harford"}, {"name": "Bob", "address": "Waterbury"}, {"name": "Charlie", "address": "New Haven"}, {"name": "David", "address": "Harford"}, {"name": "Eve", "address": "Waterbury"}]}}, {"answer": "SELECT Time_of_purchase, age, address FROM member ORDER BY Time_of_purchase", "context": "CREATE TABLE member (Time_of_purchase VARCHAR, age VARCHAR, address VARCHAR)", "question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "dummy_table": {"member": [{"Time_of_purchase": "2022-01-15 08:30:00", "age": "25", "address": "123 Main St"}, {"Time_of_purchase": "2022-01-16 12:45:00", "age": "30", "address": "456 Elm St"}, {"Time_of_purchase": "2022-01-17 15:20:00", "age": "40", "address": "789 Oak St"}, {"Time_of_purchase": "2022-01-18 10:10:00", "age": "35", "address": "321 Pine St"}, {"Time_of_purchase": "2022-01-19 09:00:00", "age": "28", "address": "654 Maple St"}]}}, {"answer": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING COUNT(*) > 5", "context": "CREATE TABLE member (Membership_card VARCHAR)", "question": "Which membership card has more than 5 members?", "dummy_table": {"member": [{"Membership_card": "A12345"}, {"Membership_card": "B67890"}, {"Membership_card": "C24680"}, {"Membership_card": "D13579"}, {"Membership_card": "E97531"}]}}, {"answer": "SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40", "context": "CREATE TABLE member (address VARCHAR, age INTEGER)", "question": "Which address has both members younger than 30 and members older than 40?", "dummy_table": {"member": [{"address": "123 Main St", "age": 25}, {"address": "456 Elm St", "age": 35}, {"address": "789 Oak St", "age": 45}, {"address": "101 Pine St", "age": 20}, {"address": "202 Maple St", "age": 50}]}}, {"answer": "SELECT membership_card FROM member WHERE address = 'Hartford' INTERSECT SELECT membership_card FROM member WHERE address = 'Waterbury'", "context": "CREATE TABLE member (membership_card VARCHAR, address VARCHAR)", "question": "What is the membership card held by both members living in Hartford and ones living in Waterbury address?", "dummy_table": {"member": [{"membership_card": "12345", "address": "Hartford"}, {"membership_card": "67890", "address": "Waterbury"}, {"membership_card": "54321", "address": "Hartford"}, {"membership_card": "09876", "address": "Waterbury"}, {"membership_card": "13579", "address": "Hartford"}]}}, {"answer": "SELECT COUNT(*) FROM member WHERE address <> 'Hartford'", "context": "CREATE TABLE member (address VARCHAR)", "question": "How many members are not living in Hartford?", "dummy_table": {"member": [{"address": "123 Main St, Hartford"}, {"address": "456 Elm St, Hartford"}, {"address": "789 Oak St, New York"}, {"address": "101 Pine St, Boston"}, {"address": "202 Maple St, Hartford"}]}}, {"answer": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card = 'Black'", "context": "CREATE TABLE member (address VARCHAR, Membership_card VARCHAR)", "question": "Which address do not have any member with the black membership card?", "dummy_table": {"member": [{"address": "123 Main St", "Membership_card": "Gold"}, {"address": "456 Elm St", "Membership_card": "Black"}, {"address": "789 Oak St", "Membership_card": "Silver"}, {"address": "101 Pine St", "Membership_card": "Black"}, {"address": "202 Maple St", "Membership_card": "Platinum"}]}}, {"answer": "SELECT address FROM shop ORDER BY open_year", "context": "CREATE TABLE shop (address VARCHAR, open_year VARCHAR)", "question": "Show the shop addresses ordered by their opening year.", "dummy_table": {"shop": [{"address": "123 Main St", "open_year": "2005"}, {"address": "456 Elm St", "open_year": "2010"}, {"address": "789 Oak St", "open_year": "2012"}, {"address": "321 Pine St", "open_year": "2015"}, {"address": "654 Maple St", "open_year": "2020"}]}}, {"answer": "SELECT AVG(num_of_staff), AVG(score) FROM shop", "context": "CREATE TABLE shop (num_of_staff INTEGER, score INTEGER)", "question": "What are the average score and average staff number of all shops?", "dummy_table": {"shop": [{"num_of_staff": 10, "score": 85}, {"num_of_staff": 8, "score": 78}, {"num_of_staff": 12, "score": 92}, {"num_of_staff": 6, "score": 70}, {"num_of_staff": 9, "score": 83}]}}, {"answer": "SELECT shop_id, address FROM shop WHERE score < (SELECT AVG(score) FROM shop)", "context": "CREATE TABLE shop (shop_id VARCHAR, address VARCHAR, score INTEGER)", "question": "Find the id and address of the shops whose score is below the average score.", "dummy_table": {"shop": [{"shop_id": "001", "address": "123 Main St", "score": 4}, {"shop_id": "002", "address": "456 Elm St", "score": 3}, {"shop_id": "003", "address": "789 Oak St", "score": 5}, {"shop_id": "004", "address": "101 Pine St", "score": 2}, {"shop_id": "005", "address": "202 Maple St", "score": 4}]}}, {"answer": "SELECT address, num_of_staff FROM shop WHERE NOT shop_id IN (SELECT shop_id FROM happy_hour)", "context": "CREATE TABLE shop (address VARCHAR, num_of_staff VARCHAR, shop_id VARCHAR); CREATE TABLE happy_hour (address VARCHAR, num_of_staff VARCHAR, shop_id VARCHAR)", "question": "Find the address and staff number of the shops that do not have any happy hour.", "dummy_table": {"shop": [{"address": "123 Main St", "num_of_staff": "10", "shop_id": "1"}, {"address": "456 Elm St", "num_of_staff": "8", "shop_id": "2"}, {"address": "789 Oak St", "num_of_staff": "12", "shop_id": "3"}, {"address": "101 Pine St", "num_of_staff": "6", "shop_id": "4"}, {"address": "202 Maple St", "num_of_staff": "9", "shop_id": "5"}], "happy_hour": []}}, {"answer": "SELECT shop_id, COUNT(*) FROM happy_hour GROUP BY shop_id ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE happy_hour (shop_id VARCHAR)", "question": "which shop has happy hour most frequently? List its id and number of happy hours.", "dummy_table": {"happy_hour": [{"shop_id": "123"}, {"shop_id": "456"}, {"shop_id": "789"}, {"shop_id": "101"}, {"shop_id": "202"}]}}, {"answer": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE happy_hour (MONTH VARCHAR)", "question": "Which month has the most happy hours?", "dummy_table": {"happy_hour": [{"MONTH": "January"}, {"MONTH": "February"}, {"MONTH": "March"}, {"MONTH": "April"}, {"MONTH": "May"}]}}, {"answer": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING COUNT(*) > 2", "context": "CREATE TABLE happy_hour (MONTH VARCHAR)", "question": "Which months have more than 2 happy hours?", "dummy_table": {"happy_hour": [{"MONTH": "January"}, {"MONTH": "February"}, {"MONTH": "March"}, {"MONTH": "April"}, {"MONTH": "May"}]}}, {"answer": "SELECT COUNT(*) FROM ALBUM", "context": "CREATE TABLE ALBUM (Id VARCHAR)", "question": "How many albums are there?", "dummy_table": {"Album": [{"Id": "1"}, {"Id": "2"}, {"Id": "3"}, {"Id": "4"}, {"Id": "5"}]}}, {"answer": "SELECT Name FROM GENRE", "context": "CREATE TABLE GENRE (Name VARCHAR)", "question": "List the names of all music genres.", "dummy_table": {"Genre": [{"Name": "Rock"}, {"Name": "Pop"}, {"Name": "Hip Hop"}, {"Name": "Country"}, {"Name": "Electronic"}]}}, {"answer": "SELECT DISTINCT (BillingCountry) FROM INVOICE", "context": "CREATE TABLE INVOICE (BillingCountry VARCHAR)", "question": "What are the distinct billing countries of the invoices?", "dummy_table": {"Invoice": [{"BillingCountry": "USA"}, {"BillingCountry": "Canada"}, {"BillingCountry": "Germany"}, {"BillingCountry": "France"}, {"BillingCountry": "Australia"}]}}, {"answer": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE ALBUM (ArtistId VARCHAR); CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)", "question": "Which artist has the most albums?", "dummy_table": {"Album": [{"ArtistId": "1"}, {"ArtistId": "2"}, {"ArtistId": "3"}, {"ArtistId": "1"}, {"ArtistId": "2"}], "Artist": [{"Name": "John Doe", "ArtistId": "1"}, {"Name": "Jane Smith", "ArtistId": "2"}, {"Name": "Michael Johnson", "ArtistId": "3"}, {"Name": "John Doe", "ArtistId": "1"}, {"Name": "Jane Smith", "ArtistId": "2"}]}}, {"answer": "SELECT AVG(UnitPrice) FROM TRACK", "context": "CREATE TABLE TRACK (UnitPrice INTEGER)", "question": "What is the average unit price of all the tracks?", "dummy_table": {"TRACK": [{"UnitPrice": 1}, {"UnitPrice": 2}, {"UnitPrice": 3}, {"UnitPrice": 4}, {"UnitPrice": 5}]}}, {"answer": "SELECT MAX(Milliseconds), MIN(Milliseconds) FROM TRACK", "context": "CREATE TABLE TRACK (Milliseconds INTEGER)", "question": "What are the durations of the longest and the shortest tracks in milliseconds?", "dummy_table": {"Track": [{"Milliseconds": 300000}, {"Milliseconds": 240000}, {"Milliseconds": 180000}, {"Milliseconds": 360000}, {"Milliseconds": 420000}]}}, {"answer": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE", "context": "CREATE TABLE EMPLOYEE (city VARCHAR)", "question": "How many distinct cities does the employees live in?", "dummy_table": {"Employee": [{"city": "New York"}, {"city": "Los Angeles"}, {"city": "Chicago"}, {"city": "Houston"}, {"city": "Miami"}]}}, {"answer": "SELECT Phone FROM EMPLOYEE", "context": "CREATE TABLE EMPLOYEE (Phone VARCHAR)", "question": "List the phone numbers of all employees.", "dummy_table": {"Employee": [{"Phone": "555-1234"}, {"Phone": "555-5678"}, {"Phone": "555-9012"}, {"Phone": "555-3456"}, {"Phone": "555-7890"}]}}, {"answer": "SELECT T1.FirstName, T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*) >= 10", "context": "CREATE TABLE CUSTOMER (FirstName VARCHAR, SupportRepId VARCHAR); CREATE TABLE EMPLOYEE (EmployeeId VARCHAR)", "question": "Please show the employee first names and ids of employees who serve at least 10 customers.", "dummy_table": {"Customer": [{"FirstName": "Alice", "SupportRepId": "1"}, {"FirstName": "Bob", "SupportRepId": "2"}, {"FirstName": "Charlie", "SupportRepId": "1"}, {"FirstName": "David", "SupportRepId": "3"}, {"FirstName": "Eve", "SupportRepId": "2"}], "Employee": [{"EmployeeId": "1"}, {"EmployeeId": "2"}, {"EmployeeId": "3"}, {"EmployeeId": "4"}, {"EmployeeId": "5"}]}}, {"answer": "SELECT Title FROM ALBUM ORDER BY Title", "context": "CREATE TABLE ALBUM (Title VARCHAR)", "question": "Please list all album titles in alphabetical order.", "dummy_table": {"Album": [{"Title": "Album A"}, {"Title": "Album B"}, {"Title": "Album C"}, {"Title": "Album D"}, {"Title": "Album E"}]}}, {"answer": "SELECT T2.Name, T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*) >= 3 ORDER BY T2.Name", "context": "CREATE TABLE ARTIST (Name VARCHAR, ArtistID VARCHAR); CREATE TABLE ALBUM (ArtistId VARCHAR)", "question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order.", "dummy_table": {"ARTIST": [{"Name": "John Doe", "ArtistID": "123"}, {"Name": "Jane Smith", "ArtistID": "456"}, {"Name": "Alice Johnson", "ArtistID": "789"}, {"Name": "Bob Brown", "ArtistID": "101"}, {"Name": "Eva Davis", "ArtistID": "112"}], "ALBUM": []}}, {"answer": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId", "context": "CREATE TABLE ARTIST (Name VARCHAR); CREATE TABLE ALBUM (ArtistId VARCHAR); CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)", "question": "Find the names of artists that do not have any albums.", "dummy_table": {"Artist": [{"Name": "John", "ArtistId": "1"}, {"Name": "Sarah", "ArtistId": "2"}, {"Name": "Michael", "ArtistId": "3"}, {"Name": "Emily", "ArtistId": "4"}, {"Name": "David", "ArtistId": "5"}], "Album": [{"ArtistId": "1"}, {"ArtistId": "3"}, {"ArtistId": "5"}]}}, {"answer": "SELECT DISTINCT (UnitPrice) FROM TRACK", "context": "CREATE TABLE TRACK (UnitPrice VARCHAR)", "question": "What are the distinct unit prices of all tracks?", "dummy_table": {"Track": [{"UnitPrice": "0.99"}, {"UnitPrice": "1.29"}, {"UnitPrice": "1.99"}, {"UnitPrice": "2.49"}, {"UnitPrice": "2.99"}]}}, {"answer": "SELECT COUNT(*) FROM ARTIST WHERE NOT artistid IN (SELECT artistid FROM ALBUM)", "context": "CREATE TABLE ARTIST (artistid VARCHAR); CREATE TABLE ALBUM (artistid VARCHAR)", "question": "How many artists do not have any album?", "dummy_table": {"Artist": [{"artistid": "1"}, {"artistid": "2"}, {"artistid": "3"}, {"artistid": "4"}, {"artistid": "5"}], "Album": [{"artistid": "1"}, {"artistid": "2"}, {"artistid": "3"}, {"artistid": "4"}, {"artistid": "5"}]}}, {"answer": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'", "context": "CREATE TABLE Genre (GenreID VARCHAR, Name VARCHAR); CREATE TABLE Track (AlbumId VARCHAR, GenreID VARCHAR); CREATE TABLE Album (Title VARCHAR, AlbumId VARCHAR)", "question": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?", "dummy_table": {"Genre": [{"GenreID": "1", "Name": "Reggae"}, {"GenreID": "2", "Name": "Rock"}, {"GenreID": "3", "Name": "Pop"}, {"GenreID": "4", "Name": "Hip Hop"}, {"GenreID": "5", "Name": "Jazz"}], "Track": [{"AlbumId": "101", "GenreID": "1"}, {"AlbumId": "102", "GenreID": "2"}, {"AlbumId": "103", "GenreID": "1"}, {"AlbumId": "104", "GenreID": "3"}, {"AlbumId": "105", "GenreID": "2"}], "Album": [{"Title": "Album 1", "AlbumId": "101"}, {"Title": "Album 2", "AlbumId": "102"}, {"Title": "Album 3", "AlbumId": "103"}, {"Title": "Album 4", "AlbumId": "104"}, {"Title": "Album 5", "AlbumId": "105"}]}}, {"answer": "SELECT customer_phone FROM available_policies", "context": "CREATE TABLE available_policies (customer_phone VARCHAR)", "question": "Find all the phone numbers.", "dummy_table": {"available_policies": [{"customer_phone": "555-1234"}, {"customer_phone": "555-5678"}, {"customer_phone": "555-9012"}, {"customer_phone": "555-3456"}, {"customer_phone": "555-7890"}]}}, {"answer": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY COUNT(*) DESC LIMIT 1", "context": "CREATE TABLE available_policies (policy_type_code VARCHAR)", "question": "Which policy type has the most records in the database?", "dummy_table": {"available_policies": [{"policy_type_code": "A"}, {"policy_type_code": "B"}, {"policy_type_code": "C"}, {"policy_type_code": "A"}, {"policy_type_code": "B"}]}}, {"answer": "SELECT customer_phone FROM available_policies WHERE policy_type_code = (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY COUNT(*) DESC LIMIT 1)", "context": "CREATE TABLE available_policies (customer_phone VARCHAR, policy_type_code VARCHAR)", "question": "What are all the customer phone numbers under the most popular policy type?", "dummy_table": {"available_policies": [{"customer_phone": "555-1234", "policy_type_code": "A"}, {"customer_phone": "555-5678", "policy_type_code": "B"}, {"customer_phone": "555-9012", "policy_type_code": "A"}, {"customer_phone": "555-3456", "policy_type_code": "C"}, {"customer_phone": "555-7890", "policy_type_code": "A"}]}}, {"answer": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING COUNT(*) > 4", "context": "CREATE TABLE available_policies (policy_type_code VARCHAR)", "question": "Find the policy type used by more than 4 customers.", "dummy_table": {"available_policies": [{"policy_type_code": "A"}, {"policy_type_code": "B"}, {"policy_type_code": "C"}, {"policy_type_code": "D"}, {"policy_type_code": "E"}]}}, {"answer": "SELECT SUM(settlement_amount), AVG(settlement_amount) FROM settlements", "context": "CREATE TABLE settlements (settlement_amount INTEGER)", "question": "Find the total and average amount of settlements.", "dummy_table": {"settlements": [{"settlement_amount": 100}, {"settlement_amount": 200}, {"settlement_amount": 300}, {"settlement_amount": 400}, {"settlement_amount": 500}]}}]